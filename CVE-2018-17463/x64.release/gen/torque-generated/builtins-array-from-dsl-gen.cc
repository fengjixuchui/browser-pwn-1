#include "src/builtins/builtins-array-gen.h"
#include "src/builtins/builtins-utils-gen.h"
#include "src/builtins/builtins.h"
#include "src/code-factory.h"
#include "src/elements-kind.h"
#include "src/heap/factory-inl.h"
#include "src/objects.h"
#include "src/objects/bigint.h"
#include "builtins-array-from-dsl-gen.h"

namespace v8 {
namespace internal {

using Node = compiler::Node;

compiler::TNode<Number> ArrayBuiltinsFromDSLAssembler::GetLengthProperty(TNode<Context> p_context, TNode<Object> p_o) {
  TVARIABLE(Number, _return_78_impl);
  auto _return_78 = &_return_78_impl;
  USE(_return_78);
  Label label_macro_end_1293_impl(this, {_return_78}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1293 = &label_macro_end_1293_impl;
  USE(label_macro_end_1293);
  // ../../src/builtins/array.tq:17:64
  {
    // ../../src/builtins/array.tq:18:5
    {
      Label label__True_38_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_38 = &label__True_38_impl;
      USE(label__True_38);
      Label label__False_39_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label__False_39 = &label__False_39_impl;
      USE(label__False_39);
      Label label_if_done_label_576_1294_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_576_1294 = &label_if_done_label_576_1294_impl;
      USE(label_if_done_label_576_1294);
      BranchIfFastJSArray(implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Context>>(p_context), label__True_38, label__False_39);
      if (label__True_38->is_used())
      {
        BIND(label__True_38);
        // ../../src/builtins/array.tq:18:42
        {
          // ../../src/builtins/array.tq:19:7
          TNode<JSArray> t119 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>(p_o)));
          USE(implicit_cast<TNode<JSArray>>(t119));
          TNode<JSArray> a_577_impl;
          auto a_577 = &a_577_impl;
          USE(a_577);
          *a_577 = implicit_cast<TNode<JSArray>>(t119);
          // ../../src/builtins/array.tq:20:7
          TNode<Smi> t120 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*a_577))));
          *_return_78 = implicit_cast<TNode<Number>>(t120);
          Goto(label_macro_end_1293);
        }
      }
      if (label__False_39->is_used())
      {
        BIND(label__False_39);
        // ../../src/builtins/array.tq:22:7
        {
          // ../../src/builtins/array.tq:23:9
          TNode<Object> t121 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>(kLengthString())));
          USE(implicit_cast<TNode<Object>>(t121));
          TNode<Number> t122 = UncheckedCast<Number>(ToLength_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t121)));
          USE(implicit_cast<TNode<Number>>(t122));
          *_return_78 = implicit_cast<TNode<Number>>(t122);
          Goto(label_macro_end_1293);
        }
      }
    }
  }
  BIND(label_macro_end_1293);
  return implicit_cast<TNode<Number>>((*_return_78).value());
}

void ArrayBuiltinsFromDSLAssembler::EnsureWriteableFastElements(TNode<JSArray> p_array) {
  Label label_macro_end_1295_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1295 = &label_macro_end_1295_impl;
  USE(label_macro_end_1295);
  // ../../src/builtins/array.tq:27:53
  {
    // ../../src/builtins/array.tq:28:5
    // ../../src/builtins/array.tq:30:5
    TNode<FixedArrayBase> t123 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>(p_array)));
    TNode<FixedArrayBase> elements_578_impl;
    auto elements_578 = &elements_578_impl;
    USE(elements_578);
    *elements_578 = implicit_cast<TNode<FixedArrayBase>>(t123);
    // ../../src/builtins/array.tq:31:5
    {
      Label label__True_40_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_40 = &label__True_40_impl;
      USE(label__True_40);
      Label label__False_41_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_41 = &label__False_41_impl;
      USE(label__False_41);
      TNode<Map> t124 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*elements_578))));
      TNode<BoolT> t125 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>(t124), implicit_cast<TNode<Object>>(kCOWMap())));
      USE(implicit_cast<TNode<BoolT>>(t125));
      Branch(implicit_cast<TNode<BoolT>>(t125), label__True_40, label__False_41);
      if (label__True_40->is_used())
      {
        BIND(label__True_40);
        // ../../src/builtins/array.tq:31:34
        Goto(label_macro_end_1295);
      }
      BIND(label__False_41);
    }
    // ../../src/builtins/array.tq:35:5
    // ../../src/builtins/array.tq:37:5
    TNode<Smi> t126 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>(p_array)));
    TNode<Smi> length_579_impl;
    auto length_579 = &length_579_impl;
    USE(length_579);
    *length_579 = implicit_cast<TNode<Smi>>(t126);
    // ../../src/builtins/array.tq:38:5
    int31_t t127 = 0;
    TNode<Smi> t128 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t127)));
    TNode<FixedArrayBase> t129 = UncheckedCast<FixedArrayBase>(ExtractFixedArray(implicit_cast<TNode<FixedArrayBase>>((*elements_578)), implicit_cast<TNode<Smi>>(t128), implicit_cast<TNode<Smi>>((*length_579)), implicit_cast<TNode<Smi>>((*length_579)), implicit_cast<ExtractFixedArrayFlags>(ExtractFixedArrayFlag::kFixedArrays)));
    USE(implicit_cast<TNode<FixedArrayBase>>(t129));
    StoreElements(implicit_cast<TNode<JSObject>>(p_array), implicit_cast<TNode<FixedArrayBase>>(t129));
    // ../../src/builtins/array.tq:40:5
  }
  Goto(label_macro_end_1295);
  BIND(label_macro_end_1295);
}

compiler::TNode<BoolT> ArrayBuiltinsFromDSLAssembler::IsJSArray(TNode<Object> p_o) {
  TVARIABLE(BoolT, _return_79_impl);
  auto _return_79 = &_return_79_impl;
  USE(_return_79);
  Label label_macro_end_1296_impl(this, {_return_79}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1296 = &label_macro_end_1296_impl;
  USE(label_macro_end_1296);
  // ../../src/builtins/array.tq:43:36
  {
    // ../../src/builtins/array.tq:44:5
    {
      Label label_try_done_580_1297_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_580_1297 = &label_try_done_580_1297_impl;
      USE(label_try_done_580_1297);
      Label label_NotArray_42_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_NotArray_42 = &label_NotArray_42_impl;
      USE(label_NotArray_42);
      Label label_try_begin_581_1298_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_581_1298 = &label_try_begin_581_1298_impl;
      USE(label_try_begin_581_1298);
      Goto(label_try_begin_581_1298);
      if (label_try_begin_581_1298->is_used())
      {
        BIND(label_try_begin_581_1298);
        // ../../src/builtins/array.tq:44:9
        {
          // ../../src/builtins/array.tq:45:7
          TNode<JSArray> t130 = UncheckedCast<JSArray>(Cast9ATJSArray(implicit_cast<TNode<Object>>(p_o), label_NotArray_42));
          USE(implicit_cast<TNode<JSArray>>(t130));
          TNode<JSArray> array_582_impl;
          auto array_582 = &array_582_impl;
          USE(array_582);
          *array_582 = implicit_cast<TNode<JSArray>>(t130);
          // ../../src/builtins/array.tq:46:7
          TNode<BoolT> t131 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
          *_return_79 = implicit_cast<TNode<BoolT>>(t131);
          Goto(label_macro_end_1296);
        }
      }
      if (label_NotArray_42->is_used())
      {
        BIND(label_NotArray_42);
        // ../../src/builtins/array.tq:48:20
        {
          // ../../src/builtins/array.tq:49:7
          TNode<BoolT> t132 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(false)));
          *_return_79 = implicit_cast<TNode<BoolT>>(t132);
          Goto(label_macro_end_1296);
        }
      }
    }
  }
  BIND(label_macro_end_1296);
  return implicit_cast<TNode<BoolT>>((*_return_79).value());
}

void ArrayBuiltinsFromDSLAssembler::StoreArrayHole(TNode<FixedDoubleArray> p_elements, TNode<Smi> p_k) {
  Label label_macro_end_1299_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1299 = &label_macro_end_1299_impl;
  USE(label_macro_end_1299);
  // ../../src/builtins/array.tq:53:66
  {
    // ../../src/builtins/array.tq:54:5
    StoreFixedDoubleArrayHoleSmi(implicit_cast<TNode<FixedDoubleArray>>(p_elements), implicit_cast<TNode<Smi>>(p_k));
  }
}

void ArrayBuiltinsFromDSLAssembler::StoreArrayHole(TNode<FixedArray> p_elements, TNode<Smi> p_k) {
  Label label_macro_end_1300_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1300 = &label_macro_end_1300_impl;
  USE(label_macro_end_1300);
  // ../../src/builtins/array.tq:57:60
  {
    // ../../src/builtins/array.tq:58:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>(p_elements), implicit_cast<TNode<Smi>>(p_k), implicit_cast<TNode<Object>>(Hole()));
  }
}

void ArrayBuiltinsFromDSLAssembler::CopyArrayElement(TNode<FixedArray> p_elements, TNode<FixedArray> p_newElements, TNode<Smi> p_from, TNode<Smi> p_to) {
  Label label_macro_end_1301_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1301 = &label_macro_end_1301_impl;
  USE(label_macro_end_1301);
  // ../../src/builtins/array.tq:62:80
  {
    // ../../src/builtins/array.tq:63:5
    TNode<Object> t133 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_elements), implicit_cast<TNode<Smi>>(p_from)));
    TNode<Object> e_583_impl;
    auto e_583 = &e_583_impl;
    USE(e_583);
    *e_583 = implicit_cast<TNode<Object>>(t133);
    // ../../src/builtins/array.tq:64:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>(p_newElements), implicit_cast<TNode<Smi>>(p_to), implicit_cast<TNode<Object>>((*e_583)));
  }
}

void ArrayBuiltinsFromDSLAssembler::CopyArrayElement(TNode<FixedDoubleArray> p_elements, TNode<FixedDoubleArray> p_newElements, TNode<Smi> p_from, TNode<Smi> p_to) {
  Label label_macro_end_1302_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1302 = &label_macro_end_1302_impl;
  USE(label_macro_end_1302);
  // ../../src/builtins/array.tq:69:22
  {
    // ../../src/builtins/array.tq:70:5
    {
      Label label_try_done_584_1303_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_584_1303 = &label_try_done_584_1303_impl;
      USE(label_try_done_584_1303);
      Label label_FoundHole_43_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_FoundHole_43 = &label_FoundHole_43_impl;
      USE(label_FoundHole_43);
      Label label_try_begin_585_1304_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_585_1304 = &label_try_begin_585_1304_impl;
      USE(label_try_begin_585_1304);
      Goto(label_try_begin_585_1304);
      if (label_try_begin_585_1304->is_used())
      {
        BIND(label_try_begin_585_1304);
        // ../../src/builtins/array.tq:70:9
        {
          // ../../src/builtins/array.tq:71:7
          TNode<Float64T> t134 = UncheckedCast<Float64T>(LoadDoubleWithHoleCheck(implicit_cast<TNode<FixedDoubleArray>>(p_elements), implicit_cast<TNode<Smi>>(p_from), label_FoundHole_43));
          USE(implicit_cast<TNode<Float64T>>(t134));
          TNode<Float64T> floatValue_586_impl;
          auto floatValue_586 = &floatValue_586_impl;
          USE(floatValue_586);
          *floatValue_586 = implicit_cast<TNode<Float64T>>(t134);
          // ../../src/builtins/array.tq:73:7
          StoreFixedDoubleArrayElementSmi(implicit_cast<TNode<FixedDoubleArray>>(p_newElements), implicit_cast<TNode<Smi>>(p_to), implicit_cast<TNode<Float64T>>((*floatValue_586)));
        }
        Goto(label_try_done_584_1303);
      }
      if (label_FoundHole_43->is_used())
      {
        BIND(label_FoundHole_43);
        // ../../src/builtins/array.tq:75:21
        {
          // ../../src/builtins/array.tq:76:7
          StoreArrayHole(implicit_cast<TNode<FixedDoubleArray>>(p_newElements), implicit_cast<TNode<Smi>>(p_to));
        }
        Goto(label_try_done_584_1303);
      }
      BIND(label_try_done_584_1303);
    }
  }
}

compiler::TNode<Number> ArrayBuiltinsFromDSLAssembler::ConvertToRelativeIndex(TNode<Number> p_index, TNode<Number> p_length) {
  TVARIABLE(Number, _return_80_impl);
  auto _return_80 = &_return_80_impl;
  USE(_return_80);
  Label label_macro_end_1305_impl(this, {_return_80}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1305 = &label_macro_end_1305_impl;
  USE(label_macro_end_1305);
  // ../../src/builtins/array-copywithin.tq:6:71
  {
    // ../../src/builtins/array-copywithin.tq:7:5
    auto t135 = [=]() {
      TNode<Number> t137 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>(p_index), implicit_cast<TNode<Number>>(p_length)));
      USE(implicit_cast<TNode<Number>>(t137));
      int31_t t138 = 0;
      TNode<Number> t139 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t138)));
      TNode<Number> t140 = UncheckedCast<Number>(Max(implicit_cast<TNode<Number>>(t137), implicit_cast<TNode<Number>>(t139)));
      USE(implicit_cast<TNode<Number>>(t140));
      return implicit_cast<TNode<Number>>(t140);
    };
    auto t136 = [=]() {
      TNode<Number> t141 = UncheckedCast<Number>(Min(implicit_cast<TNode<Number>>(p_index), implicit_cast<TNode<Number>>(p_length)));
      USE(implicit_cast<TNode<Number>>(t141));
      return implicit_cast<TNode<Number>>(t141);
    };
    TVARIABLE(Number, t142_587_impl);
    auto t142_587 = &t142_587_impl;
    USE(t142_587);
    {
      Label label__True_44_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_44 = &label__True_44_impl;
      USE(label__True_44);
      Label label__False_45_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_45 = &label__False_45_impl;
      USE(label__False_45);
      Label label__done_588_1306_impl(this, {t142_587}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_588_1306 = &label__done_588_1306_impl;
      USE(label__done_588_1306);
      int31_t t143 = 0;
      TNode<Number> t144 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t143)));
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>(p_index), implicit_cast<TNode<Number>>(t144), label__True_44, label__False_45);
      BIND(label__True_44);
            *t142_587 = implicit_cast<TNode<Number>>(t135());
      Goto(label__done_588_1306);
      BIND(label__False_45);
            *t142_587 = implicit_cast<TNode<Number>>(t136());
      Goto(label__done_588_1306);
      BIND(label__done_588_1306);
    }
    *_return_80 = implicit_cast<TNode<Number>>((*t142_587).value());
    Goto(label_macro_end_1305);
  }
  BIND(label_macro_end_1305);
  return implicit_cast<TNode<Number>>((*_return_80).value());
}

TF_BUILTIN(ArrayPrototypeCopyWithin, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/array-copywithin.tq:12:65
  {
    // ../../src/builtins/array-copywithin.tq:14:5
    TNode<JSReceiver> t145 = UncheckedCast<JSReceiver>(ToObject_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t145));
    TNode<JSReceiver> object_589_impl;
    auto object_589 = &object_589_impl;
    USE(object_589);
    *object_589 = implicit_cast<TNode<JSReceiver>>(t145);
    // ../../src/builtins/array-copywithin.tq:17:5
    TNode<Number> t146 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_589))));
    USE(implicit_cast<TNode<Number>>(t146));
    TNode<Number> length_590_impl;
    auto length_590 = &length_590_impl;
    USE(length_590);
    *length_590 = implicit_cast<TNode<Number>>(t146);
    // ../../src/builtins/array-copywithin.tq:20:5
    int31_t t147 = 0;
    TNode<IntPtrT> t148 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t147)));
    TNode<Object> t149 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t148)));
    TNode<Number> t150 = UncheckedCast<Number>(ToInteger_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t149)));
    USE(implicit_cast<TNode<Number>>(t150));
    TNode<Number> relativeTarget_591_impl;
    auto relativeTarget_591 = &relativeTarget_591_impl;
    USE(relativeTarget_591);
    *relativeTarget_591 = implicit_cast<TNode<Number>>(t150);
    // ../../src/builtins/array-copywithin.tq:24:5
    TNode<Number> t151 = UncheckedCast<Number>(ConvertToRelativeIndex(implicit_cast<TNode<Number>>((*relativeTarget_591)), implicit_cast<TNode<Number>>((*length_590))));
    USE(implicit_cast<TNode<Number>>(t151));
    TVARIABLE(Number, to_81_impl);
    auto to_81 = &to_81_impl;
    USE(to_81);
    *to_81 = implicit_cast<TNode<Number>>(t151);
    // ../../src/builtins/array-copywithin.tq:27:5
    int31_t t152 = 1;
    TNode<IntPtrT> t153 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t152)));
    TNode<Object> t154 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t153)));
    TNode<Number> t155 = UncheckedCast<Number>(ToInteger_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t154)));
    USE(implicit_cast<TNode<Number>>(t155));
    TNode<Number> relativeStart_592_impl;
    auto relativeStart_592 = &relativeStart_592_impl;
    USE(relativeStart_592);
    *relativeStart_592 = implicit_cast<TNode<Number>>(t155);
    // ../../src/builtins/array-copywithin.tq:31:5
    TNode<Number> t156 = UncheckedCast<Number>(ConvertToRelativeIndex(implicit_cast<TNode<Number>>((*relativeStart_592)), implicit_cast<TNode<Number>>((*length_590))));
    USE(implicit_cast<TNode<Number>>(t156));
    TVARIABLE(Number, from_82_impl);
    auto from_82 = &from_82_impl;
    USE(from_82);
    *from_82 = implicit_cast<TNode<Number>>(t156);
    // ../../src/builtins/array-copywithin.tq:35:5
    TVARIABLE(Number, relativeEnd_83_impl);
    auto relativeEnd_83 = &relativeEnd_83_impl;
    USE(relativeEnd_83);
    *relativeEnd_83 = implicit_cast<TNode<Number>>((*length_590));
    // ../../src/builtins/array-copywithin.tq:36:5
    {
      Label label__True_46_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_46 = &label__True_46_impl;
      USE(label__True_46);
      Label label__False_47_impl(this, {relativeEnd_83}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_47 = &label__False_47_impl;
      USE(label__False_47);
      int31_t t157 = 2;
      TNode<IntPtrT> t158 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t157)));
      TNode<Object> t159 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t158)));
      TNode<BoolT> t160 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>(t159), implicit_cast<TNode<Object>>(Undefined())));
      USE(implicit_cast<TNode<BoolT>>(t160));
      Branch(implicit_cast<TNode<BoolT>>(t160), label__True_46, label__False_47);
      if (label__True_46->is_used())
      {
        BIND(label__True_46);
        // ../../src/builtins/array-copywithin.tq:36:36
        {
          // ../../src/builtins/array-copywithin.tq:37:7
          int31_t t161 = 2;
          TNode<IntPtrT> t162 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t161)));
          TNode<Object> t163 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t162)));
          TNode<Number> t164 = UncheckedCast<Number>(ToInteger_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t163)));
          USE(implicit_cast<TNode<Number>>(t164));
          *relativeEnd_83 = implicit_cast<TNode<Number>>(t164);
        }
        Goto(label__False_47);
      }
      BIND(label__False_47);
    }
    // ../../src/builtins/array-copywithin.tq:42:5
    TNode<Number> t165 = UncheckedCast<Number>(ConvertToRelativeIndex(implicit_cast<TNode<Number>>((*relativeEnd_83).value()), implicit_cast<TNode<Number>>((*length_590))));
    USE(implicit_cast<TNode<Number>>(t165));
    TNode<Number> final_593_impl;
    auto final_593 = &final_593_impl;
    USE(final_593);
    *final_593 = implicit_cast<TNode<Number>>(t165);
    // ../../src/builtins/array-copywithin.tq:45:5
    TNode<Number> t166 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*final_593)), implicit_cast<TNode<Number>>((*from_82).value())));
    USE(implicit_cast<TNode<Number>>(t166));
    TNode<Number> t167 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*length_590)), implicit_cast<TNode<Number>>((*to_81).value())));
    USE(implicit_cast<TNode<Number>>(t167));
    TNode<Number> t168 = UncheckedCast<Number>(Min(implicit_cast<TNode<Number>>(t166), implicit_cast<TNode<Number>>(t167)));
    USE(implicit_cast<TNode<Number>>(t168));
    TVARIABLE(Number, count_84_impl);
    auto count_84 = &count_84_impl;
    USE(count_84);
    *count_84 = implicit_cast<TNode<Number>>(t168);
    // ../../src/builtins/array-copywithin.tq:48:5
    int31_t t169 = 1;
    TVARIABLE(Number, direction_85_impl);
    auto direction_85 = &direction_85_impl;
    USE(direction_85);
    TNode<Number> t170 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t169)));
    *direction_85 = implicit_cast<TNode<Number>>(t170);
    // ../../src/builtins/array-copywithin.tq:50:5
    {
      Label label__True_48_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_48 = &label__True_48_impl;
      USE(label__True_48);
      Label label__False_49_impl(this, {direction_85, from_82, to_81}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_49 = &label__False_49_impl;
      USE(label__False_49);
      Label label__True_50_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_50 = &label__True_50_impl;
      USE(label__True_50);
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*from_82).value()), implicit_cast<TNode<Number>>((*to_81).value()), label__True_50, label__False_49);
      BIND(label__True_50);
      TNode<Number> t171 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*from_82).value()), implicit_cast<TNode<Number>>((*count_84).value())));
      USE(implicit_cast<TNode<Number>>(t171));
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*to_81).value()), implicit_cast<TNode<Number>>(t171), label__True_48, label__False_49);
      if (label__True_48->is_used())
      {
        BIND(label__True_48);
        // ../../src/builtins/array-copywithin.tq:50:43
        {
          // ../../src/builtins/array-copywithin.tq:52:7
          int31_t t172 = -1;
          TNode<Number> t173 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t172)));
          *direction_85 = implicit_cast<TNode<Number>>(t173);
          // ../../src/builtins/array-copywithin.tq:55:7
          TNode<Number> t174 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*from_82).value()), implicit_cast<TNode<Number>>((*count_84).value())));
          USE(implicit_cast<TNode<Number>>(t174));
          int31_t t175 = 1;
          TNode<Number> t176 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t175)));
          TNode<Number> t177 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t174), implicit_cast<TNode<Number>>(t176)));
          USE(implicit_cast<TNode<Number>>(t177));
          *from_82 = implicit_cast<TNode<Number>>(t177);
          // ../../src/builtins/array-copywithin.tq:58:7
          TNode<Number> t178 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*to_81).value()), implicit_cast<TNode<Number>>((*count_84).value())));
          USE(implicit_cast<TNode<Number>>(t178));
          int31_t t179 = 1;
          TNode<Number> t180 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t179)));
          TNode<Number> t181 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t178), implicit_cast<TNode<Number>>(t180)));
          USE(implicit_cast<TNode<Number>>(t181));
          *to_81 = implicit_cast<TNode<Number>>(t181);
        }
        Goto(label__False_49);
      }
      BIND(label__False_49);
    }
    // ../../src/builtins/array-copywithin.tq:62:5
    {
      Label label__True_51_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_51 = &label__True_51_impl;
      USE(label__True_51);
      Label label__False_52_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_52 = &label__False_52_impl;
      USE(label__False_52);
      Label label_header_594_1307_impl(this, {count_84, from_82, to_81}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_594_1307 = &label_header_594_1307_impl;
      USE(label_header_594_1307);
      Goto(label_header_594_1307);
      BIND(label_header_594_1307);
      int31_t t182 = 0;
      TNode<Number> t183 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t182)));
      BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>((*count_84).value()), implicit_cast<TNode<Number>>(t183), label__True_51, label__False_52);
      if (label__True_51->is_used())
      {
        BIND(label__True_51);
        // ../../src/builtins/array-copywithin.tq:62:23
        {
          // ../../src/builtins/array-copywithin.tq:66:7
          TNode<Oddball> t184 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*object_589)), implicit_cast<TNode<Object>>((*from_82).value())));
          USE(implicit_cast<TNode<Oddball>>(t184));
          TNode<Oddball> fromPresent_595_impl;
          auto fromPresent_595 = &fromPresent_595_impl;
          USE(fromPresent_595);
          *fromPresent_595 = implicit_cast<TNode<Oddball>>(t184);
          // ../../src/builtins/array-copywithin.tq:69:7
          {
            Label label__True_53_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_53 = &label__True_53_impl;
            USE(label__True_53);
            Label label__False_54_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_54 = &label__False_54_impl;
            USE(label__False_54);
            Label label_if_done_label_596_1308_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_596_1308 = &label_if_done_label_596_1308_impl;
            USE(label_if_done_label_596_1308);
            TNode<BoolT> t185 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*fromPresent_595)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t185));
            Branch(implicit_cast<TNode<BoolT>>(t185), label__True_53, label__False_54);
            if (label__True_53->is_used())
            {
              BIND(label__True_53);
              // ../../src/builtins/array-copywithin.tq:69:32
              {
                // ../../src/builtins/array-copywithin.tq:71:9
                TNode<Object> t186 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_589)), implicit_cast<TNode<Object>>((*from_82).value())));
                USE(implicit_cast<TNode<Object>>(t186));
                TNode<Object> fromVal_597_impl;
                auto fromVal_597 = &fromVal_597_impl;
                USE(fromVal_597);
                *fromVal_597 = implicit_cast<TNode<Object>>(t186);
                // ../../src/builtins/array-copywithin.tq:74:9
                CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_589)), implicit_cast<TNode<Object>>((*to_81).value()), implicit_cast<TNode<Object>>((*fromVal_597)));
              }
              Goto(label_if_done_label_596_1308);
            }
            if (label__False_54->is_used())
            {
              BIND(label__False_54);
              // ../../src/builtins/array-copywithin.tq:75:14
              {
                // ../../src/builtins/array-copywithin.tq:77:9
                TNode<Smi> t187 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
                CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_589)), implicit_cast<TNode<Object>>((*to_81).value()), implicit_cast<TNode<Smi>>(t187));
              }
              Goto(label_if_done_label_596_1308);
            }
            BIND(label_if_done_label_596_1308);
          }
          // ../../src/builtins/array-copywithin.tq:81:7
          TNode<Number> t188 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*from_82).value()), implicit_cast<TNode<Number>>((*direction_85).value())));
          USE(implicit_cast<TNode<Number>>(t188));
          *from_82 = implicit_cast<TNode<Number>>(t188);
          // ../../src/builtins/array-copywithin.tq:84:7
          TNode<Number> t189 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*to_81).value()), implicit_cast<TNode<Number>>((*direction_85).value())));
          USE(implicit_cast<TNode<Number>>(t189));
          *to_81 = implicit_cast<TNode<Number>>(t189);
          // ../../src/builtins/array-copywithin.tq:87:7
          TNode<Number> t190 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t191 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*count_84).value()), implicit_cast<TNode<Number>>(t190)));
          *count_84 = implicit_cast<TNode<Number>>(t191);
        }
        Goto(label_header_594_1307);
      }
      BIND(label__False_52);
    }
    // ../../src/builtins/array-copywithin.tq:91:5
    arguments->PopAndReturn(implicit_cast<TNode<Object>>((*object_589)));
  }
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::ArrayForEachTorqueContinuation(TNode<Context> p_context, TNode<JSReceiver> p_o, TNode<Number> p_len, TNode<JSReceiver> p_callbackfn, TNode<Object> p_thisArg, TNode<Number> p_initialK) {
  TVARIABLE(Object, _return_86_impl);
  auto _return_86 = &_return_86_impl;
  USE(_return_86);
  Label label_macro_end_1309_impl(this, {_return_86}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1309 = &label_macro_end_1309_impl;
  USE(label_macro_end_1309);
  // ../../src/builtins/array-foreach.tq:8:50
  {
    // ../../src/builtins/array-foreach.tq:11:5
    TVARIABLE(Number, k_87_impl);
    auto k_87 = &k_87_impl;
    USE(k_87);
    *k_87 = implicit_cast<TNode<Number>>(p_initialK);
    Label label__True_55_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label__True_55 = &label__True_55_impl;
    USE(label__True_55);
    Label label__False_56_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label__False_56 = &label__False_56_impl;
    USE(label__False_56);
    Label label_header_598_1310_impl(this, {k_87}, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_header_598_1310 = &label_header_598_1310_impl;
    USE(label_header_598_1310);
    Goto(label_header_598_1310);
    BIND(label_header_598_1310);
    Label label_action_599_1311_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_action_599_1311 = &label_action_599_1311_impl;
    USE(label_action_599_1311);
    BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*k_87).value()), implicit_cast<TNode<Number>>(p_len), label__True_55, label__False_56);
    if (label__True_55->is_used())
    {
      BIND(label__True_55);
      // ../../src/builtins/array-foreach.tq:11:56
      {
        // ../../src/builtins/array-foreach.tq:17:7
        TNode<Oddball> t192 = UncheckedCast<Oddball>(HasProperty_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Object>>((*k_87).value())));
        USE(implicit_cast<TNode<Oddball>>(t192));
        TNode<Oddball> kPresent_600_impl;
        auto kPresent_600 = &kPresent_600_impl;
        USE(kPresent_600);
        *kPresent_600 = implicit_cast<TNode<Oddball>>(t192);
        // ../../src/builtins/array-foreach.tq:20:7
        {
          Label label__True_57_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_57 = &label__True_57_impl;
          USE(label__True_57);
          Label label__False_58_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_58 = &label__False_58_impl;
          USE(label__False_58);
          TNode<BoolT> t193 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*kPresent_600)), implicit_cast<TNode<Object>>(True())));
          USE(implicit_cast<TNode<BoolT>>(t193));
          Branch(implicit_cast<TNode<BoolT>>(t193), label__True_57, label__False_58);
          if (label__True_57->is_used())
          {
            BIND(label__True_57);
            // ../../src/builtins/array-foreach.tq:20:29
            {
              // ../../src/builtins/array-foreach.tq:22:9
              TNode<Object> t194 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*k_87).value())));
              USE(implicit_cast<TNode<Object>>(t194));
              TNode<Object> kValue_601_impl;
              auto kValue_601 = &kValue_601_impl;
              USE(kValue_601);
              *kValue_601 = implicit_cast<TNode<Object>>(t194);
              // ../../src/builtins/array-foreach.tq:25:9
              TNode<Object> t195 = UncheckedCast<Object>(Call(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_callbackfn), implicit_cast<TNode<Object>>(p_thisArg), implicit_cast<TNode<Object>>((*kValue_601)), implicit_cast<TNode<Object>>((*k_87).value()), implicit_cast<TNode<Object>>(p_o)));
              USE(implicit_cast<TNode<Object>>(t195));
            }
            Goto(label__False_58);
          }
          BIND(label__False_58);
        }
      }
      Goto(label_action_599_1311);
    }
    {
      BIND(label_action_599_1311);
      int31_t t196 = 1;
      TNode<Number> t197 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t196)));
      TNode<Number> t198 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_87).value()), implicit_cast<TNode<Number>>(t197)));
      USE(implicit_cast<TNode<Number>>(t198));
      *k_87 = implicit_cast<TNode<Number>>(t198);
      Goto(label_header_598_1310);
    }
    BIND(label__False_56);
    // ../../src/builtins/array-foreach.tq:30:5
    *_return_86 = implicit_cast<TNode<Object>>(Undefined());
    Goto(label_macro_end_1309);
  }
  BIND(label_macro_end_1309);
  return implicit_cast<TNode<Object>>((*_return_86).value());
}

TF_BUILTIN(ArrayForEachLoopEagerDeoptContinuation, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<Object> p_receiver = UncheckedCast<Object>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_callback = UncheckedCast<Object>(Parameter(Descriptor::kCallback));
  USE(p_callback);
  TNode<Object> p_thisArg = UncheckedCast<Object>(Parameter(Descriptor::kThisArg));
  USE(p_thisArg);
  TNode<Object> p_initialK = UncheckedCast<Object>(Parameter(Descriptor::kInitialK));
  USE(p_initialK);
  TNode<Object> p_length = UncheckedCast<Object>(Parameter(Descriptor::kLength));
  USE(p_length);
  // ../../src/builtins/array-foreach.tq:35:49
  {
    // ../../src/builtins/array-foreach.tq:39:5
    TNode<JSReceiver> t199 = UncheckedCast<JSReceiver>(UnsafeCast12ATJSReceiver(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t199));
    TNode<JSReceiver> jsreceiver_602_impl;
    auto jsreceiver_602 = &jsreceiver_602_impl;
    USE(jsreceiver_602);
    *jsreceiver_602 = implicit_cast<TNode<JSReceiver>>(t199);
    // ../../src/builtins/array-foreach.tq:40:5
    TNode<Object> t200 = UncheckedCast<Object>(CallBuiltin(Builtins::kArrayForEachLoopContinuation, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*jsreceiver_602)), implicit_cast<TNode<Object>>(p_callback), implicit_cast<TNode<Object>>(p_thisArg), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<TNode<Object>>((*jsreceiver_602)), implicit_cast<TNode<Object>>(p_initialK), implicit_cast<TNode<Object>>(p_length), implicit_cast<TNode<Object>>(Undefined())));
    USE(implicit_cast<TNode<Object>>(t200));
    Return(implicit_cast<TNode<Object>>(t200));
  }
}

TF_BUILTIN(ArrayForEachLoopLazyDeoptContinuation, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<Object> p_receiver = UncheckedCast<Object>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_callback = UncheckedCast<Object>(Parameter(Descriptor::kCallback));
  USE(p_callback);
  TNode<Object> p_thisArg = UncheckedCast<Object>(Parameter(Descriptor::kThisArg));
  USE(p_thisArg);
  TNode<Object> p_initialK = UncheckedCast<Object>(Parameter(Descriptor::kInitialK));
  USE(p_initialK);
  TNode<Object> p_length = UncheckedCast<Object>(Parameter(Descriptor::kLength));
  USE(p_length);
  TNode<Object> p_result = UncheckedCast<Object>(Parameter(Descriptor::kResult));
  USE(p_result);
  // ../../src/builtins/array-foreach.tq:47:65
  {
    // ../../src/builtins/array-foreach.tq:51:5
    TNode<JSReceiver> t201 = UncheckedCast<JSReceiver>(UnsafeCast12ATJSReceiver(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t201));
    TNode<JSReceiver> jsreceiver_603_impl;
    auto jsreceiver_603 = &jsreceiver_603_impl;
    USE(jsreceiver_603);
    *jsreceiver_603 = implicit_cast<TNode<JSReceiver>>(t201);
    // ../../src/builtins/array-foreach.tq:52:5
    TNode<Object> t202 = UncheckedCast<Object>(CallBuiltin(Builtins::kArrayForEachLoopContinuation, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*jsreceiver_603)), implicit_cast<TNode<Object>>(p_callback), implicit_cast<TNode<Object>>(p_thisArg), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<TNode<Object>>((*jsreceiver_603)), implicit_cast<TNode<Object>>(p_initialK), implicit_cast<TNode<Object>>(p_length), implicit_cast<TNode<Object>>(Undefined())));
    USE(implicit_cast<TNode<Object>>(t202));
    Return(implicit_cast<TNode<Object>>(t202));
  }
}

TF_BUILTIN(ArrayForEachLoopContinuation, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<JSReceiver> p_receiver = UncheckedCast<JSReceiver>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_callback = UncheckedCast<Object>(Parameter(Descriptor::kCallback));
  USE(p_callback);
  TNode<Object> p_thisArg = UncheckedCast<Object>(Parameter(Descriptor::kThisArg));
  USE(p_thisArg);
  TNode<Object> p_array = UncheckedCast<Object>(Parameter(Descriptor::kArray));
  USE(p_array);
  TNode<Object> p_object = UncheckedCast<Object>(Parameter(Descriptor::kObject));
  USE(p_object);
  TNode<Object> p_initialK = UncheckedCast<Object>(Parameter(Descriptor::kInitialK));
  USE(p_initialK);
  TNode<Object> p_length = UncheckedCast<Object>(Parameter(Descriptor::kLength));
  USE(p_length);
  TNode<Object> p_to = UncheckedCast<Object>(Parameter(Descriptor::kTo));
  USE(p_to);
  // ../../src/builtins/array-foreach.tq:60:27
  {
    // ../../src/builtins/array-foreach.tq:61:5
    {
      Label label_try_done_604_1312_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_604_1312 = &label_try_done_604_1312_impl;
      USE(label_try_done_604_1312);
      Label label_Unexpected_59_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label_Unexpected_59 = &label_Unexpected_59_impl;
      USE(label_Unexpected_59);
      Label label_try_begin_605_1313_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_605_1313 = &label_try_begin_605_1313_impl;
      USE(label_try_begin_605_1313);
      Goto(label_try_begin_605_1313);
      if (label_try_begin_605_1313->is_used())
      {
        BIND(label_try_begin_605_1313);
        // ../../src/builtins/array-foreach.tq:61:9
        {
          // ../../src/builtins/array-foreach.tq:62:7
          TNode<JSReceiver> t203 = UncheckedCast<JSReceiver>(Cast45UT17ATJSBoundFunction12ATJSFunction9ATJSProxy(implicit_cast<TNode<Object>>(p_callback), label_Unexpected_59));
          USE(implicit_cast<TNode<JSReceiver>>(t203));
          TNode<JSReceiver> callbackfn_606_impl;
          auto callbackfn_606 = &callbackfn_606_impl;
          USE(callbackfn_606);
          *callbackfn_606 = implicit_cast<TNode<JSReceiver>>(t203);
          // ../../src/builtins/array-foreach.tq:64:7
          TNode<Number> t204 = UncheckedCast<Number>(Cast22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Object>>(p_initialK), label_Unexpected_59));
          USE(implicit_cast<TNode<Number>>(t204));
          TNode<Number> k_607_impl;
          auto k_607 = &k_607_impl;
          USE(k_607);
          *k_607 = implicit_cast<TNode<Number>>(t204);
          // ../../src/builtins/array-foreach.tq:65:7
          TNode<Number> t205 = UncheckedCast<Number>(Cast22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Object>>(p_length), label_Unexpected_59));
          USE(implicit_cast<TNode<Number>>(t205));
          TNode<Number> numberLength_608_impl;
          auto numberLength_608 = &numberLength_608_impl;
          USE(numberLength_608);
          *numberLength_608 = implicit_cast<TNode<Number>>(t205);
          // ../../src/builtins/array-foreach.tq:67:7
          TNode<Object> t206 = UncheckedCast<Object>(ArrayForEachTorqueContinuation(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_receiver), implicit_cast<TNode<Number>>((*numberLength_608)), implicit_cast<TNode<JSReceiver>>((*callbackfn_606)), implicit_cast<TNode<Object>>(p_thisArg), implicit_cast<TNode<Number>>((*k_607))));
          USE(implicit_cast<TNode<Object>>(t206));
          Return(implicit_cast<TNode<Object>>(t206));
        }
      }
      if (label_Unexpected_59->is_used())
      {
        BIND(label_Unexpected_59);
        // ../../src/builtins/array-foreach.tq:70:22
        {
          // ../../src/builtins/array-foreach.tq:71:7
          Unreachable();
        }
      }
    }
  }
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::FastArrayForEach(TNode<Context> p_context, TNode<JSReceiver> p_o, TNode<Number> p_len, TNode<JSReceiver> p_callbackfn, TNode<Object> p_thisArg, Label* label_Bailout_60, TVariable<Smi>* Bailout0_88) {
  TVARIABLE(Object, _return_89_impl);
  auto _return_89 = &_return_89_impl;
  USE(_return_89);
  Label label_macro_end_1314_impl(this, {_return_89}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1314 = &label_macro_end_1314_impl;
  USE(label_macro_end_1314);
  // ../../src/builtins/array-foreach.tq:112:27
  {
    // ../../src/builtins/array-foreach.tq:113:5
    int31_t t207 = 0;
    TVARIABLE(Smi, k_90_impl);
    auto k_90 = &k_90_impl;
    USE(k_90);
    TNode<Smi> t208 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t207)));
    *k_90 = implicit_cast<TNode<Smi>>(t208);
    // ../../src/builtins/array-foreach.tq:114:5
    {
      Label label_try_done_609_1315_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_609_1315 = &label_try_done_609_1315_impl;
      USE(label_try_done_609_1315);
      Label label_Slow_61_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label_Slow_61 = &label_Slow_61_impl;
      USE(label_Slow_61);
      Label label_try_begin_610_1316_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_610_1316 = &label_try_begin_610_1316_impl;
      USE(label_try_begin_610_1316);
      Goto(label_try_begin_610_1316);
      if (label_try_begin_610_1316->is_used())
      {
        BIND(label_try_begin_610_1316);
        // ../../src/builtins/array-foreach.tq:114:9
        {
          // ../../src/builtins/array-foreach.tq:115:7
          TNode<Smi> t209 = UncheckedCast<Smi>(Cast5ATSmi(implicit_cast<TNode<Object>>(p_len), label_Slow_61));
          USE(implicit_cast<TNode<Smi>>(t209));
          TNode<Smi> smiLen_611_impl;
          auto smiLen_611 = &smiLen_611_impl;
          USE(smiLen_611);
          *smiLen_611 = implicit_cast<TNode<Smi>>(t209);
          // ../../src/builtins/array-foreach.tq:116:7
          TNode<JSArray> t210 = UncheckedCast<JSArray>(Cast9ATJSArray(implicit_cast<TNode<HeapObject>>(p_o), label_Slow_61));
          USE(implicit_cast<TNode<JSArray>>(t210));
          TNode<JSArray> a_612_impl;
          auto a_612 = &a_612_impl;
          USE(a_612);
          *a_612 = implicit_cast<TNode<JSArray>>(t210);
          // ../../src/builtins/array-foreach.tq:117:7
          TNode<Map> t211 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*a_612))));
          TNode<Map> map_613_impl;
          auto map_613 = &map_613_impl;
          USE(map_613);
          *map_613 = implicit_cast<TNode<Map>>(t211);
          // ../../src/builtins/array-foreach.tq:119:7
          {
            Label label__True_62_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_62 = &label__True_62_impl;
            USE(label__True_62);
            Label label__False_63_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_63 = &label__False_63_impl;
            USE(label__False_63);
            TNode<BoolT> t212 = UncheckedCast<BoolT>(IsPrototypeInitialArrayPrototype(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Map>>((*map_613))));
            USE(implicit_cast<TNode<BoolT>>(t212));
            TNode<BoolT> t213 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t212)));
            USE(implicit_cast<TNode<BoolT>>(t213));
            Branch(implicit_cast<TNode<BoolT>>(t213), label__True_62, label__False_63);
            if (label__True_62->is_used())
            {
              BIND(label__True_62);
              // ../../src/builtins/array-foreach.tq:119:60
              Goto(label_Slow_61);
            }
            BIND(label__False_63);
          }
          // ../../src/builtins/array-foreach.tq:120:7
          TNode<Int32T> t214 = UncheckedCast<Int32T>(LoadMapElementsKind(implicit_cast<TNode<Map>>((*map_613))));
          TNode<Int32T> elementsKind_614_impl;
          auto elementsKind_614 = &elementsKind_614_impl;
          USE(elementsKind_614);
          *elementsKind_614 = implicit_cast<TNode<Int32T>>(t214);
          // ../../src/builtins/array-foreach.tq:121:7
          {
            Label label__True_64_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_64 = &label__True_64_impl;
            USE(label__True_64);
            Label label__False_65_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_65 = &label__False_65_impl;
            USE(label__False_65);
            TNode<BoolT> t215 = UncheckedCast<BoolT>(IsFastElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_614))));
            USE(implicit_cast<TNode<BoolT>>(t215));
            TNode<BoolT> t216 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t215)));
            USE(implicit_cast<TNode<BoolT>>(t216));
            Branch(implicit_cast<TNode<BoolT>>(t216), label__True_64, label__False_65);
            if (label__True_64->is_used())
            {
              BIND(label__True_64);
              // ../../src/builtins/array-foreach.tq:121:46
              Goto(label_Slow_61);
            }
            BIND(label__False_65);
          }
          // ../../src/builtins/array-foreach.tq:123:7
          {
            Label label__True_66_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_66 = &label__True_66_impl;
            USE(label__True_66);
            Label label__False_67_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_67 = &label__False_67_impl;
            USE(label__False_67);
            Label label_if_done_label_615_1317_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_615_1317 = &label_if_done_label_615_1317_impl;
            USE(label_if_done_label_615_1317);
            TNode<BoolT> t217 = UncheckedCast<BoolT>(IsElementsKindGreaterThan(implicit_cast<TNode<Int32T>>((*elementsKind_614)), implicit_cast<ElementsKind>(HOLEY_ELEMENTS)));
            USE(implicit_cast<TNode<BoolT>>(t217));
            Branch(implicit_cast<TNode<BoolT>>(t217), label__True_66, label__False_67);
            if (label__True_66->is_used())
            {
              BIND(label__True_66);
              // ../../src/builtins/array-foreach.tq:123:68
              {
                // ../../src/builtins/array-foreach.tq:124:9
                VisitAllElements18ATFixedDoubleArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSArray>>((*a_612)), implicit_cast<TNode<Smi>>((*smiLen_611)), implicit_cast<TNode<JSReceiver>>(p_callbackfn), implicit_cast<TNode<Object>>(p_thisArg), label_Bailout_60, Bailout0_88);
              }
              Goto(label_if_done_label_615_1317);
            }
            if (label__False_67->is_used())
            {
              BIND(label__False_67);
              // ../../src/builtins/array-foreach.tq:127:14
              {
                // ../../src/builtins/array-foreach.tq:128:9
                VisitAllElements12ATFixedArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSArray>>((*a_612)), implicit_cast<TNode<Smi>>((*smiLen_611)), implicit_cast<TNode<JSReceiver>>(p_callbackfn), implicit_cast<TNode<Object>>(p_thisArg), label_Bailout_60, Bailout0_88);
              }
              Goto(label_if_done_label_615_1317);
            }
            BIND(label_if_done_label_615_1317);
          }
        }
        Goto(label_try_done_609_1315);
      }
      if (label_Slow_61->is_used())
      {
        BIND(label_Slow_61);
        // ../../src/builtins/array-foreach.tq:132:16
        {
          // ../../src/builtins/array-foreach.tq:133:7
          *Bailout0_88 = implicit_cast<TNode<Smi>>((*k_90).value());
          Goto(label_Bailout_60);
        }
      }
      BIND(label_try_done_609_1315);
    }
    // ../../src/builtins/array-foreach.tq:135:5
    *_return_89 = implicit_cast<TNode<Object>>(Undefined());
    Goto(label_macro_end_1314);
  }
  BIND(label_macro_end_1314);
  return implicit_cast<TNode<Object>>((*_return_89).value());
}

TF_BUILTIN(ArrayForEach, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/array-foreach.tq:140:65
  {
    // ../../src/builtins/array-foreach.tq:141:5
    {
      Label label_try_done_616_1318_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_616_1318 = &label_try_done_616_1318_impl;
      USE(label_try_done_616_1318);
      Label label_TypeError_68_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label_TypeError_68 = &label_TypeError_68_impl;
      USE(label_TypeError_68);
      Label label_NullOrUndefinedError_69_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label_NullOrUndefinedError_69 = &label_NullOrUndefinedError_69_impl;
      USE(label_NullOrUndefinedError_69);
      Label label_try_begin_617_1319_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_617_1319 = &label_try_begin_617_1319_impl;
      USE(label_try_begin_617_1319);
      Goto(label_try_begin_617_1319);
      if (label_try_begin_617_1319->is_used())
      {
        BIND(label_try_begin_617_1319);
        // ../../src/builtins/array-foreach.tq:141:9
        {
          // ../../src/builtins/array-foreach.tq:142:7
          {
            Label label__True_70_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_70 = &label__True_70_impl;
            USE(label__True_70);
            Label label__False_71_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_71 = &label__False_71_impl;
            USE(label__False_71);
            TNode<BoolT> t218 = UncheckedCast<BoolT>(IsNullOrUndefined(implicit_cast<TNode<Object>>(p_receiver)));
            USE(implicit_cast<TNode<BoolT>>(t218));
            Branch(implicit_cast<TNode<BoolT>>(t218), label__True_70, label__False_71);
            if (label__True_70->is_used())
            {
              BIND(label__True_70);
              // ../../src/builtins/array-foreach.tq:142:40
              {
                // ../../src/builtins/array-foreach.tq:143:9
                Goto(label_NullOrUndefinedError_69);
              }
            }
            BIND(label__False_71);
          }
          // ../../src/builtins/array-foreach.tq:147:7
          TNode<JSReceiver> t219 = UncheckedCast<JSReceiver>(ToObject_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
          USE(implicit_cast<TNode<JSReceiver>>(t219));
          TNode<JSReceiver> o_618_impl;
          auto o_618 = &o_618_impl;
          USE(o_618);
          *o_618 = implicit_cast<TNode<JSReceiver>>(t219);
          // ../../src/builtins/array-foreach.tq:150:7
          TNode<Number> t220 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*o_618))));
          USE(implicit_cast<TNode<Number>>(t220));
          TNode<Number> len_619_impl;
          auto len_619 = &len_619_impl;
          USE(len_619);
          *len_619 = implicit_cast<TNode<Number>>(t220);
          // ../../src/builtins/array-foreach.tq:153:7
          {
            Label label__True_72_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_72 = &label__True_72_impl;
            USE(label__True_72);
            Label label__False_73_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_73 = &label__False_73_impl;
            USE(label__False_73);
            TNode<IntPtrT> t221 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
            int31_t t222 = 0;
            TNode<IntPtrT> t223 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t222)));
            TNode<BoolT> t224 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<IntPtrT>>(t221), implicit_cast<TNode<IntPtrT>>(t223)));
            USE(implicit_cast<TNode<BoolT>>(t224));
            Branch(implicit_cast<TNode<BoolT>>(t224), label__True_72, label__False_73);
            if (label__True_72->is_used())
            {
              BIND(label__True_72);
              // ../../src/builtins/array-foreach.tq:153:34
              {
                // ../../src/builtins/array-foreach.tq:154:9
                Goto(label_TypeError_68);
              }
            }
            BIND(label__False_73);
          }
          // ../../src/builtins/array-foreach.tq:156:7
          int31_t t225 = 0;
          TNode<IntPtrT> t226 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t225)));
          TNode<Object> t227 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t226)));
          TNode<JSReceiver> t228 = UncheckedCast<JSReceiver>(Cast45UT17ATJSBoundFunction12ATJSFunction9ATJSProxy(implicit_cast<TNode<Object>>(t227), label_TypeError_68));
          USE(implicit_cast<TNode<JSReceiver>>(t228));
          TNode<JSReceiver> callbackfn_620_impl;
          auto callbackfn_620 = &callbackfn_620_impl;
          USE(callbackfn_620);
          *callbackfn_620 = implicit_cast<TNode<JSReceiver>>(t228);
          // ../../src/builtins/array-foreach.tq:160:7
          auto t229 = [=]() {
            int31_t t231 = 1;
            TNode<IntPtrT> t232 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t231)));
            TNode<Object> t233 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t232)));
            return implicit_cast<TNode<Object>>(t233);
          };
          auto t230 = [=]() {
            return implicit_cast<TNode<Oddball>>(Undefined());
          };
          TVARIABLE(Object, t234_621_impl);
          auto t234_621 = &t234_621_impl;
          USE(t234_621);
          {
            Label label__True_74_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_74 = &label__True_74_impl;
            USE(label__True_74);
            Label label__False_75_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_75 = &label__False_75_impl;
            USE(label__False_75);
            Label label__done_622_1320_impl(this, {t234_621}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__done_622_1320 = &label__done_622_1320_impl;
            USE(label__done_622_1320);
            TNode<IntPtrT> t235 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
            int31_t t236 = 1;
            TNode<IntPtrT> t237 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t236)));
            TNode<BoolT> t238 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t235), implicit_cast<TNode<IntPtrT>>(t237)));
            USE(implicit_cast<TNode<BoolT>>(t238));
            Branch(implicit_cast<TNode<BoolT>>(t238), label__True_74, label__False_75);
            BIND(label__True_74);
                        *t234_621 = implicit_cast<TNode<Object>>(t229());
            Goto(label__done_622_1320);
            BIND(label__False_75);
                        *t234_621 = implicit_cast<TNode<Object>>(t230());
            Goto(label__done_622_1320);
            BIND(label__done_622_1320);
          }
          TNode<Object> thisArg_623_impl;
          auto thisArg_623 = &thisArg_623_impl;
          USE(thisArg_623);
          *thisArg_623 = implicit_cast<TNode<Object>>((*t234_621).value());
          // ../../src/builtins/array-foreach.tq:163:7
          int31_t t239 = 0;
          TVARIABLE(Number, k_91_impl);
          auto k_91 = &k_91_impl;
          USE(k_91);
          TNode<Number> t240 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t239)));
          *k_91 = implicit_cast<TNode<Number>>(t240);
          // ../../src/builtins/array-foreach.tq:164:7
          {
            Label label_try_done_624_1321_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_try_done_624_1321 = &label_try_done_624_1321_impl;
            USE(label_try_done_624_1321);
            Label label_Bailout_76_impl(this, compiler::CodeAssemblerLabel::kDeferred);
            Label* label_Bailout_76 = &label_Bailout_76_impl;
            USE(label_Bailout_76);
            TVARIABLE(Smi, kValue_92_impl);
            auto kValue_92 = &kValue_92_impl;
            USE(kValue_92);
            Label label_try_begin_625_1322_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_try_begin_625_1322 = &label_try_begin_625_1322_impl;
            USE(label_try_begin_625_1322);
            Goto(label_try_begin_625_1322);
            if (label_try_begin_625_1322->is_used())
            {
              BIND(label_try_begin_625_1322);
              // ../../src/builtins/array-foreach.tq:164:11
              {
                // ../../src/builtins/array-foreach.tq:165:9
                TNode<Object> t241 = UncheckedCast<Object>(FastArrayForEach(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*o_618)), implicit_cast<TNode<Number>>((*len_619)), implicit_cast<TNode<JSReceiver>>((*callbackfn_620)), implicit_cast<TNode<Object>>((*thisArg_623)), label_Bailout_76, kValue_92));
                USE(implicit_cast<TNode<Object>>(t241));
                arguments->PopAndReturn(implicit_cast<TNode<Object>>(t241));
              }
            }
            if (label_Bailout_76->is_used())
            {
              BIND(label_Bailout_76);
              // ../../src/builtins/array-foreach.tq:168:34
              {
                // ../../src/builtins/array-foreach.tq:169:9
                *k_91 = implicit_cast<TNode<Number>>((*kValue_92).value());
              }
              Goto(label_try_done_624_1321);
            }
            BIND(label_try_done_624_1321);
          }
          // ../../src/builtins/array-foreach.tq:172:7
          TNode<Object> t242 = UncheckedCast<Object>(ArrayForEachTorqueContinuation(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*o_618)), implicit_cast<TNode<Number>>((*len_619)), implicit_cast<TNode<JSReceiver>>((*callbackfn_620)), implicit_cast<TNode<Object>>((*thisArg_623)), implicit_cast<TNode<Number>>((*k_91).value())));
          USE(implicit_cast<TNode<Object>>(t242));
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(t242));
        }
      }
      if (label_TypeError_68->is_used())
      {
        BIND(label_TypeError_68);
        // ../../src/builtins/array-foreach.tq:175:21
        {
          // ../../src/builtins/array-foreach.tq:176:7
          int31_t t243 = 0;
          TNode<IntPtrT> t244 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t243)));
          TNode<Object> t245 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t244)));
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kCalledNonCallable), implicit_cast<TNode<Object>>(t245));
        }
      }
      if (label_NullOrUndefinedError_69->is_used())
      {
        BIND(label_NullOrUndefinedError_69);
        // ../../src/builtins/array-foreach.tq:178:32
        {
          // ../../src/builtins/array-foreach.tq:179:7
          const char* t246 = "Array.prototype.forEach";
          TNode<Object> t247 = UncheckedCast<Object>(FromConstexpr22UT12ATHeapObject5ATSmi(implicit_cast<const char*>(t246)));
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kCalledOnNullOrUndefined), implicit_cast<TNode<Object>>(t247));
        }
      }
    }
  }
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::LoadWithHoleCheck12ATFixedArray(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index, Label* label_IfHole_77) {
  TVARIABLE(Object, _return_93_impl);
  auto _return_93 = &_return_93_impl;
  USE(_return_93);
  Label label_macro_end_1323_impl(this, {_return_93}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1323 = &label_macro_end_1323_impl;
  USE(label_macro_end_1323);
  // ../../src/builtins/array-lastindexof.tq:11:21
  {
    // ../../src/builtins/array-lastindexof.tq:12:5
    TNode<FixedArray> t248 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t248));
    TNode<FixedArray> elements_626_impl;
    auto elements_626 = &elements_626_impl;
    USE(elements_626);
    *elements_626 = implicit_cast<TNode<FixedArray>>(t248);
    // ../../src/builtins/array-lastindexof.tq:13:5
    TNode<Object> t249 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*elements_626)), implicit_cast<TNode<Smi>>(p_index)));
    TNode<Object> element_627_impl;
    auto element_627 = &element_627_impl;
    USE(element_627);
    *element_627 = implicit_cast<TNode<Object>>(t249);
    // ../../src/builtins/array-lastindexof.tq:14:5
    {
      Label label__True_78_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_78 = &label__True_78_impl;
      USE(label__True_78);
      Label label__False_79_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_79 = &label__False_79_impl;
      USE(label__False_79);
      TNode<BoolT> t250 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*element_627)), implicit_cast<TNode<Object>>(Hole())));
      USE(implicit_cast<TNode<BoolT>>(t250));
      Branch(implicit_cast<TNode<BoolT>>(t250), label__True_78, label__False_79);
      if (label__True_78->is_used())
      {
        BIND(label__True_78);
        // ../../src/builtins/array-lastindexof.tq:14:26
        Goto(label_IfHole_77);
      }
      BIND(label__False_79);
    }
    // ../../src/builtins/array-lastindexof.tq:15:5
    *_return_93 = implicit_cast<TNode<Object>>((*element_627));
    Goto(label_macro_end_1323);
  }
  BIND(label_macro_end_1323);
  return implicit_cast<TNode<Object>>((*_return_93).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::LoadWithHoleCheck18ATFixedDoubleArray(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index, Label* label_IfHole_80) {
  TVARIABLE(Object, _return_94_impl);
  auto _return_94 = &_return_94_impl;
  USE(_return_94);
  Label label_macro_end_1324_impl(this, {_return_94}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1324 = &label_macro_end_1324_impl;
  USE(label_macro_end_1324);
  // ../../src/builtins/array-lastindexof.tq:20:21
  {
    // ../../src/builtins/array-lastindexof.tq:21:5
    TNode<FixedDoubleArray> t251 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedDoubleArray>>(t251));
    TNode<FixedDoubleArray> elements_628_impl;
    auto elements_628 = &elements_628_impl;
    USE(elements_628);
    *elements_628 = implicit_cast<TNode<FixedDoubleArray>>(t251);
    // ../../src/builtins/array-lastindexof.tq:22:5
    TNode<Float64T> t252 = UncheckedCast<Float64T>(LoadDoubleWithHoleCheck(implicit_cast<TNode<FixedDoubleArray>>((*elements_628)), implicit_cast<TNode<Smi>>(p_index), label_IfHole_80));
    USE(implicit_cast<TNode<Float64T>>(t252));
    TNode<Float64T> element_629_impl;
    auto element_629 = &element_629_impl;
    USE(element_629);
    *element_629 = implicit_cast<TNode<Float64T>>(t252);
    // ../../src/builtins/array-lastindexof.tq:24:5
    TNode<HeapNumber> t253 = UncheckedCast<HeapNumber>(AllocateHeapNumberWithValue(implicit_cast<TNode<Float64T>>((*element_629))));
    USE(implicit_cast<TNode<HeapNumber>>(t253));
    *_return_94 = implicit_cast<TNode<Object>>(t253);
    Goto(label_macro_end_1324);
  }
  BIND(label_macro_end_1324);
  return implicit_cast<TNode<Object>>((*_return_94).value());
}

compiler::TNode<Number> ArrayBuiltinsFromDSLAssembler::GetFromIndex(TNode<Context> p_context, TNode<Number> p_length, CodeStubArguments* p_arguments) {
  TVARIABLE(Number, _return_95_impl);
  auto _return_95 = &_return_95_impl;
  USE(_return_95);
  Label label_macro_end_1325_impl(this, {_return_95}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1325 = &label_macro_end_1325_impl;
  USE(label_macro_end_1325);
  // ../../src/builtins/array-lastindexof.tq:54:47
  {
    // ../../src/builtins/array-lastindexof.tq:57:5
    auto t254 = [=]() {
      int31_t t256 = 1;
      TNode<Number> t257 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t256)));
      TNode<Number> t258 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_length), implicit_cast<TNode<Number>>(t257)));
      USE(implicit_cast<TNode<Number>>(t258));
      return implicit_cast<TNode<Number>>(t258);
    };
    auto t255 = [=]() {
      int31_t t259 = 1;
      TNode<IntPtrT> t260 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t259)));
      TNode<Object> t261 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(p_arguments), implicit_cast<TNode<IntPtrT>>(t260)));
      TNode<Number> t262 = UncheckedCast<Number>(ToInteger_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t261), implicit_cast<ToIntegerTruncationMode>(ToIntegerTruncationMode::kTruncateMinusZero)));
      USE(implicit_cast<TNode<Number>>(t262));
      return implicit_cast<TNode<Number>>(t262);
    };
    TVARIABLE(Number, t263_630_impl);
    auto t263_630 = &t263_630_impl;
    USE(t263_630);
    {
      Label label__True_81_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_81 = &label__True_81_impl;
      USE(label__True_81);
      Label label__False_82_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_82 = &label__False_82_impl;
      USE(label__False_82);
      Label label__done_631_1326_impl(this, {t263_630}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_631_1326 = &label__done_631_1326_impl;
      USE(label__done_631_1326);
      TNode<IntPtrT> t264 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_arguments)));
      int31_t t265 = 2;
      TNode<IntPtrT> t266 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t265)));
      TNode<BoolT> t267 = UncheckedCast<BoolT>(IntPtrLessThan(implicit_cast<TNode<IntPtrT>>(t264), implicit_cast<TNode<IntPtrT>>(t266)));
      USE(implicit_cast<TNode<BoolT>>(t267));
      Branch(implicit_cast<TNode<BoolT>>(t267), label__True_81, label__False_82);
      BIND(label__True_81);
            *t263_630 = implicit_cast<TNode<Number>>(t254());
      Goto(label__done_631_1326);
      BIND(label__False_82);
            *t263_630 = implicit_cast<TNode<Number>>(t255());
      Goto(label__done_631_1326);
      BIND(label__done_631_1326);
    }
    TNode<Number> n_632_impl;
    auto n_632 = &n_632_impl;
    USE(n_632);
    *n_632 = implicit_cast<TNode<Number>>((*t263_630).value());
    // ../../src/builtins/array-lastindexof.tq:62:5
    int31_t t268 = 0;
    TNode<Smi> t269 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(t268)));
    USE(implicit_cast<TNode<Smi>>(t269));
    TVARIABLE(Number, k_96_impl);
    auto k_96 = &k_96_impl;
    USE(k_96);
    *k_96 = implicit_cast<TNode<Number>>(t269);
    // ../../src/builtins/array-lastindexof.tq:63:5
    {
      Label label__True_83_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_83 = &label__True_83_impl;
      USE(label__True_83);
      Label label__False_84_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_84 = &label__False_84_impl;
      USE(label__False_84);
      Label label_if_done_label_633_1327_impl(this, {k_96}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_633_1327 = &label_if_done_label_633_1327_impl;
      USE(label_if_done_label_633_1327);
      int31_t t270 = 0;
      TNode<Number> t271 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t270)));
      BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*n_632)), implicit_cast<TNode<Number>>(t271), label__True_83, label__False_84);
      if (label__True_83->is_used())
      {
        BIND(label__True_83);
        // ../../src/builtins/array-lastindexof.tq:63:17
        {
          // ../../src/builtins/array-lastindexof.tq:66:7
          int31_t t272 = 1;
          TNode<Number> t273 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t272)));
          TNode<Number> t274 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_length), implicit_cast<TNode<Number>>(t273)));
          USE(implicit_cast<TNode<Number>>(t274));
          TNode<Number> t275 = UncheckedCast<Number>(Min(implicit_cast<TNode<Number>>((*n_632)), implicit_cast<TNode<Number>>(t274)));
          USE(implicit_cast<TNode<Number>>(t275));
          *k_96 = implicit_cast<TNode<Number>>(t275);
        }
        Goto(label_if_done_label_633_1327);
      }
      if (label__False_84->is_used())
      {
        BIND(label__False_84);
        // ../../src/builtins/array-lastindexof.tq:67:12
        {
          // ../../src/builtins/array-lastindexof.tq:69:7
          TNode<Number> t276 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>(p_length), implicit_cast<TNode<Number>>((*n_632))));
          USE(implicit_cast<TNode<Number>>(t276));
          *k_96 = implicit_cast<TNode<Number>>(t276);
        }
        Goto(label_if_done_label_633_1327);
      }
      BIND(label_if_done_label_633_1327);
    }
    // ../../src/builtins/array-lastindexof.tq:71:5
    *_return_95 = implicit_cast<TNode<Number>>((*k_96).value());
    Goto(label_macro_end_1325);
  }
  BIND(label_macro_end_1325);
  return implicit_cast<TNode<Number>>((*_return_95).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::TryFastArrayLastIndexOf(TNode<Context> p_context, TNode<JSReceiver> p_receiver, TNode<Object> p_searchElement, TNode<Number> p_from, Label* label_Slow_85) {
  TVARIABLE(Object, _return_97_impl);
  auto _return_97 = &_return_97_impl;
  USE(_return_97);
  Label label_macro_end_1328_impl(this, {_return_97}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1328 = &label_macro_end_1328_impl;
  USE(label_macro_end_1328);
  // ../../src/builtins/array-lastindexof.tq:77:19
  {
    // ../../src/builtins/array-lastindexof.tq:78:5
    EnsureFastJSArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), label_Slow_85);
    // ../../src/builtins/array-lastindexof.tq:79:5
    TNode<JSArray> t277 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSArray>>(t277));
    TNode<JSArray> array_634_impl;
    auto array_634 = &array_634_impl;
    USE(array_634);
    *array_634 = implicit_cast<TNode<JSArray>>(t277);
    // ../../src/builtins/array-lastindexof.tq:81:5
    TNode<Smi> t278 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*array_634))));
    TNode<Smi> length_635_impl;
    auto length_635 = &length_635_impl;
    USE(length_635);
    *length_635 = implicit_cast<TNode<Smi>>(t278);
    // ../../src/builtins/array-lastindexof.tq:82:5
    {
      Label label__True_86_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_86 = &label__True_86_impl;
      USE(label__True_86);
      Label label__False_87_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_87 = &label__False_87_impl;
      USE(label__False_87);
      int31_t t279 = 0;
      TNode<Smi> t280 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t279)));
      TNode<BoolT> t281 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*length_635)), implicit_cast<TNode<Smi>>(t280)));
      USE(implicit_cast<TNode<BoolT>>(t281));
      Branch(implicit_cast<TNode<BoolT>>(t281), label__True_86, label__False_87);
      if (label__True_86->is_used())
      {
        BIND(label__True_86);
        // ../../src/builtins/array-lastindexof.tq:82:22
        int31_t t282 = -1;
        TNode<Smi> t283 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(t282)));
        USE(implicit_cast<TNode<Smi>>(t283));
        *_return_97 = implicit_cast<TNode<Object>>(t283);
        Goto(label_macro_end_1328);
      }
      BIND(label__False_87);
    }
    // ../../src/builtins/array-lastindexof.tq:84:5
    TNode<Smi> t284 = UncheckedCast<Smi>(Cast5ATSmi(implicit_cast<TNode<Object>>(p_from), label_Slow_85));
    USE(implicit_cast<TNode<Smi>>(t284));
    TNode<Smi> fromSmi_636_impl;
    auto fromSmi_636 = &fromSmi_636_impl;
    USE(fromSmi_636);
    *fromSmi_636 = implicit_cast<TNode<Smi>>(t284);
    // ../../src/builtins/array-lastindexof.tq:85:5
    TNode<Map> t285 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*array_634))));
    TNode<Int32T> t286 = UncheckedCast<Int32T>(LoadMapElementsKind(implicit_cast<TNode<Map>>(t285)));
    TNode<Int32T> kind_637_impl;
    auto kind_637 = &kind_637_impl;
    USE(kind_637);
    *kind_637 = implicit_cast<TNode<Int32T>>(t286);
    // ../../src/builtins/array-lastindexof.tq:86:5
    {
      Label label__True_88_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_88 = &label__True_88_impl;
      USE(label__True_88);
      Label label__False_89_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_89 = &label__False_89_impl;
      USE(label__False_89);
      TNode<BoolT> t287 = UncheckedCast<BoolT>(IsFastSmiOrTaggedElementsKind(implicit_cast<TNode<Int32T>>((*kind_637))));
      USE(implicit_cast<TNode<BoolT>>(t287));
      Branch(implicit_cast<TNode<BoolT>>(t287), label__True_88, label__False_89);
      if (label__True_88->is_used())
      {
        BIND(label__True_88);
        // ../../src/builtins/array-lastindexof.tq:86:46
        {
          // ../../src/builtins/array-lastindexof.tq:87:7
          TNode<Smi> t288 = UncheckedCast<Smi>(FastArrayLastIndexOf12ATFixedArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSArray>>((*array_634)), implicit_cast<TNode<Smi>>((*length_635)), implicit_cast<TNode<Smi>>((*fromSmi_636)), implicit_cast<TNode<Object>>(p_searchElement)));
          USE(implicit_cast<TNode<Smi>>(t288));
          *_return_97 = implicit_cast<TNode<Object>>(t288);
          Goto(label_macro_end_1328);
        }
      }
      BIND(label__False_89);
    }
    // ../../src/builtins/array-lastindexof.tq:90:5
    // ../../src/builtins/array-lastindexof.tq:91:5
    TNode<Smi> t289 = UncheckedCast<Smi>(FastArrayLastIndexOf18ATFixedDoubleArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSArray>>((*array_634)), implicit_cast<TNode<Smi>>((*length_635)), implicit_cast<TNode<Smi>>((*fromSmi_636)), implicit_cast<TNode<Object>>(p_searchElement)));
    USE(implicit_cast<TNode<Smi>>(t289));
    *_return_97 = implicit_cast<TNode<Object>>(t289);
    Goto(label_macro_end_1328);
  }
  BIND(label_macro_end_1328);
  return implicit_cast<TNode<Object>>((*_return_97).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::GenericArrayLastIndexOf(TNode<Context> p_context, TNode<JSReceiver> p_object, TNode<Object> p_searchElement, TNode<Number> p_from) {
  TVARIABLE(Object, _return_98_impl);
  auto _return_98 = &_return_98_impl;
  USE(_return_98);
  Label label_macro_end_1329_impl(this, {_return_98}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1329 = &label_macro_end_1329_impl;
  USE(label_macro_end_1329);
  // ../../src/builtins/array-lastindexof.tq:97:29
  {
    // ../../src/builtins/array-lastindexof.tq:98:5
    TVARIABLE(Number, k_99_impl);
    auto k_99 = &k_99_impl;
    USE(k_99);
    *k_99 = implicit_cast<TNode<Number>>(p_from);
    // ../../src/builtins/array-lastindexof.tq:101:5
    {
      Label label__True_90_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_90 = &label__True_90_impl;
      USE(label__True_90);
      Label label__False_91_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_91 = &label__False_91_impl;
      USE(label__False_91);
      Label label_header_638_1330_impl(this, {k_99}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_638_1330 = &label_header_638_1330_impl;
      USE(label_header_638_1330);
      Goto(label_header_638_1330);
      BIND(label_header_638_1330);
      int31_t t290 = 0;
      TNode<Number> t291 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t290)));
      BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*k_99).value()), implicit_cast<TNode<Number>>(t291), label__True_90, label__False_91);
      if (label__True_90->is_used())
      {
        BIND(label__True_90);
        // ../../src/builtins/array-lastindexof.tq:101:20
        {
          // ../../src/builtins/array-lastindexof.tq:103:7
          TNode<Oddball> t292 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_object), implicit_cast<TNode<Object>>((*k_99).value())));
          USE(implicit_cast<TNode<Oddball>>(t292));
          TNode<Oddball> kPresent_639_impl;
          auto kPresent_639 = &kPresent_639_impl;
          USE(kPresent_639);
          *kPresent_639 = implicit_cast<TNode<Oddball>>(t292);
          // ../../src/builtins/array-lastindexof.tq:106:7
          {
            Label label__True_92_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_92 = &label__True_92_impl;
            USE(label__True_92);
            Label label__False_93_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_93 = &label__False_93_impl;
            USE(label__False_93);
            TNode<BoolT> t293 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*kPresent_639)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t293));
            Branch(implicit_cast<TNode<BoolT>>(t293), label__True_92, label__False_93);
            if (label__True_92->is_used())
            {
              BIND(label__True_92);
              // ../../src/builtins/array-lastindexof.tq:106:29
              {
                // ../../src/builtins/array-lastindexof.tq:108:9
                TNode<Object> t294 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_object), implicit_cast<TNode<Object>>((*k_99).value())));
                USE(implicit_cast<TNode<Object>>(t294));
                TNode<Object> element_640_impl;
                auto element_640 = &element_640_impl;
                USE(element_640);
                *element_640 = implicit_cast<TNode<Object>>(t294);
                // ../../src/builtins/array-lastindexof.tq:112:9
                TNode<Oddball> t295 = UncheckedCast<Oddball>(StrictEqual(implicit_cast<TNode<Object>>(p_searchElement), implicit_cast<TNode<Object>>((*element_640))));
                USE(implicit_cast<TNode<Oddball>>(t295));
                TNode<Oddball> same_641_impl;
                auto same_641 = &same_641_impl;
                USE(same_641);
                *same_641 = implicit_cast<TNode<Oddball>>(t295);
                // ../../src/builtins/array-lastindexof.tq:115:9
                {
                  Label label__True_94_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_94 = &label__True_94_impl;
                  USE(label__True_94);
                  Label label__False_95_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_95 = &label__False_95_impl;
                  USE(label__False_95);
                  TNode<BoolT> t296 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*same_641)), implicit_cast<TNode<Object>>(True())));
                  USE(implicit_cast<TNode<BoolT>>(t296));
                  Branch(implicit_cast<TNode<BoolT>>(t296), label__True_94, label__False_95);
                  if (label__True_94->is_used())
                  {
                    BIND(label__True_94);
                    // ../../src/builtins/array-lastindexof.tq:115:27
                    *_return_98 = implicit_cast<TNode<Object>>((*k_99).value());
                    Goto(label_macro_end_1329);
                  }
                  BIND(label__False_95);
                }
              }
              Goto(label__False_93);
            }
            BIND(label__False_93);
          }
          // ../../src/builtins/array-lastindexof.tq:119:7
          TNode<Number> t297 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t298 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*k_99).value()), implicit_cast<TNode<Number>>(t297)));
          *k_99 = implicit_cast<TNode<Number>>(t298);
        }
        Goto(label_header_638_1330);
      }
      BIND(label__False_91);
    }
    // ../../src/builtins/array-lastindexof.tq:123:5
    int31_t t299 = -1;
    TNode<Smi> t300 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(t299)));
    USE(implicit_cast<TNode<Smi>>(t300));
    *_return_98 = implicit_cast<TNode<Object>>(t300);
    Goto(label_macro_end_1329);
  }
  BIND(label_macro_end_1329);
  return implicit_cast<TNode<Object>>((*_return_98).value());
}

TF_BUILTIN(ArrayPrototypeLastIndexOf, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/array-lastindexof.tq:128:65
  {
    // ../../src/builtins/array-lastindexof.tq:130:5
    TNode<JSReceiver> t301 = UncheckedCast<JSReceiver>(ToObject_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t301));
    TNode<JSReceiver> object_642_impl;
    auto object_642 = &object_642_impl;
    USE(object_642);
    *object_642 = implicit_cast<TNode<JSReceiver>>(t301);
    // ../../src/builtins/array-lastindexof.tq:133:5
    TNode<Number> t302 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_642))));
    USE(implicit_cast<TNode<Number>>(t302));
    TNode<Number> length_643_impl;
    auto length_643 = &length_643_impl;
    USE(length_643);
    *length_643 = implicit_cast<TNode<Number>>(t302);
    // ../../src/builtins/array-lastindexof.tq:136:5
    {
      Label label__True_96_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_96 = &label__True_96_impl;
      USE(label__True_96);
      Label label__False_97_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_97 = &label__False_97_impl;
      USE(label__False_97);
      int31_t t303 = 0;
      TNode<Smi> t304 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(t303)));
      USE(implicit_cast<TNode<Smi>>(t304));
      BranchIfNumberEqual(implicit_cast<TNode<Number>>((*length_643)), implicit_cast<TNode<Number>>(t304), label__True_96, label__False_97);
      if (label__True_96->is_used())
      {
        BIND(label__True_96);
        // ../../src/builtins/array-lastindexof.tq:136:35
        int31_t t305 = -1;
        TNode<Smi> t306 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(t305)));
        USE(implicit_cast<TNode<Smi>>(t306));
        arguments->PopAndReturn(implicit_cast<TNode<Object>>(t306));
      }
      BIND(label__False_97);
    }
    // ../../src/builtins/array-lastindexof.tq:139:5
    TNode<Number> t307 = UncheckedCast<Number>(GetFromIndex(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Number>>((*length_643)), implicit_cast<CodeStubArguments*>(arguments)));
    USE(implicit_cast<TNode<Number>>(t307));
    TNode<Number> from_644_impl;
    auto from_644 = &from_644_impl;
    USE(from_644);
    *from_644 = implicit_cast<TNode<Number>>(t307);
    // ../../src/builtins/array-lastindexof.tq:141:5
    int31_t t308 = 0;
    TNode<IntPtrT> t309 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t308)));
    TNode<Object> t310 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t309)));
    TNode<Object> searchElement_645_impl;
    auto searchElement_645 = &searchElement_645_impl;
    USE(searchElement_645);
    *searchElement_645 = implicit_cast<TNode<Object>>(t310);
    // ../../src/builtins/array-lastindexof.tq:143:5
    {
      Label label_try_done_646_1331_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_646_1331 = &label_try_done_646_1331_impl;
      USE(label_try_done_646_1331);
      Label label_Baseline_98_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Baseline_98 = &label_Baseline_98_impl;
      USE(label_Baseline_98);
      Label label_try_begin_647_1332_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_647_1332 = &label_try_begin_647_1332_impl;
      USE(label_try_begin_647_1332);
      Goto(label_try_begin_647_1332);
      if (label_try_begin_647_1332->is_used())
      {
        BIND(label_try_begin_647_1332);
        // ../../src/builtins/array-lastindexof.tq:143:9
        {
          // ../../src/builtins/array-lastindexof.tq:144:7
          TNode<Object> t311 = UncheckedCast<Object>(TryFastArrayLastIndexOf(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*object_642)), implicit_cast<TNode<Object>>((*searchElement_645)), implicit_cast<TNode<Number>>((*from_644)), label_Baseline_98));
          USE(implicit_cast<TNode<Object>>(t311));
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(t311));
        }
      }
      if (label_Baseline_98->is_used())
      {
        BIND(label_Baseline_98);
        // ../../src/builtins/array-lastindexof.tq:147:20
        {
          // ../../src/builtins/array-lastindexof.tq:148:7
          TNode<Object> t312 = UncheckedCast<Object>(GenericArrayLastIndexOf(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*object_642)), implicit_cast<TNode<Object>>((*searchElement_645)), implicit_cast<TNode<Number>>((*from_644))));
          USE(implicit_cast<TNode<Object>>(t312));
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(t312));
        }
      }
    }
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::LoadElement23ATFastPackedSmiElements5ATSmi(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index) {
  TVARIABLE(Smi, _return_100_impl);
  auto _return_100 = &_return_100_impl;
  USE(_return_100);
  Label label_macro_end_1333_impl(this, {_return_100}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1333 = &label_macro_end_1333_impl;
  USE(label_macro_end_1333);
  // ../../src/builtins/array-reverse.tq:10:50
  {
    // ../../src/builtins/array-reverse.tq:11:5
    TNode<FixedArray> t313 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t313));
    TNode<FixedArray> elems_648_impl;
    auto elems_648 = &elems_648_impl;
    USE(elems_648);
    *elems_648 = implicit_cast<TNode<FixedArray>>(t313);
    // ../../src/builtins/array-reverse.tq:12:5
    TNode<Object> t314 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*elems_648)), implicit_cast<TNode<Smi>>(p_index)));
    TNode<Smi> t315 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t314)));
    USE(implicit_cast<TNode<Smi>>(t315));
    *_return_100 = implicit_cast<TNode<Smi>>(t315);
    Goto(label_macro_end_1333);
  }
  BIND(label_macro_end_1333);
  return implicit_cast<TNode<Smi>>((*_return_100).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::LoadElement26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index) {
  TVARIABLE(Object, _return_101_impl);
  auto _return_101 = &_return_101_impl;
  USE(_return_101);
  Label label_macro_end_1334_impl(this, {_return_101}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1334 = &label_macro_end_1334_impl;
  USE(label_macro_end_1334);
  // ../../src/builtins/array-reverse.tq:16:53
  {
    // ../../src/builtins/array-reverse.tq:17:5
    TNode<FixedArray> t316 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t316));
    TNode<FixedArray> elems_649_impl;
    auto elems_649 = &elems_649_impl;
    USE(elems_649);
    *elems_649 = implicit_cast<TNode<FixedArray>>(t316);
    // ../../src/builtins/array-reverse.tq:18:5
    TNode<Object> t317 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*elems_649)), implicit_cast<TNode<Smi>>(p_index)));
    *_return_101 = implicit_cast<TNode<Object>>(t317);
    Goto(label_macro_end_1334);
  }
  BIND(label_macro_end_1334);
  return implicit_cast<TNode<Object>>((*_return_101).value());
}

compiler::TNode<Float64T> ArrayBuiltinsFromDSLAssembler::LoadElement26ATFastPackedDoubleElements9ATfloat64(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index) {
  TVARIABLE(Float64T, _return_102_impl);
  auto _return_102 = &_return_102_impl;
  USE(_return_102);
  Label label_macro_end_1335_impl(this, {_return_102}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1335 = &label_macro_end_1335_impl;
  USE(label_macro_end_1335);
  // ../../src/builtins/array-reverse.tq:22:54
  {
    // ../../src/builtins/array-reverse.tq:23:5
    {
      Label label_try_done_650_1336_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_650_1336 = &label_try_done_650_1336_impl;
      USE(label_try_done_650_1336);
      Label label_Hole_99_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Hole_99 = &label_Hole_99_impl;
      USE(label_Hole_99);
      Label label_try_begin_651_1337_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_651_1337 = &label_try_begin_651_1337_impl;
      USE(label_try_begin_651_1337);
      Goto(label_try_begin_651_1337);
      if (label_try_begin_651_1337->is_used())
      {
        BIND(label_try_begin_651_1337);
        // ../../src/builtins/array-reverse.tq:23:9
        {
          // ../../src/builtins/array-reverse.tq:24:7
          TNode<FixedDoubleArray> t318 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>(p_elements)));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t318));
          TNode<FixedDoubleArray> elems_652_impl;
          auto elems_652 = &elems_652_impl;
          USE(elems_652);
          *elems_652 = implicit_cast<TNode<FixedDoubleArray>>(t318);
          // ../../src/builtins/array-reverse.tq:25:7
          TNode<Float64T> t319 = UncheckedCast<Float64T>(LoadDoubleWithHoleCheck(implicit_cast<TNode<FixedDoubleArray>>((*elems_652)), implicit_cast<TNode<Smi>>(p_index), label_Hole_99));
          USE(implicit_cast<TNode<Float64T>>(t319));
          *_return_102 = implicit_cast<TNode<Float64T>>(t319);
          Goto(label_macro_end_1335);
        }
      }
      if (label_Hole_99->is_used())
      {
        BIND(label_Hole_99);
        // ../../src/builtins/array-reverse.tq:27:16
        {
          // ../../src/builtins/array-reverse.tq:30:7
          Unreachable();
        }
      }
    }
  }
  BIND(label_macro_end_1335);
  return implicit_cast<TNode<Float64T>>((*_return_102).value());
}

void ArrayBuiltinsFromDSLAssembler::StoreElement23ATFastPackedSmiElements5ATSmi(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index, TNode<Smi> p_value) {
  Label label_macro_end_1338_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1338 = &label_macro_end_1338_impl;
  USE(label_macro_end_1338);
  // ../../src/builtins/array-reverse.tq:38:57
  {
    // ../../src/builtins/array-reverse.tq:39:5
    TNode<FixedArray> t320 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t320));
    TNode<FixedArray> elems_653_impl;
    auto elems_653 = &elems_653_impl;
    USE(elems_653);
    *elems_653 = implicit_cast<TNode<FixedArray>>(t320);
    // ../../src/builtins/array-reverse.tq:40:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>((*elems_653)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Object>>(p_value), implicit_cast<WriteBarrierMode>(SKIP_WRITE_BARRIER));
  }
}

void ArrayBuiltinsFromDSLAssembler::StoreElement26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index, TNode<Object> p_value) {
  Label label_macro_end_1339_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1339 = &label_macro_end_1339_impl;
  USE(label_macro_end_1339);
  // ../../src/builtins/array-reverse.tq:44:60
  {
    // ../../src/builtins/array-reverse.tq:45:5
    TNode<FixedArray> t321 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t321));
    TNode<FixedArray> elems_654_impl;
    auto elems_654 = &elems_654_impl;
    USE(elems_654);
    *elems_654 = implicit_cast<TNode<FixedArray>>(t321);
    // ../../src/builtins/array-reverse.tq:46:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>((*elems_654)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Object>>(p_value));
  }
}

void ArrayBuiltinsFromDSLAssembler::StoreElement26ATFastPackedDoubleElements9ATfloat64(TNode<FixedArrayBase> p_elements, TNode<Smi> p_index, TNode<Float64T> p_value) {
  Label label_macro_end_1340_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1340 = &label_macro_end_1340_impl;
  USE(label_macro_end_1340);
  // ../../src/builtins/array-reverse.tq:50:61
  {
    // ../../src/builtins/array-reverse.tq:51:5
    TNode<FixedDoubleArray> t322 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedDoubleArray>>(t322));
    TNode<FixedDoubleArray> elems_655_impl;
    auto elems_655 = &elems_655_impl;
    USE(elems_655);
    *elems_655 = implicit_cast<TNode<FixedDoubleArray>>(t322);
    // ../../src/builtins/array-reverse.tq:53:5
    // ../../src/builtins/array-reverse.tq:54:5
    StoreFixedDoubleArrayElementWithSmiIndex(implicit_cast<TNode<FixedDoubleArray>>((*elems_655)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Float64T>>(p_value));
  }
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::GenericArrayReverse(TNode<Context> p_context, TNode<Object> p_receiver) {
  TVARIABLE(Object, _return_103_impl);
  auto _return_103 = &_return_103_impl;
  USE(_return_103);
  Label label_macro_end_1341_impl(this, {_return_103}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1341 = &label_macro_end_1341_impl;
  USE(label_macro_end_1341);
  // ../../src/builtins/array-reverse.tq:75:73
  {
    // ../../src/builtins/array-reverse.tq:77:5
    TNode<JSReceiver> t323 = UncheckedCast<JSReceiver>(ToObject_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t323));
    TNode<JSReceiver> object_656_impl;
    auto object_656 = &object_656_impl;
    USE(object_656);
    *object_656 = implicit_cast<TNode<JSReceiver>>(t323);
    // ../../src/builtins/array-reverse.tq:80:5
    TNode<Number> t324 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656))));
    USE(implicit_cast<TNode<Number>>(t324));
    TNode<Number> length_657_impl;
    auto length_657 = &length_657_impl;
    USE(length_657);
    *length_657 = implicit_cast<TNode<Number>>(t324);
    // ../../src/builtins/array-reverse.tq:89:5
    int31_t t325 = 0;
    TVARIABLE(Number, lower_104_impl);
    auto lower_104 = &lower_104_impl;
    USE(lower_104);
    TNode<Number> t326 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t325)));
    *lower_104 = implicit_cast<TNode<Number>>(t326);
    // ../../src/builtins/array-reverse.tq:90:5
    int31_t t327 = 1;
    TNode<Number> t328 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t327)));
    TNode<Number> t329 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*length_657)), implicit_cast<TNode<Number>>(t328)));
    USE(implicit_cast<TNode<Number>>(t329));
    TVARIABLE(Number, upper_105_impl);
    auto upper_105 = &upper_105_impl;
    USE(upper_105);
    *upper_105 = implicit_cast<TNode<Number>>(t329);
    // ../../src/builtins/array-reverse.tq:92:5
    {
      Label label__True_100_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_100 = &label__True_100_impl;
      USE(label__True_100);
      Label label__False_101_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_101 = &label__False_101_impl;
      USE(label__False_101);
      Label label_header_658_1342_impl(this, {lower_104, upper_105}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_658_1342 = &label_header_658_1342_impl;
      USE(label_header_658_1342);
      Goto(label_header_658_1342);
      BIND(label_header_658_1342);
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*lower_104).value()), implicit_cast<TNode<Number>>((*upper_105).value()), label__True_100, label__False_101);
      if (label__True_100->is_used())
      {
        BIND(label__True_100);
        // ../../src/builtins/array-reverse.tq:92:27
        {
          // ../../src/builtins/array-reverse.tq:93:7
          TVARIABLE(Object, lowerValue_106_impl);
          auto lowerValue_106 = &lowerValue_106_impl;
          USE(lowerValue_106);
          *lowerValue_106 = implicit_cast<TNode<Object>>(Undefined());
          // ../../src/builtins/array-reverse.tq:94:7
          TVARIABLE(Object, upperValue_107_impl);
          auto upperValue_107 = &upperValue_107_impl;
          USE(upperValue_107);
          *upperValue_107 = implicit_cast<TNode<Object>>(Undefined());
          // ../../src/builtins/array-reverse.tq:99:7
          TNode<Oddball> t330 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*object_656)), implicit_cast<TNode<Object>>((*lower_104).value())));
          USE(implicit_cast<TNode<Oddball>>(t330));
          TNode<Oddball> lowerExists_659_impl;
          auto lowerExists_659 = &lowerExists_659_impl;
          USE(lowerExists_659);
          *lowerExists_659 = implicit_cast<TNode<Oddball>>(t330);
          // ../../src/builtins/array-reverse.tq:102:7
          {
            Label label__True_102_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_102 = &label__True_102_impl;
            USE(label__True_102);
            Label label__False_103_impl(this, {lowerValue_106}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_103 = &label__False_103_impl;
            USE(label__False_103);
            TNode<BoolT> t331 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*lowerExists_659)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t331));
            Branch(implicit_cast<TNode<BoolT>>(t331), label__True_102, label__False_103);
            if (label__True_102->is_used())
            {
              BIND(label__True_102);
              // ../../src/builtins/array-reverse.tq:102:32
              {
                // ../../src/builtins/array-reverse.tq:104:9
                TNode<Object> t332 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*lower_104).value())));
                USE(implicit_cast<TNode<Object>>(t332));
                *lowerValue_106 = implicit_cast<TNode<Object>>(t332);
              }
              Goto(label__False_103);
            }
            BIND(label__False_103);
          }
          // ../../src/builtins/array-reverse.tq:108:7
          TNode<Oddball> t333 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*object_656)), implicit_cast<TNode<Object>>((*upper_105).value())));
          USE(implicit_cast<TNode<Oddball>>(t333));
          TNode<Oddball> upperExists_660_impl;
          auto upperExists_660 = &upperExists_660_impl;
          USE(upperExists_660);
          *upperExists_660 = implicit_cast<TNode<Oddball>>(t333);
          // ../../src/builtins/array-reverse.tq:111:7
          {
            Label label__True_104_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_104 = &label__True_104_impl;
            USE(label__True_104);
            Label label__False_105_impl(this, {upperValue_107}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_105 = &label__False_105_impl;
            USE(label__False_105);
            TNode<BoolT> t334 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*upperExists_660)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t334));
            Branch(implicit_cast<TNode<BoolT>>(t334), label__True_104, label__False_105);
            if (label__True_104->is_used())
            {
              BIND(label__True_104);
              // ../../src/builtins/array-reverse.tq:111:32
              {
                // ../../src/builtins/array-reverse.tq:113:9
                TNode<Object> t335 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*upper_105).value())));
                USE(implicit_cast<TNode<Object>>(t335));
                *upperValue_107 = implicit_cast<TNode<Object>>(t335);
              }
              Goto(label__False_105);
            }
            BIND(label__False_105);
          }
          // ../../src/builtins/array-reverse.tq:117:7
          {
            Label label__True_106_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_106 = &label__True_106_impl;
            USE(label__True_106);
            Label label__False_107_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_107 = &label__False_107_impl;
            USE(label__False_107);
            Label label_if_done_label_661_1343_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_661_1343 = &label_if_done_label_661_1343_impl;
            USE(label_if_done_label_661_1343);
            Label label__True_108_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_108 = &label__True_108_impl;
            USE(label__True_108);
            TNode<BoolT> t336 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*lowerExists_659)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t336));
            GotoIfNot(implicit_cast<TNode<BoolT>>(t336), label__False_107);
            TNode<BoolT> t337 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*upperExists_660)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t337));
Branch(implicit_cast<TNode<BoolT>>(t337), label__True_106, label__False_107);
            if (label__True_106->is_used())
            {
              BIND(label__True_106);
              // ../../src/builtins/array-reverse.tq:117:55
              {
                // ../../src/builtins/array-reverse.tq:119:9
                CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*lower_104).value()), implicit_cast<TNode<Object>>((*upperValue_107).value()));
                // ../../src/builtins/array-reverse.tq:122:9
                CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*upper_105).value()), implicit_cast<TNode<Object>>((*lowerValue_106).value()));
              }
              Goto(label_if_done_label_661_1343);
            }
            if (label__False_107->is_used())
            {
              BIND(label__False_107);
              // ../../src/builtins/array-reverse.tq:123:14
              {
                Label label__True_109_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_109 = &label__True_109_impl;
                USE(label__True_109);
                Label label__False_110_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_110 = &label__False_110_impl;
                USE(label__False_110);
                Label label_if_done_label_662_1344_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_if_done_label_662_1344 = &label_if_done_label_662_1344_impl;
                USE(label_if_done_label_662_1344);
                Label label__True_111_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_111 = &label__True_111_impl;
                USE(label__True_111);
                TNode<BoolT> t338 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*lowerExists_659)), implicit_cast<TNode<Object>>(False())));
                USE(implicit_cast<TNode<BoolT>>(t338));
                GotoIfNot(implicit_cast<TNode<BoolT>>(t338), label__False_110);
                TNode<BoolT> t339 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*upperExists_660)), implicit_cast<TNode<Object>>(True())));
                USE(implicit_cast<TNode<BoolT>>(t339));
Branch(implicit_cast<TNode<BoolT>>(t339), label__True_109, label__False_110);
                if (label__True_109->is_used())
                {
                  BIND(label__True_109);
                  // ../../src/builtins/array-reverse.tq:123:63
                  {
                    // ../../src/builtins/array-reverse.tq:125:9
                    CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*lower_104).value()), implicit_cast<TNode<Object>>((*upperValue_107).value()));
                    // ../../src/builtins/array-reverse.tq:128:9
                    TNode<Smi> t340 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
                    CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*upper_105).value()), implicit_cast<TNode<Smi>>(t340));
                  }
                  Goto(label_if_done_label_662_1344);
                }
                if (label__False_110->is_used())
                {
                  BIND(label__False_110);
                  // ../../src/builtins/array-reverse.tq:129:14
                  {
                    Label label__True_112_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__True_112 = &label__True_112_impl;
                    USE(label__True_112);
                    Label label__False_113_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__False_113 = &label__False_113_impl;
                    USE(label__False_113);
                    Label label__True_114_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__True_114 = &label__True_114_impl;
                    USE(label__True_114);
                    TNode<BoolT> t341 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*lowerExists_659)), implicit_cast<TNode<Object>>(True())));
                    USE(implicit_cast<TNode<BoolT>>(t341));
                    GotoIfNot(implicit_cast<TNode<BoolT>>(t341), label__False_113);
                    TNode<BoolT> t342 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*upperExists_660)), implicit_cast<TNode<Object>>(False())));
                    USE(implicit_cast<TNode<BoolT>>(t342));
Branch(implicit_cast<TNode<BoolT>>(t342), label__True_112, label__False_113);
                    if (label__True_112->is_used())
                    {
                      BIND(label__True_112);
                      // ../../src/builtins/array-reverse.tq:129:63
                      {
                        // ../../src/builtins/array-reverse.tq:131:9
                        TNode<Smi> t343 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
                        CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*lower_104).value()), implicit_cast<TNode<Smi>>(t343));
                        // ../../src/builtins/array-reverse.tq:134:9
                        CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_656)), implicit_cast<TNode<Object>>((*upper_105).value()), implicit_cast<TNode<Object>>((*lowerValue_106).value()));
                      }
                      Goto(label__False_113);
                    }
                    BIND(label__False_113);
                  }
                  Goto(label_if_done_label_662_1344);
                }
                BIND(label_if_done_label_662_1344);
              }
              Goto(label_if_done_label_661_1343);
            }
            BIND(label_if_done_label_661_1343);
          }
          // ../../src/builtins/array-reverse.tq:138:7
          TNode<Number> t344 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t345 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*lower_104).value()), implicit_cast<TNode<Number>>(t344)));
          *lower_104 = implicit_cast<TNode<Number>>(t345);
          // ../../src/builtins/array-reverse.tq:139:7
          TNode<Number> t346 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t347 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*upper_105).value()), implicit_cast<TNode<Number>>(t346)));
          *upper_105 = implicit_cast<TNode<Number>>(t347);
        }
        Goto(label_header_658_1342);
      }
      BIND(label__False_101);
    }
    // ../../src/builtins/array-reverse.tq:143:5
    *_return_103 = implicit_cast<TNode<Object>>((*object_656));
    Goto(label_macro_end_1341);
  }
  BIND(label_macro_end_1341);
  return implicit_cast<TNode<Object>>((*_return_103).value());
}

void ArrayBuiltinsFromDSLAssembler::TryFastPackedArrayReverse(TNode<Object> p_receiver, Label* label_Slow_115) {
  Label label_macro_end_1345_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1345 = &label_macro_end_1345_impl;
  USE(label_macro_end_1345);
  // ../../src/builtins/array-reverse.tq:146:65
  {
    // ../../src/builtins/array-reverse.tq:147:5
    TNode<JSArray> t348 = UncheckedCast<JSArray>(Cast9ATJSArray(implicit_cast<TNode<Object>>(p_receiver), label_Slow_115));
    USE(implicit_cast<TNode<JSArray>>(t348));
    TNode<JSArray> array_663_impl;
    auto array_663 = &array_663_impl;
    USE(array_663);
    *array_663 = implicit_cast<TNode<JSArray>>(t348);
    // ../../src/builtins/array-reverse.tq:149:5
    TNode<Map> t349 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*array_663))));
    TNode<Int32T> t350 = UncheckedCast<Int32T>(LoadMapElementsKind(implicit_cast<TNode<Map>>(t349)));
    TNode<Int32T> kind_664_impl;
    auto kind_664 = &kind_664_impl;
    USE(kind_664);
    *kind_664 = implicit_cast<TNode<Int32T>>(t350);
    // ../../src/builtins/array-reverse.tq:150:5
    {
      Label label__True_116_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_116 = &label__True_116_impl;
      USE(label__True_116);
      Label label__False_117_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_117 = &label__False_117_impl;
      USE(label__False_117);
      Label label_if_done_label_665_1346_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_665_1346 = &label_if_done_label_665_1346_impl;
      USE(label_if_done_label_665_1346);
      TNode<Int32T> t351 = UncheckedCast<Int32T>(FromConstexpr14ATElementsKind(implicit_cast<ElementsKind>(PACKED_SMI_ELEMENTS)));
      TNode<BoolT> t352 = UncheckedCast<BoolT>(ElementsKindEqual(implicit_cast<TNode<Int32T>>((*kind_664)), implicit_cast<TNode<Int32T>>(t351)));
      USE(implicit_cast<TNode<BoolT>>(t352));
      Branch(implicit_cast<TNode<BoolT>>(t352), label__True_116, label__False_117);
      if (label__True_116->is_used())
      {
        BIND(label__True_116);
        // ../../src/builtins/array-reverse.tq:150:38
        {
          // ../../src/builtins/array-reverse.tq:151:7
          EnsureWriteableFastElements(implicit_cast<TNode<JSArray>>((*array_663)));
          // ../../src/builtins/array-reverse.tq:152:7
          TNode<FixedArrayBase> t353 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>((*array_663))));
          TNode<Smi> t354 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*array_663))));
          FastPackedArrayReverse23ATFastPackedSmiElements5ATSmi(implicit_cast<TNode<FixedArrayBase>>(t353), implicit_cast<TNode<Smi>>(t354));
        }
        Goto(label_if_done_label_665_1346);
      }
      if (label__False_117->is_used())
      {
        BIND(label__False_117);
        // ../../src/builtins/array-reverse.tq:154:12
        {
          Label label__True_118_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_118 = &label__True_118_impl;
          USE(label__True_118);
          Label label__False_119_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_119 = &label__False_119_impl;
          USE(label__False_119);
          Label label_if_done_label_666_1347_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_if_done_label_666_1347 = &label_if_done_label_666_1347_impl;
          USE(label_if_done_label_666_1347);
          TNode<Int32T> t355 = UncheckedCast<Int32T>(FromConstexpr14ATElementsKind(implicit_cast<ElementsKind>(PACKED_ELEMENTS)));
          TNode<BoolT> t356 = UncheckedCast<BoolT>(ElementsKindEqual(implicit_cast<TNode<Int32T>>((*kind_664)), implicit_cast<TNode<Int32T>>(t355)));
          USE(implicit_cast<TNode<BoolT>>(t356));
          Branch(implicit_cast<TNode<BoolT>>(t356), label__True_118, label__False_119);
          if (label__True_118->is_used())
          {
            BIND(label__True_118);
            // ../../src/builtins/array-reverse.tq:154:41
            {
              // ../../src/builtins/array-reverse.tq:155:7
              EnsureWriteableFastElements(implicit_cast<TNode<JSArray>>((*array_663)));
              // ../../src/builtins/array-reverse.tq:156:7
              TNode<FixedArrayBase> t357 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>((*array_663))));
              TNode<Smi> t358 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*array_663))));
              FastPackedArrayReverse26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(implicit_cast<TNode<FixedArrayBase>>(t357), implicit_cast<TNode<Smi>>(t358));
            }
            Goto(label_if_done_label_666_1347);
          }
          if (label__False_119->is_used())
          {
            BIND(label__False_119);
            // ../../src/builtins/array-reverse.tq:158:12
            {
              Label label__True_120_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label__True_120 = &label__True_120_impl;
              USE(label__True_120);
              Label label__False_121_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label__False_121 = &label__False_121_impl;
              USE(label__False_121);
              Label label_if_done_label_667_1348_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label_if_done_label_667_1348 = &label_if_done_label_667_1348_impl;
              USE(label_if_done_label_667_1348);
              TNode<Int32T> t359 = UncheckedCast<Int32T>(FromConstexpr14ATElementsKind(implicit_cast<ElementsKind>(PACKED_DOUBLE_ELEMENTS)));
              TNode<BoolT> t360 = UncheckedCast<BoolT>(ElementsKindEqual(implicit_cast<TNode<Int32T>>((*kind_664)), implicit_cast<TNode<Int32T>>(t359)));
              USE(implicit_cast<TNode<BoolT>>(t360));
              Branch(implicit_cast<TNode<BoolT>>(t360), label__True_120, label__False_121);
              if (label__True_120->is_used())
              {
                BIND(label__True_120);
                // ../../src/builtins/array-reverse.tq:158:48
                {
                  // ../../src/builtins/array-reverse.tq:159:7
                  TNode<FixedArrayBase> t361 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>((*array_663))));
                  TNode<Smi> t362 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*array_663))));
                  FastPackedArrayReverse26ATFastPackedDoubleElements9ATfloat64(implicit_cast<TNode<FixedArrayBase>>(t361), implicit_cast<TNode<Smi>>(t362));
                }
                Goto(label_if_done_label_667_1348);
              }
              if (label__False_121->is_used())
              {
                BIND(label__False_121);
                // ../../src/builtins/array-reverse.tq:161:12
                {
                  // ../../src/builtins/array-reverse.tq:162:7
                  Goto(label_Slow_115);
                }
              }
              BIND(label_if_done_label_667_1348);
            }
            Goto(label_if_done_label_666_1347);
          }
          BIND(label_if_done_label_666_1347);
        }
        Goto(label_if_done_label_665_1346);
      }
      BIND(label_if_done_label_665_1346);
    }
  }
}

TF_BUILTIN(ArrayPrototypeReverse, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/array-reverse.tq:168:65
  {
    // ../../src/builtins/array-reverse.tq:169:5
    {
      Label label_try_done_668_1349_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_668_1349 = &label_try_done_668_1349_impl;
      USE(label_try_done_668_1349);
      Label label_Baseline_122_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Baseline_122 = &label_Baseline_122_impl;
      USE(label_Baseline_122);
      Label label_try_begin_669_1350_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_669_1350 = &label_try_begin_669_1350_impl;
      USE(label_try_begin_669_1350);
      Goto(label_try_begin_669_1350);
      if (label_try_begin_669_1350->is_used())
      {
        BIND(label_try_begin_669_1350);
        // ../../src/builtins/array-reverse.tq:169:9
        {
          // ../../src/builtins/array-reverse.tq:170:7
          TryFastPackedArrayReverse(implicit_cast<TNode<Object>>(p_receiver), label_Baseline_122);
          // ../../src/builtins/array-reverse.tq:171:7
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(p_receiver));
        }
      }
      if (label_Baseline_122->is_used())
      {
        BIND(label_Baseline_122);
        // ../../src/builtins/array-reverse.tq:173:20
        {
          // ../../src/builtins/array-reverse.tq:174:7
          TNode<Object> t363 = UncheckedCast<Object>(GenericArrayReverse(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
          USE(implicit_cast<TNode<Object>>(t363));
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(t363));
        }
      }
    }
  }
}

compiler::TNode<FixedDoubleArray> ArrayBuiltinsFromDSLAssembler::Extract18ATFixedDoubleArray(TNode<FixedArrayBase> p_elements, TNode<Smi> p_first, TNode<Smi> p_count, TNode<Smi> p_capacity) {
  TVARIABLE(FixedDoubleArray, _return_108_impl);
  auto _return_108 = &_return_108_impl;
  USE(_return_108);
  Label label_macro_end_1351_impl(this, {_return_108}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1351 = &label_macro_end_1351_impl;
  USE(label_macro_end_1351);
  // ../../src/builtins/array-splice.tq:19:40
  {
    // ../../src/builtins/array-splice.tq:20:5
    {
      Label label__True_123_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_123 = &label__True_123_impl;
      USE(label__True_123);
      Label label__False_124_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_124 = &label__False_124_impl;
      USE(label__False_124);
      TNode<BoolT> t364 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_elements), implicit_cast<TNode<Object>>(kEmptyFixedArray())));
      USE(implicit_cast<TNode<BoolT>>(t364));
      Branch(implicit_cast<TNode<BoolT>>(t364), label__True_123, label__False_124);
      if (label__True_123->is_used())
      {
        BIND(label__True_123);
        // ../../src/builtins/array-splice.tq:20:39
        {
          // ../../src/builtins/array-splice.tq:21:7
          TNode<IntPtrT> t365 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Smi>>(p_capacity)));
          USE(implicit_cast<TNode<IntPtrT>>(t365));
          TNode<FixedDoubleArray> t366 = UncheckedCast<FixedDoubleArray>(AllocateZeroedFixedDoubleArray(implicit_cast<TNode<IntPtrT>>(t365)));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t366));
          *_return_108 = implicit_cast<TNode<FixedDoubleArray>>(t366);
          Goto(label_macro_end_1351);
        }
      }
      BIND(label__False_124);
    }
    // ../../src/builtins/array-splice.tq:23:5
    TNode<FixedArrayBase> t367 = UncheckedCast<FixedArrayBase>(ExtractFixedArray(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>(p_first), implicit_cast<TNode<Smi>>(p_count), implicit_cast<TNode<Smi>>(p_capacity)));
    USE(implicit_cast<TNode<FixedArrayBase>>(t367));
    TNode<FixedDoubleArray> t368 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>(t367)));
    USE(implicit_cast<TNode<FixedDoubleArray>>(t368));
    *_return_108 = implicit_cast<TNode<FixedDoubleArray>>(t368);
    Goto(label_macro_end_1351);
  }
  BIND(label_macro_end_1351);
  return implicit_cast<TNode<FixedDoubleArray>>((*_return_108).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::FastArraySplice(TNode<Context> p_context, CodeStubArguments* p_args, TNode<JSReceiver> p_o, TNode<Number> p_originalLengthNumber, TNode<Number> p_actualStartNumber, TNode<Smi> p_insertCount, TNode<Number> p_actualDeleteCountNumber, Label* label_Bailout_125) {
  TVARIABLE(Object, _return_109_impl);
  auto _return_109 = &_return_109_impl;
  USE(_return_109);
  Label label_macro_end_1352_impl(this, {_return_109}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1352 = &label_macro_end_1352_impl;
  USE(label_macro_end_1352);
  // ../../src/builtins/array-splice.tq:92:22
  {
    // ../../src/builtins/array-splice.tq:93:5
    TNode<Smi> t369 = UncheckedCast<Smi>(Cast5ATSmi(implicit_cast<TNode<Object>>(p_originalLengthNumber), label_Bailout_125));
    USE(implicit_cast<TNode<Smi>>(t369));
    TNode<Smi> originalLength_670_impl;
    auto originalLength_670 = &originalLength_670_impl;
    USE(originalLength_670);
    *originalLength_670 = implicit_cast<TNode<Smi>>(t369);
    // ../../src/builtins/array-splice.tq:95:5
    TNode<Smi> t370 = UncheckedCast<Smi>(Cast5ATSmi(implicit_cast<TNode<Object>>(p_actualStartNumber), label_Bailout_125));
    USE(implicit_cast<TNode<Smi>>(t370));
    TNode<Smi> actualStart_671_impl;
    auto actualStart_671 = &actualStart_671_impl;
    USE(actualStart_671);
    *actualStart_671 = implicit_cast<TNode<Smi>>(t370);
    // ../../src/builtins/array-splice.tq:96:5
    TNode<Smi> t371 = UncheckedCast<Smi>(Cast5ATSmi(implicit_cast<TNode<Object>>(p_actualDeleteCountNumber), label_Bailout_125));
    USE(implicit_cast<TNode<Smi>>(t371));
    TNode<Smi> actualDeleteCount_672_impl;
    auto actualDeleteCount_672 = &actualDeleteCount_672_impl;
    USE(actualDeleteCount_672);
    *actualDeleteCount_672 = implicit_cast<TNode<Smi>>(t371);
    // ../../src/builtins/array-splice.tq:98:5
    TNode<Smi> t372 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_insertCount), implicit_cast<TNode<Smi>>((*actualDeleteCount_672))));
    USE(implicit_cast<TNode<Smi>>(t372));
    TNode<Smi> lengthDelta_673_impl;
    auto lengthDelta_673 = &lengthDelta_673_impl;
    USE(lengthDelta_673);
    *lengthDelta_673 = implicit_cast<TNode<Smi>>(t372);
    // ../../src/builtins/array-splice.tq:99:5
    TNode<Smi> t373 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*originalLength_670)), implicit_cast<TNode<Smi>>((*lengthDelta_673))));
    USE(implicit_cast<TNode<Smi>>(t373));
    TNode<Smi> newLength_674_impl;
    auto newLength_674 = &newLength_674_impl;
    USE(newLength_674);
    *newLength_674 = implicit_cast<TNode<Smi>>(t373);
    // ../../src/builtins/array-splice.tq:101:5
    TNode<JSArray> t374 = UncheckedCast<JSArray>(Cast9ATJSArray(implicit_cast<TNode<HeapObject>>(p_o), label_Bailout_125));
    USE(implicit_cast<TNode<JSArray>>(t374));
    TNode<JSArray> a_675_impl;
    auto a_675 = &a_675_impl;
    USE(a_675);
    *a_675 = implicit_cast<TNode<JSArray>>(t374);
    // ../../src/builtins/array-splice.tq:103:5
    TNode<Map> t375 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*a_675))));
    TNode<Map> map_676_impl;
    auto map_676 = &map_676_impl;
    USE(map_676);
    *map_676 = implicit_cast<TNode<Map>>(t375);
    // ../../src/builtins/array-splice.tq:104:5
    {
      Label label__True_126_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_126 = &label__True_126_impl;
      USE(label__True_126);
      Label label__False_127_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_127 = &label__False_127_impl;
      USE(label__False_127);
      TNode<BoolT> t376 = UncheckedCast<BoolT>(IsPrototypeInitialArrayPrototype(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Map>>((*map_676))));
      USE(implicit_cast<TNode<BoolT>>(t376));
      TNode<BoolT> t377 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t376)));
      USE(implicit_cast<TNode<BoolT>>(t377));
      Branch(implicit_cast<TNode<BoolT>>(t377), label__True_126, label__False_127);
      if (label__True_126->is_used())
      {
        BIND(label__True_126);
        // ../../src/builtins/array-splice.tq:104:58
        Goto(label_Bailout_125);
      }
      BIND(label__False_127);
    }
    // ../../src/builtins/array-splice.tq:105:5
    {
      Label label__True_128_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_128 = &label__True_128_impl;
      USE(label__True_128);
      Label label__False_129_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_129 = &label__False_129_impl;
      USE(label__False_129);
      TNode<BoolT> t378 = UncheckedCast<BoolT>(IsNoElementsProtectorCellInvalid());
      USE(implicit_cast<TNode<BoolT>>(t378));
      Branch(implicit_cast<TNode<BoolT>>(t378), label__True_128, label__False_129);
      if (label__True_128->is_used())
      {
        BIND(label__True_128);
        // ../../src/builtins/array-splice.tq:105:45
        Goto(label_Bailout_125);
      }
      BIND(label__False_129);
    }
    // ../../src/builtins/array-splice.tq:106:5
    {
      Label label__True_130_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_130 = &label__True_130_impl;
      USE(label__True_130);
      Label label__False_131_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_131 = &label__False_131_impl;
      USE(label__False_131);
      TNode<BoolT> t379 = UncheckedCast<BoolT>(IsArraySpeciesProtectorCellInvalid());
      USE(implicit_cast<TNode<BoolT>>(t379));
      Branch(implicit_cast<TNode<BoolT>>(t379), label__True_130, label__False_131);
      if (label__True_130->is_used())
      {
        BIND(label__True_130);
        // ../../src/builtins/array-splice.tq:106:47
        Goto(label_Bailout_125);
      }
      BIND(label__False_131);
    }
    // ../../src/builtins/array-splice.tq:109:5
    TNode<Int32T> t380 = UncheckedCast<Int32T>(EnsureArrayPushable(implicit_cast<TNode<Map>>((*map_676)), label_Bailout_125));
    USE(implicit_cast<TNode<Int32T>>(t380));
    TVARIABLE(Int32T, elementsKind_110_impl);
    auto elementsKind_110 = &elementsKind_110_impl;
    USE(elementsKind_110);
    *elementsKind_110 = implicit_cast<TNode<Int32T>>(t380);
    // ../../src/builtins/array-splice.tq:110:5
    {
      Label label__True_132_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_132 = &label__True_132_impl;
      USE(label__True_132);
      Label label__False_133_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_133 = &label__False_133_impl;
      USE(label__False_133);
      TNode<BoolT> t381 = UncheckedCast<BoolT>(IsFastElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
      USE(implicit_cast<TNode<BoolT>>(t381));
      TNode<BoolT> t382 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t381)));
      USE(implicit_cast<TNode<BoolT>>(t382));
      Branch(implicit_cast<TNode<BoolT>>(t382), label__True_132, label__False_133);
      if (label__True_132->is_used())
      {
        BIND(label__True_132);
        // ../../src/builtins/array-splice.tq:110:44
        Goto(label_Bailout_125);
      }
      BIND(label__False_133);
    }
    // ../../src/builtins/array-splice.tq:112:5
    TNode<Int32T> oldElementsKind_677_impl;
    auto oldElementsKind_677 = &oldElementsKind_677_impl;
    USE(oldElementsKind_677);
    *oldElementsKind_677 = implicit_cast<TNode<Int32T>>((*elementsKind_110).value());
    // ../../src/builtins/array-splice.tq:113:5
    int31_t t383 = 2;
    TNode<IntPtrT> t384 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_args)));
    Label label_body_678_1353_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_body_678_1353 = &label_body_678_1353_impl;
    USE(label_body_678_1353);
    Label label_increment_679_1354_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_increment_679_1354 = &label_increment_679_1354_impl;
    USE(label_increment_679_1354);
    Label label_exit_680_1355_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_exit_680_1355 = &label_exit_680_1355_impl;
    USE(label_exit_680_1355);
    TVARIABLE(IntPtrT, _for_index_t385_681_impl);
    auto _for_index_t385_681 = &_for_index_t385_681_impl;
    USE(_for_index_t385_681);
    TNode<IntPtrT> t386 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t383)));
    *_for_index_t385_681 = implicit_cast<TNode<IntPtrT>>(t386);
    Label label_header_682_1356_impl(this, {_for_index_t385_681, elementsKind_110}, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_header_682_1356 = &label_header_682_1356_impl;
    USE(label_header_682_1356);
    Goto(label_header_682_1356);
    BIND(label_header_682_1356);
    TNode<BoolT> t387 = UncheckedCast<BoolT>(IntPtrLessThan(implicit_cast<TNode<IntPtrT>>((*_for_index_t385_681).value()), implicit_cast<TNode<IntPtrT>>(t384)));
    Branch(implicit_cast<TNode<BoolT>>(t387), label_body_678_1353, label_exit_680_1355);
    BIND(label_body_678_1353);
    TNode<Object> t388 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(p_args), implicit_cast<TNode<IntPtrT>>((*_for_index_t385_681).value())));
    TVARIABLE(Object, e_111_impl);
    auto e_111 = &e_111_impl;
    USE(e_111);
    *e_111 = implicit_cast<TNode<Object>>(t388);
    // ../../src/builtins/array-splice.tq:113:39
    {
      // ../../src/builtins/array-splice.tq:114:7
      {
        Label label__True_134_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
        Label* label__True_134 = &label__True_134_impl;
        USE(label__True_134);
        Label label__False_135_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
        Label* label__False_135 = &label__False_135_impl;
        USE(label__False_135);
        Label label_if_done_label_683_1357_impl(this, {elementsKind_110}, compiler::CodeAssemblerLabel::kNonDeferred);
        Label* label_if_done_label_683_1357 = &label_if_done_label_683_1357_impl;
        USE(label_if_done_label_683_1357);
        TNode<BoolT> t389 = UncheckedCast<BoolT>(IsFastSmiElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
        USE(implicit_cast<TNode<BoolT>>(t389));
        Branch(implicit_cast<TNode<BoolT>>(t389), label__True_134, label__False_135);
        if (label__True_134->is_used())
        {
          BIND(label__True_134);
          // ../../src/builtins/array-splice.tq:114:48
          {
            // ../../src/builtins/array-splice.tq:115:9
            {
              Label label__True_136_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label__True_136 = &label__True_136_impl;
              USE(label__True_136);
              Label label__False_137_impl(this, {elementsKind_110}, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label__False_137 = &label__False_137_impl;
              USE(label__False_137);
              TNode<BoolT> t390 = UncheckedCast<BoolT>(TaggedIsNotSmi(implicit_cast<TNode<Object>>((*e_111).value())));
              USE(implicit_cast<TNode<BoolT>>(t390));
              Branch(implicit_cast<TNode<BoolT>>(t390), label__True_136, label__False_137);
              if (label__True_136->is_used())
              {
                BIND(label__True_136);
                // ../../src/builtins/array-splice.tq:115:32
                {
                  // ../../src/builtins/array-splice.tq:116:11
                  TNode<HeapObject> t391 = UncheckedCast<HeapObject>(UnsafeCast12ATHeapObject(implicit_cast<TNode<Object>>((*e_111).value())));
                  USE(implicit_cast<TNode<HeapObject>>(t391));
                  TNode<HeapObject> heapObject_684_impl;
                  auto heapObject_684 = &heapObject_684_impl;
                  USE(heapObject_684);
                  *heapObject_684 = implicit_cast<TNode<HeapObject>>(t391);
                  // ../../src/builtins/array-splice.tq:117:11
                  auto t392 = [=]() {
                    TNode<Int32T> t394 = UncheckedCast<Int32T>(AllowDoubleElements(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
                    USE(implicit_cast<TNode<Int32T>>(t394));
                    return implicit_cast<TNode<Int32T>>(t394);
                  };
                  auto t393 = [=]() {
                    TNode<Int32T> t395 = UncheckedCast<Int32T>(AllowNonNumberElements(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
                    USE(implicit_cast<TNode<Int32T>>(t395));
                    return implicit_cast<TNode<Int32T>>(t395);
                  };
                  TVARIABLE(Int32T, t396_685_impl);
                  auto t396_685 = &t396_685_impl;
                  USE(t396_685);
                  {
                    Label label__True_138_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__True_138 = &label__True_138_impl;
                    USE(label__True_138);
                    Label label__False_139_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__False_139 = &label__False_139_impl;
                    USE(label__False_139);
                    Label label__done_686_1358_impl(this, {t396_685}, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__done_686_1358 = &label__done_686_1358_impl;
                    USE(label__done_686_1358);
                    TNode<BoolT> t397 = UncheckedCast<BoolT>(IsHeapNumber(implicit_cast<TNode<HeapObject>>((*heapObject_684))));
                    USE(implicit_cast<TNode<BoolT>>(t397));
                    Branch(implicit_cast<TNode<BoolT>>(t397), label__True_138, label__False_139);
                    BIND(label__True_138);
                                        *t396_685 = implicit_cast<TNode<Int32T>>(t392());
                    Goto(label__done_686_1358);
                    BIND(label__False_139);
                                        *t396_685 = implicit_cast<TNode<Int32T>>(t393());
                    Goto(label__done_686_1358);
                    BIND(label__done_686_1358);
                  }
                  *elementsKind_110 = implicit_cast<TNode<Int32T>>((*t396_685).value());
                }
                Goto(label__False_137);
              }
              BIND(label__False_137);
            }
          }
          Goto(label_if_done_label_683_1357);
        }
        if (label__False_135->is_used())
        {
          BIND(label__False_135);
          // ../../src/builtins/array-splice.tq:121:14
          {
            Label label__True_140_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_140 = &label__True_140_impl;
            USE(label__True_140);
            Label label__False_141_impl(this, {elementsKind_110}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_141 = &label__False_141_impl;
            USE(label__False_141);
            TNode<BoolT> t398 = UncheckedCast<BoolT>(IsDoubleElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
            USE(implicit_cast<TNode<BoolT>>(t398));
            Branch(implicit_cast<TNode<BoolT>>(t398), label__True_140, label__False_141);
            if (label__True_140->is_used())
            {
              BIND(label__True_140);
              // ../../src/builtins/array-splice.tq:121:54
              {
                // ../../src/builtins/array-splice.tq:122:9
                {
                  Label label__True_142_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_142 = &label__True_142_impl;
                  USE(label__True_142);
                  Label label__False_143_impl(this, {elementsKind_110}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_143 = &label__False_143_impl;
                  USE(label__False_143);
                  TNode<BoolT> t399 = UncheckedCast<BoolT>(IsNumber(implicit_cast<TNode<Object>>((*e_111).value())));
                  USE(implicit_cast<TNode<BoolT>>(t399));
                  TNode<BoolT> t400 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t399)));
                  USE(implicit_cast<TNode<BoolT>>(t400));
                  Branch(implicit_cast<TNode<BoolT>>(t400), label__True_142, label__False_143);
                  if (label__True_142->is_used())
                  {
                    BIND(label__True_142);
                    // ../../src/builtins/array-splice.tq:122:27
                    {
                      // ../../src/builtins/array-splice.tq:123:11
                      TNode<Int32T> t401 = UncheckedCast<Int32T>(AllowNonNumberElements(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
                      USE(implicit_cast<TNode<Int32T>>(t401));
                      *elementsKind_110 = implicit_cast<TNode<Int32T>>(t401);
                    }
                    Goto(label__False_143);
                  }
                  BIND(label__False_143);
                }
              }
              Goto(label__False_141);
            }
            BIND(label__False_141);
          }
          Goto(label_if_done_label_683_1357);
        }
        BIND(label_if_done_label_683_1357);
      }
    }
    Goto(label_increment_679_1354);
    BIND(label_increment_679_1354);
    TNode<IntPtrT> t402 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(1)));
    TNode<IntPtrT> t403 = UncheckedCast<IntPtrT>(IntPtrAdd(implicit_cast<TNode<IntPtrT>>((*_for_index_t385_681).value()), implicit_cast<TNode<IntPtrT>>(t402)));
    *_for_index_t385_681 = implicit_cast<TNode<IntPtrT>>(t403);
    Goto(label_header_682_1356);
    BIND(label_exit_680_1355);
    // ../../src/builtins/array-splice.tq:128:5
    {
      Label label__True_144_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_144 = &label__True_144_impl;
      USE(label__True_144);
      Label label__False_145_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_145 = &label__False_145_impl;
      USE(label__False_145);
      TNode<BoolT> t404 = UncheckedCast<BoolT>(ElementsKindNotEqual(implicit_cast<TNode<Int32T>>((*elementsKind_110).value()), implicit_cast<TNode<Int32T>>((*oldElementsKind_677))));
      USE(implicit_cast<TNode<BoolT>>(t404));
      Branch(implicit_cast<TNode<BoolT>>(t404), label__True_144, label__False_145);
      if (label__True_144->is_used())
      {
        BIND(label__True_144);
        // ../../src/builtins/array-splice.tq:128:42
        {
          // ../../src/builtins/array-splice.tq:129:7
          TNode<Int32T> t405 = UncheckedCast<Int32T>(Convert7ATint32(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
          USE(implicit_cast<TNode<Int32T>>(t405));
          TNode<Smi> t406 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<Int32T>>(t405)));
          USE(implicit_cast<TNode<Smi>>(t406));
          TNode<Smi> smiElementsKind_687_impl;
          auto smiElementsKind_687 = &smiElementsKind_687_impl;
          USE(smiElementsKind_687);
          *smiElementsKind_687 = implicit_cast<TNode<Smi>>(t406);
          // ../../src/builtins/array-splice.tq:130:7
          CallRuntime(Runtime::kTransitionElementsKindWithKind, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSObject>>((*a_675)), implicit_cast<TNode<Smi>>((*smiElementsKind_687)));
        }
        Goto(label__False_145);
      }
      BIND(label__False_145);
    }
    // ../../src/builtins/array-splice.tq:134:5
    TNode<Number> t407 = UncheckedCast<Number>(LoadJSArrayLength(implicit_cast<TNode<JSArray>>((*a_675))));
    TNode<Smi> t408 = UncheckedCast<Smi>(Cast5ATSmi(implicit_cast<TNode<Object>>(t407), label_Bailout_125));
    USE(implicit_cast<TNode<Smi>>(t408));
    TNode<Smi> length_688_impl;
    auto length_688 = &length_688_impl;
    USE(length_688);
    *length_688 = implicit_cast<TNode<Smi>>(t408);
    // ../../src/builtins/array-splice.tq:135:5
    {
      Label label__True_146_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_146 = &label__True_146_impl;
      USE(label__True_146);
      Label label__False_147_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_147 = &label__False_147_impl;
      USE(label__False_147);
      TNode<BoolT> t409 = UncheckedCast<BoolT>(SmiNotEqual(implicit_cast<TNode<Smi>>((*originalLength_670)), implicit_cast<TNode<Smi>>((*length_688))));
      USE(implicit_cast<TNode<BoolT>>(t409));
      Branch(implicit_cast<TNode<BoolT>>(t409), label__True_146, label__False_147);
      if (label__True_146->is_used())
      {
        BIND(label__True_146);
        // ../../src/builtins/array-splice.tq:135:35
        Goto(label_Bailout_125);
      }
      BIND(label__False_147);
    }
    // ../../src/builtins/array-splice.tq:137:5
    TNode<JSArray> t410 = UncheckedCast<JSArray>(CallBuiltin(Builtins::kExtractFastJSArray, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSArray>>((*a_675)), implicit_cast<TNode<Smi>>((*actualStart_671)), implicit_cast<TNode<Smi>>((*actualDeleteCount_672))));
    USE(implicit_cast<TNode<JSArray>>(t410));
    TNode<JSArray> deletedResult_689_impl;
    auto deletedResult_689 = &deletedResult_689_impl;
    USE(deletedResult_689);
    *deletedResult_689 = implicit_cast<TNode<JSArray>>(t410);
    // ../../src/builtins/array-splice.tq:140:5
    {
      Label label__True_148_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_148 = &label__True_148_impl;
      USE(label__True_148);
      Label label__False_149_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_149 = &label__False_149_impl;
      USE(label__False_149);
      int31_t t411 = 0;
      TNode<Smi> t412 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t411)));
      TNode<BoolT> t413 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*newLength_674)), implicit_cast<TNode<Smi>>(t412)));
      USE(implicit_cast<TNode<BoolT>>(t413));
      Branch(implicit_cast<TNode<BoolT>>(t413), label__True_148, label__False_149);
      if (label__True_148->is_used())
      {
        BIND(label__True_148);
        // ../../src/builtins/array-splice.tq:140:25
        {
          // ../../src/builtins/array-splice.tq:141:7
          StoreElements(implicit_cast<TNode<JSObject>>((*a_675)), implicit_cast<TNode<FixedArrayBase>>(kEmptyFixedArray()));
          // ../../src/builtins/array-splice.tq:142:7
          int31_t t414 = 0;
          TNode<Smi> t415 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t414)));
          StoreJSArrayLength(implicit_cast<TNode<JSArray>>((*a_675)), implicit_cast<TNode<Smi>>(t415));
          // ../../src/builtins/array-splice.tq:143:7
          *_return_109 = implicit_cast<TNode<Object>>((*deletedResult_689));
          Goto(label_macro_end_1352);
        }
      }
      BIND(label__False_149);
    }
    // ../../src/builtins/array-splice.tq:146:5
    {
      Label label__True_150_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_150 = &label__True_150_impl;
      USE(label__True_150);
      Label label__False_151_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_151 = &label__False_151_impl;
      USE(label__False_151);
      Label label_if_done_label_690_1359_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_690_1359 = &label_if_done_label_690_1359_impl;
      USE(label_if_done_label_690_1359);
      TNode<BoolT> t416 = UncheckedCast<BoolT>(IsFastSmiOrTaggedElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_110).value())));
      USE(implicit_cast<TNode<BoolT>>(t416));
      Branch(implicit_cast<TNode<BoolT>>(t416), label__True_150, label__False_151);
      if (label__True_150->is_used())
      {
        BIND(label__True_150);
        // ../../src/builtins/array-splice.tq:146:54
        {
          // ../../src/builtins/array-splice.tq:147:7
          FastSplice12ATFixedArray22UT12ATHeapObject5ATSmi(implicit_cast<CodeStubArguments*>(p_args), implicit_cast<TNode<JSArray>>((*a_675)), implicit_cast<TNode<Smi>>((*length_688)), implicit_cast<TNode<Smi>>((*newLength_674)), implicit_cast<TNode<Smi>>((*lengthDelta_673)), implicit_cast<TNode<Smi>>((*actualStart_671)), implicit_cast<TNode<Smi>>(p_insertCount), implicit_cast<TNode<Smi>>((*actualDeleteCount_672)), label_Bailout_125);
        }
        Goto(label_if_done_label_690_1359);
      }
      if (label__False_151->is_used())
      {
        BIND(label__False_151);
        // ../../src/builtins/array-splice.tq:150:12
        {
          // ../../src/builtins/array-splice.tq:151:7
          FastSplice18ATFixedDoubleArray22UT12ATHeapNumber5ATSmi(implicit_cast<CodeStubArguments*>(p_args), implicit_cast<TNode<JSArray>>((*a_675)), implicit_cast<TNode<Smi>>((*length_688)), implicit_cast<TNode<Smi>>((*newLength_674)), implicit_cast<TNode<Smi>>((*lengthDelta_673)), implicit_cast<TNode<Smi>>((*actualStart_671)), implicit_cast<TNode<Smi>>(p_insertCount), implicit_cast<TNode<Smi>>((*actualDeleteCount_672)), label_Bailout_125);
        }
        Goto(label_if_done_label_690_1359);
      }
      BIND(label_if_done_label_690_1359);
    }
    // ../../src/builtins/array-splice.tq:156:5
    *_return_109 = implicit_cast<TNode<Object>>((*deletedResult_689));
    Goto(label_macro_end_1352);
  }
  BIND(label_macro_end_1352);
  return implicit_cast<TNode<Object>>((*_return_109).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::FillDeletedElementsArray(TNode<Context> p_context, TNode<JSReceiver> p_o, TNode<Number> p_actualStart, TNode<Number> p_actualDeleteCount, TNode<JSReceiver> p_a) {
  TVARIABLE(Object, _return_112_impl);
  auto _return_112 = &_return_112_impl;
  USE(_return_112);
  Label label_macro_end_1360_impl(this, {_return_112}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1360 = &label_macro_end_1360_impl;
  USE(label_macro_end_1360);
  // ../../src/builtins/array-splice.tq:161:57
  {
    // ../../src/builtins/array-splice.tq:163:5
    int31_t t417 = 0;
    TVARIABLE(Number, k_113_impl);
    auto k_113 = &k_113_impl;
    USE(k_113);
    TNode<Number> t418 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t417)));
    *k_113 = implicit_cast<TNode<Number>>(t418);
    // ../../src/builtins/array-splice.tq:166:5
    {
      Label label__True_152_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_152 = &label__True_152_impl;
      USE(label__True_152);
      Label label__False_153_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_153 = &label__False_153_impl;
      USE(label__False_153);
      Label label_header_691_1361_impl(this, {k_113}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_691_1361 = &label_header_691_1361_impl;
      USE(label_header_691_1361);
      Goto(label_header_691_1361);
      BIND(label_header_691_1361);
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*k_113).value()), implicit_cast<TNode<Number>>(p_actualDeleteCount), label__True_152, label__False_153);
      if (label__True_152->is_used())
      {
        BIND(label__True_152);
        // ../../src/builtins/array-splice.tq:166:35
        {
          // ../../src/builtins/array-splice.tq:168:7
          TNode<Number> t419 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>(p_actualStart), implicit_cast<TNode<Number>>((*k_113).value())));
          USE(implicit_cast<TNode<Number>>(t419));
          TNode<Number> from_692_impl;
          auto from_692 = &from_692_impl;
          USE(from_692);
          *from_692 = implicit_cast<TNode<Number>>(t419);
          // ../../src/builtins/array-splice.tq:171:7
          TNode<Oddball> t420 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Object>>((*from_692))));
          USE(implicit_cast<TNode<Oddball>>(t420));
          TNode<Oddball> fromPresent_693_impl;
          auto fromPresent_693 = &fromPresent_693_impl;
          USE(fromPresent_693);
          *fromPresent_693 = implicit_cast<TNode<Oddball>>(t420);
          // ../../src/builtins/array-splice.tq:174:7
          {
            Label label__True_154_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_154 = &label__True_154_impl;
            USE(label__True_154);
            Label label__False_155_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_155 = &label__False_155_impl;
            USE(label__False_155);
            TNode<BoolT> t421 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*fromPresent_693)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t421));
            Branch(implicit_cast<TNode<BoolT>>(t421), label__True_154, label__False_155);
            if (label__True_154->is_used())
            {
              BIND(label__True_154);
              // ../../src/builtins/array-splice.tq:174:32
              {
                // ../../src/builtins/array-splice.tq:176:9
                TNode<Object> t422 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*from_692))));
                USE(implicit_cast<TNode<Object>>(t422));
                TNode<Object> fromValue_694_impl;
                auto fromValue_694 = &fromValue_694_impl;
                USE(fromValue_694);
                *fromValue_694 = implicit_cast<TNode<Object>>(t422);
                // ../../src/builtins/array-splice.tq:179:9
                CallRuntime(Runtime::kCreateDataProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_a), implicit_cast<TNode<Object>>((*k_113).value()), implicit_cast<TNode<Object>>((*fromValue_694)));
              }
              Goto(label__False_155);
            }
            BIND(label__False_155);
          }
          // ../../src/builtins/array-splice.tq:183:7
          TNode<Number> t423 = implicit_cast<TNode<Number>>((*k_113).value());
          USE(t423);
          TNode<Number> t424 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t425 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_113).value()), implicit_cast<TNode<Number>>(t424)));
          *k_113 = implicit_cast<TNode<Number>>(t425);
        }
        Goto(label_header_691_1361);
      }
      BIND(label__False_153);
    }
    // ../../src/builtins/array-splice.tq:186:5
    CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_a), implicit_cast<TNode<Object>>(kLengthString()), implicit_cast<TNode<Object>>(p_actualDeleteCount));
    // ../../src/builtins/array-splice.tq:187:5
    *_return_112 = implicit_cast<TNode<Object>>(p_a);
    Goto(label_macro_end_1360);
  }
  BIND(label_macro_end_1360);
  return implicit_cast<TNode<Object>>((*_return_112).value());
}

void ArrayBuiltinsFromDSLAssembler::HandleForwardCase(TNode<Context> p_context, TNode<JSReceiver> p_o, TNode<Number> p_len, TNode<Number> p_itemCount, TNode<Number> p_actualStart, TNode<Number> p_actualDeleteCount) {
  Label label_macro_end_1362_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1362 = &label_macro_end_1362_impl;
  USE(label_macro_end_1362);
  // ../../src/builtins/array-splice.tq:194:61
  {
    // ../../src/builtins/array-splice.tq:197:5
    TVARIABLE(Number, k_114_impl);
    auto k_114 = &k_114_impl;
    USE(k_114);
    *k_114 = implicit_cast<TNode<Number>>(p_actualStart);
    // ../../src/builtins/array-splice.tq:200:5
    {
      Label label__True_156_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_156 = &label__True_156_impl;
      USE(label__True_156);
      Label label__False_157_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_157 = &label__False_157_impl;
      USE(label__False_157);
      Label label_header_695_1363_impl(this, {k_114}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_695_1363 = &label_header_695_1363_impl;
      USE(label_header_695_1363);
      Goto(label_header_695_1363);
      BIND(label_header_695_1363);
      TNode<Number> t426 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
      USE(implicit_cast<TNode<Number>>(t426));
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(t426), label__True_156, label__False_157);
      if (label__True_156->is_used())
      {
        BIND(label__True_156);
        // ../../src/builtins/array-splice.tq:200:43
        {
          // ../../src/builtins/array-splice.tq:202:7
          TNode<Number> t427 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
          USE(implicit_cast<TNode<Number>>(t427));
          TNode<Number> from_696_impl;
          auto from_696 = &from_696_impl;
          USE(from_696);
          *from_696 = implicit_cast<TNode<Number>>(t427);
          // ../../src/builtins/array-splice.tq:204:7
          TNode<Number> t428 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(p_itemCount)));
          USE(implicit_cast<TNode<Number>>(t428));
          TNode<Number> to_697_impl;
          auto to_697 = &to_697_impl;
          USE(to_697);
          *to_697 = implicit_cast<TNode<Number>>(t428);
          // ../../src/builtins/array-splice.tq:207:7
          TNode<Oddball> t429 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Object>>((*from_696))));
          USE(implicit_cast<TNode<Oddball>>(t429));
          TNode<Oddball> fromPresent_698_impl;
          auto fromPresent_698 = &fromPresent_698_impl;
          USE(fromPresent_698);
          *fromPresent_698 = implicit_cast<TNode<Oddball>>(t429);
          // ../../src/builtins/array-splice.tq:210:7
          {
            Label label__True_158_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_158 = &label__True_158_impl;
            USE(label__True_158);
            Label label__False_159_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_159 = &label__False_159_impl;
            USE(label__False_159);
            Label label_if_done_label_699_1364_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_699_1364 = &label_if_done_label_699_1364_impl;
            USE(label_if_done_label_699_1364);
            TNode<BoolT> t430 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*fromPresent_698)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t430));
            Branch(implicit_cast<TNode<BoolT>>(t430), label__True_158, label__False_159);
            if (label__True_158->is_used())
            {
              BIND(label__True_158);
              // ../../src/builtins/array-splice.tq:210:32
              {
                // ../../src/builtins/array-splice.tq:212:9
                TNode<Object> t431 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*from_696))));
                USE(implicit_cast<TNode<Object>>(t431));
                TNode<Object> fromValue_700_impl;
                auto fromValue_700 = &fromValue_700_impl;
                USE(fromValue_700);
                *fromValue_700 = implicit_cast<TNode<Object>>(t431);
                // ../../src/builtins/array-splice.tq:215:9
                CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*to_697)), implicit_cast<TNode<Object>>((*fromValue_700)));
              }
              Goto(label_if_done_label_699_1364);
            }
            if (label__False_159->is_used())
            {
              BIND(label__False_159);
              // ../../src/builtins/array-splice.tq:218:14
              {
                // ../../src/builtins/array-splice.tq:220:9
                TNode<Smi> t432 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
                CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*to_697)), implicit_cast<TNode<Smi>>(t432));
              }
              Goto(label_if_done_label_699_1364);
            }
            BIND(label_if_done_label_699_1364);
          }
          // ../../src/builtins/array-splice.tq:223:7
          TNode<Number> t433 = implicit_cast<TNode<Number>>((*k_114).value());
          USE(t433);
          TNode<Number> t434 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t435 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(t434)));
          *k_114 = implicit_cast<TNode<Number>>(t435);
        }
        Goto(label_header_695_1363);
      }
      BIND(label__False_157);
    }
    // ../../src/builtins/array-splice.tq:227:5
    *k_114 = implicit_cast<TNode<Number>>(p_len);
    // ../../src/builtins/array-splice.tq:230:5
    {
      Label label__True_160_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_160 = &label__True_160_impl;
      USE(label__True_160);
      Label label__False_161_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_161 = &label__False_161_impl;
      USE(label__False_161);
      Label label_header_701_1365_impl(this, {k_114}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_701_1365 = &label_header_701_1365_impl;
      USE(label_header_701_1365);
      Goto(label_header_701_1365);
      BIND(label_header_701_1365);
      TNode<Number> t436 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
      USE(implicit_cast<TNode<Number>>(t436));
      TNode<Number> t437 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>(t436), implicit_cast<TNode<Number>>(p_itemCount)));
      USE(implicit_cast<TNode<Number>>(t437));
      BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(t437), label__True_160, label__False_161);
      if (label__True_160->is_used())
      {
        BIND(label__True_160);
        // ../../src/builtins/array-splice.tq:230:55
        {
          // ../../src/builtins/array-splice.tq:232:7
          int31_t t438 = 1;
          TNode<Number> t439 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t438)));
          TNode<Number> t440 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(t439)));
          USE(implicit_cast<TNode<Number>>(t440));
          TNode<Smi> t441 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
          CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>(t440), implicit_cast<TNode<Smi>>(t441));
          // ../../src/builtins/array-splice.tq:234:7
          TNode<Number> t442 = implicit_cast<TNode<Number>>((*k_114).value());
          USE(t442);
          TNode<Number> t443 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t444 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*k_114).value()), implicit_cast<TNode<Number>>(t443)));
          *k_114 = implicit_cast<TNode<Number>>(t444);
        }
        Goto(label_header_701_1365);
      }
      BIND(label__False_161);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::HandleBackwardCase(TNode<Context> p_context, TNode<JSReceiver> p_o, TNode<Number> p_len, TNode<Number> p_itemCount, TNode<Number> p_actualStart, TNode<Number> p_actualDeleteCount) {
  Label label_macro_end_1366_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1366 = &label_macro_end_1366_impl;
  USE(label_macro_end_1366);
  // ../../src/builtins/array-splice.tq:242:61
  {
    // ../../src/builtins/array-splice.tq:245:5
    TNode<Number> t445 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
    USE(implicit_cast<TNode<Number>>(t445));
    TVARIABLE(Number, k_115_impl);
    auto k_115 = &k_115_impl;
    USE(k_115);
    *k_115 = implicit_cast<TNode<Number>>(t445);
    // ../../src/builtins/array-splice.tq:248:5
    {
      Label label__True_162_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_162 = &label__True_162_impl;
      USE(label__True_162);
      Label label__False_163_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_163 = &label__False_163_impl;
      USE(label__False_163);
      Label label_header_702_1367_impl(this, {k_115}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_702_1367 = &label_header_702_1367_impl;
      USE(label_header_702_1367);
      Goto(label_header_702_1367);
      BIND(label_header_702_1367);
      BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>((*k_115).value()), implicit_cast<TNode<Number>>(p_actualStart), label__True_162, label__False_163);
      if (label__True_162->is_used())
      {
        BIND(label__True_162);
        // ../../src/builtins/array-splice.tq:248:29
        {
          // ../../src/builtins/array-splice.tq:250:7
          TNode<Number> t446 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_115).value()), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
          USE(implicit_cast<TNode<Number>>(t446));
          int31_t t447 = 1;
          TNode<Number> t448 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t447)));
          TNode<Number> t449 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t446), implicit_cast<TNode<Number>>(t448)));
          USE(implicit_cast<TNode<Number>>(t449));
          TNode<Number> from_703_impl;
          auto from_703 = &from_703_impl;
          USE(from_703);
          *from_703 = implicit_cast<TNode<Number>>(t449);
          // ../../src/builtins/array-splice.tq:253:7
          TNode<Number> t450 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_115).value()), implicit_cast<TNode<Number>>(p_itemCount)));
          USE(implicit_cast<TNode<Number>>(t450));
          int31_t t451 = 1;
          TNode<Number> t452 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t451)));
          TNode<Number> t453 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t450), implicit_cast<TNode<Number>>(t452)));
          USE(implicit_cast<TNode<Number>>(t453));
          TNode<Number> to_704_impl;
          auto to_704 = &to_704_impl;
          USE(to_704);
          *to_704 = implicit_cast<TNode<Number>>(t453);
          // ../../src/builtins/array-splice.tq:256:7
          TNode<Oddball> t454 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Object>>((*from_703))));
          USE(implicit_cast<TNode<Oddball>>(t454));
          TNode<Oddball> fromPresent_705_impl;
          auto fromPresent_705 = &fromPresent_705_impl;
          USE(fromPresent_705);
          *fromPresent_705 = implicit_cast<TNode<Oddball>>(t454);
          // ../../src/builtins/array-splice.tq:259:7
          {
            Label label__True_164_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_164 = &label__True_164_impl;
            USE(label__True_164);
            Label label__False_165_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_165 = &label__False_165_impl;
            USE(label__False_165);
            Label label_if_done_label_706_1368_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_706_1368 = &label_if_done_label_706_1368_impl;
            USE(label_if_done_label_706_1368);
            TNode<BoolT> t455 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*fromPresent_705)), implicit_cast<TNode<Object>>(True())));
            USE(implicit_cast<TNode<BoolT>>(t455));
            Branch(implicit_cast<TNode<BoolT>>(t455), label__True_164, label__False_165);
            if (label__True_164->is_used())
            {
              BIND(label__True_164);
              // ../../src/builtins/array-splice.tq:259:32
              {
                // ../../src/builtins/array-splice.tq:261:9
                TNode<Object> t456 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*from_703))));
                USE(implicit_cast<TNode<Object>>(t456));
                TNode<Object> fromValue_707_impl;
                auto fromValue_707 = &fromValue_707_impl;
                USE(fromValue_707);
                *fromValue_707 = implicit_cast<TNode<Object>>(t456);
                // ../../src/builtins/array-splice.tq:264:9
                CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*to_704)), implicit_cast<TNode<Object>>((*fromValue_707)));
              }
              Goto(label_if_done_label_706_1368);
            }
            if (label__False_165->is_used())
            {
              BIND(label__False_165);
              // ../../src/builtins/array-splice.tq:267:14
              {
                // ../../src/builtins/array-splice.tq:269:9
                TNode<Smi> t457 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
                CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*to_704)), implicit_cast<TNode<Smi>>(t457));
              }
              Goto(label_if_done_label_706_1368);
            }
            BIND(label_if_done_label_706_1368);
          }
          // ../../src/builtins/array-splice.tq:273:7
          TNode<Number> t458 = implicit_cast<TNode<Number>>((*k_115).value());
          USE(t458);
          TNode<Number> t459 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Number> t460 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*k_115).value()), implicit_cast<TNode<Number>>(t459)));
          *k_115 = implicit_cast<TNode<Number>>(t460);
        }
        Goto(label_header_702_1367);
      }
      BIND(label__False_163);
    }
  }
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::SlowSplice(TNode<Context> p_context, CodeStubArguments* p_arguments, TNode<JSReceiver> p_o, TNode<Number> p_len, TNode<Number> p_actualStart, TNode<Smi> p_insertCount, TNode<Number> p_actualDeleteCount) {
  TVARIABLE(Object, _return_116_impl);
  auto _return_116 = &_return_116_impl;
  USE(_return_116);
  Label label_macro_end_1369_impl(this, {_return_116}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1369 = &label_macro_end_1369_impl;
  USE(label_macro_end_1369);
  // ../../src/builtins/array-splice.tq:280:42
  {
    // ../../src/builtins/array-splice.tq:281:5
    TNode<Number> t461 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>(p_actualStart)));
    USE(implicit_cast<TNode<Number>>(t461));
    TNode<Number> t462 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t461), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
    USE(implicit_cast<TNode<Number>>(t462));
    TNode<Number> affected_708_impl;
    auto affected_708 = &affected_708_impl;
    USE(affected_708);
    *affected_708 = implicit_cast<TNode<Number>>(t462);
    // ../../src/builtins/array-splice.tq:284:5
    TNode<JSReceiver> t463 = UncheckedCast<JSReceiver>(ArraySpeciesCreate(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
    USE(implicit_cast<TNode<JSReceiver>>(t463));
    TNode<JSReceiver> a_709_impl;
    auto a_709 = &a_709_impl;
    USE(a_709);
    *a_709 = implicit_cast<TNode<JSReceiver>>(t463);
    // ../../src/builtins/array-splice.tq:285:5
    TNode<Number> itemCount_710_impl;
    auto itemCount_710 = &itemCount_710_impl;
    USE(itemCount_710);
    *itemCount_710 = implicit_cast<TNode<Number>>(p_insertCount);
    // ../../src/builtins/array-splice.tq:288:5
    TNode<Object> t464 = UncheckedCast<Object>(FillDeletedElementsArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Number>>(p_actualStart), implicit_cast<TNode<Number>>(p_actualDeleteCount), implicit_cast<TNode<JSReceiver>>((*a_709))));
    USE(implicit_cast<TNode<Object>>(t464));
    // ../../src/builtins/array-splice.tq:298:5
    {
      Label label__True_166_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_166 = &label__True_166_impl;
      USE(label__True_166);
      Label label__False_167_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_167 = &label__False_167_impl;
      USE(label__False_167);
      Label label_if_done_label_711_1370_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_711_1370 = &label_if_done_label_711_1370_impl;
      USE(label_if_done_label_711_1370);
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*itemCount_710)), implicit_cast<TNode<Number>>(p_actualDeleteCount), label__True_166, label__False_167);
      if (label__True_166->is_used())
      {
        BIND(label__True_166);
        // ../../src/builtins/array-splice.tq:298:40
        {
          // ../../src/builtins/array-splice.tq:299:7
          HandleForwardCase(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>((*itemCount_710)), implicit_cast<TNode<Number>>(p_actualStart), implicit_cast<TNode<Number>>(p_actualDeleteCount));
        }
        Goto(label_if_done_label_711_1370);
      }
      if (label__False_167->is_used())
      {
        BIND(label__False_167);
        // ../../src/builtins/array-splice.tq:302:12
        {
          Label label__True_168_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_168 = &label__True_168_impl;
          USE(label__True_168);
          Label label__False_169_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_169 = &label__False_169_impl;
          USE(label__False_169);
          BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>((*itemCount_710)), implicit_cast<TNode<Number>>(p_actualDeleteCount), label__True_168, label__False_169);
          if (label__True_168->is_used())
          {
            BIND(label__True_168);
            // ../../src/builtins/array-splice.tq:302:47
            {
              // ../../src/builtins/array-splice.tq:303:7
              HandleBackwardCase(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_o), implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>((*itemCount_710)), implicit_cast<TNode<Number>>(p_actualStart), implicit_cast<TNode<Number>>(p_actualDeleteCount));
            }
            Goto(label__False_169);
          }
          BIND(label__False_169);
        }
        Goto(label_if_done_label_711_1370);
      }
      BIND(label_if_done_label_711_1370);
    }
    // ../../src/builtins/array-splice.tq:308:5
    TVARIABLE(Number, k_117_impl);
    auto k_117 = &k_117_impl;
    USE(k_117);
    *k_117 = implicit_cast<TNode<Number>>(p_actualStart);
    // ../../src/builtins/array-splice.tq:313:5
    {
      Label label__True_170_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_170 = &label__True_170_impl;
      USE(label__True_170);
      Label label__False_171_impl(this, {k_117}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_171 = &label__False_171_impl;
      USE(label__False_171);
      TNode<IntPtrT> t465 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_arguments)));
      int31_t t466 = 2;
      TNode<IntPtrT> t467 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t466)));
      TNode<BoolT> t468 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t465), implicit_cast<TNode<IntPtrT>>(t467)));
      USE(implicit_cast<TNode<BoolT>>(t468));
      Branch(implicit_cast<TNode<BoolT>>(t468), label__True_170, label__False_171);
      if (label__True_170->is_used())
      {
        BIND(label__True_170);
        // ../../src/builtins/array-splice.tq:313:31
        {
          // ../../src/builtins/array-splice.tq:314:7
          int31_t t469 = 2;
          TNode<IntPtrT> t470 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_arguments)));
          Label label_body_712_1371_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_body_712_1371 = &label_body_712_1371_impl;
          USE(label_body_712_1371);
          Label label_increment_713_1372_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_increment_713_1372 = &label_increment_713_1372_impl;
          USE(label_increment_713_1372);
          Label label_exit_714_1373_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_exit_714_1373 = &label_exit_714_1373_impl;
          USE(label_exit_714_1373);
          TVARIABLE(IntPtrT, _for_index_t471_715_impl);
          auto _for_index_t471_715 = &_for_index_t471_715_impl;
          USE(_for_index_t471_715);
          TNode<IntPtrT> t472 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t469)));
          *_for_index_t471_715 = implicit_cast<TNode<IntPtrT>>(t472);
          Label label_header_716_1374_impl(this, {_for_index_t471_715, k_117}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_header_716_1374 = &label_header_716_1374_impl;
          USE(label_header_716_1374);
          Goto(label_header_716_1374);
          BIND(label_header_716_1374);
          TNode<BoolT> t473 = UncheckedCast<BoolT>(IntPtrLessThan(implicit_cast<TNode<IntPtrT>>((*_for_index_t471_715).value()), implicit_cast<TNode<IntPtrT>>(t470)));
          Branch(implicit_cast<TNode<BoolT>>(t473), label_body_712_1371, label_exit_714_1373);
          BIND(label_body_712_1371);
          TNode<Object> t474 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(p_arguments), implicit_cast<TNode<IntPtrT>>((*_for_index_t471_715).value())));
          TVARIABLE(Object, e_118_impl);
          auto e_118 = &e_118_impl;
          USE(e_118);
          *e_118 = implicit_cast<TNode<Object>>(t474);
          // ../../src/builtins/array-splice.tq:314:46
          {
            // ../../src/builtins/array-splice.tq:316:9
            CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>((*k_117).value()), implicit_cast<TNode<Object>>((*e_118).value()));
            // ../../src/builtins/array-splice.tq:319:9
            int31_t t475 = 1;
            TNode<Number> t476 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t475)));
            TNode<Number> t477 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_117).value()), implicit_cast<TNode<Number>>(t476)));
            USE(implicit_cast<TNode<Number>>(t477));
            *k_117 = implicit_cast<TNode<Number>>(t477);
          }
          Goto(label_increment_713_1372);
          BIND(label_increment_713_1372);
          TNode<IntPtrT> t478 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(1)));
          TNode<IntPtrT> t479 = UncheckedCast<IntPtrT>(IntPtrAdd(implicit_cast<TNode<IntPtrT>>((*_for_index_t471_715).value()), implicit_cast<TNode<IntPtrT>>(t478)));
          *_for_index_t471_715 = implicit_cast<TNode<IntPtrT>>(t479);
          Goto(label_header_716_1374);
          BIND(label_exit_714_1373);
        }
        Goto(label__False_171);
      }
      BIND(label__False_171);
    }
    // ../../src/builtins/array-splice.tq:325:5
    TNode<Number> t480 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(p_len), implicit_cast<TNode<Number>>(p_actualDeleteCount)));
    USE(implicit_cast<TNode<Number>>(t480));
    TNode<Number> t481 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>(t480), implicit_cast<TNode<Number>>((*itemCount_710))));
    USE(implicit_cast<TNode<Number>>(t481));
    CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_o), implicit_cast<TNode<Object>>(kLengthString()), implicit_cast<TNode<Object>>(t481));
    // ../../src/builtins/array-splice.tq:327:5
    *_return_116 = implicit_cast<TNode<Object>>((*a_709));
    Goto(label_macro_end_1369);
  }
  BIND(label_macro_end_1369);
  return implicit_cast<TNode<Object>>((*_return_116).value());
}

TF_BUILTIN(ArraySplice, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/array-splice.tq:332:65
  {
    // ../../src/builtins/array-splice.tq:334:5
    TNode<JSReceiver> t482 = UncheckedCast<JSReceiver>(CallBuiltin(Builtins::kToObject, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t482));
    TNode<JSReceiver> o_717_impl;
    auto o_717 = &o_717_impl;
    USE(o_717);
    *o_717 = implicit_cast<TNode<JSReceiver>>(t482);
    // ../../src/builtins/array-splice.tq:337:5
    TNode<Number> t483 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*o_717))));
    USE(implicit_cast<TNode<Number>>(t483));
    TNode<Number> len_718_impl;
    auto len_718 = &len_718_impl;
    USE(len_718);
    *len_718 = implicit_cast<TNode<Number>>(t483);
    // ../../src/builtins/array-splice.tq:340:5
    int31_t t484 = 0;
    TNode<IntPtrT> t485 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t484)));
    TNode<Object> t486 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t485)));
    TNode<Object> start_719_impl;
    auto start_719 = &start_719_impl;
    USE(start_719);
    *start_719 = implicit_cast<TNode<Object>>(t486);
    // ../../src/builtins/array-splice.tq:341:5
    TNode<Number> t487 = UncheckedCast<Number>(ToInteger_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*start_719))));
    USE(implicit_cast<TNode<Number>>(t487));
    TNode<Number> relativeStart_720_impl;
    auto relativeStart_720 = &relativeStart_720_impl;
    USE(relativeStart_720);
    *relativeStart_720 = implicit_cast<TNode<Number>>(t487);
    // ../../src/builtins/array-splice.tq:346:5
    auto t488 = [=]() {
      TNode<Number> t490 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*len_718)), implicit_cast<TNode<Number>>((*relativeStart_720))));
      USE(implicit_cast<TNode<Number>>(t490));
      int31_t t491 = 0;
      TNode<Number> t492 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t491)));
      TNode<Number> t493 = UncheckedCast<Number>(Max(implicit_cast<TNode<Number>>(t490), implicit_cast<TNode<Number>>(t492)));
      USE(implicit_cast<TNode<Number>>(t493));
      return implicit_cast<TNode<Number>>(t493);
    };
    auto t489 = [=]() {
      TNode<Number> t494 = UncheckedCast<Number>(Min(implicit_cast<TNode<Number>>((*relativeStart_720)), implicit_cast<TNode<Number>>((*len_718))));
      USE(implicit_cast<TNode<Number>>(t494));
      return implicit_cast<TNode<Number>>(t494);
    };
    TVARIABLE(Number, t495_721_impl);
    auto t495_721 = &t495_721_impl;
    USE(t495_721);
    {
      Label label__True_172_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_172 = &label__True_172_impl;
      USE(label__True_172);
      Label label__False_173_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_173 = &label__False_173_impl;
      USE(label__False_173);
      Label label__done_722_1375_impl(this, {t495_721}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_722_1375 = &label__done_722_1375_impl;
      USE(label__done_722_1375);
      int31_t t496 = 0;
      TNode<Number> t497 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t496)));
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*relativeStart_720)), implicit_cast<TNode<Number>>(t497), label__True_172, label__False_173);
      BIND(label__True_172);
            *t495_721 = implicit_cast<TNode<Number>>(t488());
      Goto(label__done_722_1375);
      BIND(label__False_173);
            *t495_721 = implicit_cast<TNode<Number>>(t489());
      Goto(label__done_722_1375);
      BIND(label__done_722_1375);
    }
    TNode<Number> actualStart_723_impl;
    auto actualStart_723 = &actualStart_723_impl;
    USE(actualStart_723);
    *actualStart_723 = implicit_cast<TNode<Number>>((*t495_721).value());
    // ../../src/builtins/array-splice.tq:350:5
    TVARIABLE(Smi, insertCount_119_impl);
    auto insertCount_119 = &insertCount_119_impl;
    USE(insertCount_119);
    // ../../src/builtins/array-splice.tq:351:5
    TVARIABLE(Number, actualDeleteCount_120_impl);
    auto actualDeleteCount_120 = &actualDeleteCount_120_impl;
    USE(actualDeleteCount_120);
    // ../../src/builtins/array-splice.tq:353:5
    {
      Label label__True_174_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_174 = &label__True_174_impl;
      USE(label__True_174);
      Label label__False_175_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_175 = &label__False_175_impl;
      USE(label__False_175);
      Label label_if_done_label_724_1376_impl(this, {actualDeleteCount_120, insertCount_119}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_724_1376 = &label_if_done_label_724_1376_impl;
      USE(label_if_done_label_724_1376);
      TNode<IntPtrT> t498 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t499 = 0;
      TNode<IntPtrT> t500 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t499)));
      TNode<BoolT> t501 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<IntPtrT>>(t498), implicit_cast<TNode<IntPtrT>>(t500)));
      USE(implicit_cast<TNode<BoolT>>(t501));
      Branch(implicit_cast<TNode<BoolT>>(t501), label__True_174, label__False_175);
      if (label__True_174->is_used())
      {
        BIND(label__True_174);
        // ../../src/builtins/array-splice.tq:353:32
        {
          // ../../src/builtins/array-splice.tq:355:7
          int31_t t502 = 0;
          TNode<Smi> t503 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t502)));
          *insertCount_119 = implicit_cast<TNode<Smi>>(t503);
          // ../../src/builtins/array-splice.tq:357:7
          int31_t t504 = 0;
          TNode<Number> t505 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t504)));
          *actualDeleteCount_120 = implicit_cast<TNode<Number>>(t505);
        }
        Goto(label_if_done_label_724_1376);
      }
      if (label__False_175->is_used())
      {
        BIND(label__False_175);
        // ../../src/builtins/array-splice.tq:359:12
        {
          Label label__True_176_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_176 = &label__True_176_impl;
          USE(label__True_176);
          Label label__False_177_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_177 = &label__False_177_impl;
          USE(label__False_177);
          Label label_if_done_label_725_1377_impl(this, {actualDeleteCount_120, insertCount_119}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_if_done_label_725_1377 = &label_if_done_label_725_1377_impl;
          USE(label_if_done_label_725_1377);
          TNode<IntPtrT> t506 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
          int31_t t507 = 1;
          TNode<IntPtrT> t508 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t507)));
          TNode<BoolT> t509 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<IntPtrT>>(t506), implicit_cast<TNode<IntPtrT>>(t508)));
          USE(implicit_cast<TNode<BoolT>>(t509));
          Branch(implicit_cast<TNode<BoolT>>(t509), label__True_176, label__False_177);
          if (label__True_176->is_used())
          {
            BIND(label__True_176);
            // ../../src/builtins/array-splice.tq:359:39
            {
              // ../../src/builtins/array-splice.tq:361:7
              int31_t t510 = 0;
              TNode<Smi> t511 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t510)));
              *insertCount_119 = implicit_cast<TNode<Smi>>(t511);
              // ../../src/builtins/array-splice.tq:363:7
              TNode<Number> t512 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*len_718)), implicit_cast<TNode<Number>>((*actualStart_723))));
              USE(implicit_cast<TNode<Number>>(t512));
              *actualDeleteCount_120 = implicit_cast<TNode<Number>>(t512);
            }
            Goto(label_if_done_label_725_1377);
          }
          if (label__False_177->is_used())
          {
            BIND(label__False_177);
            // ../../src/builtins/array-splice.tq:365:12
            {
              // ../../src/builtins/array-splice.tq:367:7
              TNode<IntPtrT> t513 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
              TNode<Smi> t514 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<IntPtrT>>(t513)));
              USE(implicit_cast<TNode<Smi>>(t514));
              int31_t t515 = 2;
              TNode<Smi> t516 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t515)));
              TNode<Smi> t517 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t514), implicit_cast<TNode<Smi>>(t516)));
              USE(implicit_cast<TNode<Smi>>(t517));
              *insertCount_119 = implicit_cast<TNode<Smi>>(t517);
              // ../../src/builtins/array-splice.tq:369:7
              int31_t t518 = 1;
              TNode<IntPtrT> t519 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t518)));
              TNode<Object> t520 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t519)));
              TNode<Object> deleteCount_726_impl;
              auto deleteCount_726 = &deleteCount_726_impl;
              USE(deleteCount_726);
              *deleteCount_726 = implicit_cast<TNode<Object>>(t520);
              // ../../src/builtins/array-splice.tq:370:7
              TNode<Number> t521 = UncheckedCast<Number>(ToInteger_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*deleteCount_726))));
              USE(implicit_cast<TNode<Number>>(t521));
              TNode<Number> dc_727_impl;
              auto dc_727 = &dc_727_impl;
              USE(dc_727);
              *dc_727 = implicit_cast<TNode<Number>>(t521);
              // ../../src/builtins/array-splice.tq:372:7
              int31_t t522 = 0;
              TNode<Number> t523 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t522)));
              TNode<Number> t524 = UncheckedCast<Number>(Max(implicit_cast<TNode<Number>>((*dc_727)), implicit_cast<TNode<Number>>(t523)));
              USE(implicit_cast<TNode<Number>>(t524));
              TNode<Number> t525 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*len_718)), implicit_cast<TNode<Number>>((*actualStart_723))));
              USE(implicit_cast<TNode<Number>>(t525));
              TNode<Number> t526 = UncheckedCast<Number>(Min(implicit_cast<TNode<Number>>(t524), implicit_cast<TNode<Number>>(t525)));
              USE(implicit_cast<TNode<Number>>(t526));
              *actualDeleteCount_120 = implicit_cast<TNode<Number>>(t526);
            }
            Goto(label_if_done_label_725_1377);
          }
          BIND(label_if_done_label_725_1377);
        }
        Goto(label_if_done_label_724_1376);
      }
      BIND(label_if_done_label_724_1376);
    }
    // ../../src/builtins/array-splice.tq:377:5
    TNode<Number> t527 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*len_718)), implicit_cast<TNode<Number>>((*insertCount_119).value())));
    USE(implicit_cast<TNode<Number>>(t527));
    TNode<Number> t528 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t527), implicit_cast<TNode<Number>>((*actualDeleteCount_120).value())));
    USE(implicit_cast<TNode<Number>>(t528));
    TNode<Number> newLength_728_impl;
    auto newLength_728 = &newLength_728_impl;
    USE(newLength_728);
    *newLength_728 = implicit_cast<TNode<Number>>(t528);
    // ../../src/builtins/array-splice.tq:378:5
    {
      Label label__True_178_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_178 = &label__True_178_impl;
      USE(label__True_178);
      Label label__False_179_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_179 = &label__False_179_impl;
      USE(label__False_179);
      TNode<Number> t529 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<double>(kMaxSafeInteger)));
      BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>((*newLength_728)), implicit_cast<TNode<Number>>(t529), label__True_178, label__False_179);
      if (label__True_178->is_used())
      {
        BIND(label__True_178);
        // ../../src/builtins/array-splice.tq:378:38
        {
          // ../../src/builtins/array-splice.tq:379:7
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kInvalidArrayLength), implicit_cast<TNode<Object>>((*start_719)));
        }
      }
      BIND(label__False_179);
    }
    // ../../src/builtins/array-splice.tq:382:5
    {
      Label label_try_done_729_1378_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_729_1378 = &label_try_done_729_1378_impl;
      USE(label_try_done_729_1378);
      Label label_Bailout_180_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_180 = &label_Bailout_180_impl;
      USE(label_Bailout_180);
      Label label_try_begin_730_1379_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_730_1379 = &label_try_begin_730_1379_impl;
      USE(label_try_begin_730_1379);
      Goto(label_try_begin_730_1379);
      if (label_try_begin_730_1379->is_used())
      {
        BIND(label_try_begin_730_1379);
        // ../../src/builtins/array-splice.tq:382:9
        {
          // ../../src/builtins/array-splice.tq:383:7
          TNode<Object> t530 = UncheckedCast<Object>(FastArraySplice(implicit_cast<TNode<Context>>(p_context), implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<JSReceiver>>((*o_717)), implicit_cast<TNode<Number>>((*len_718)), implicit_cast<TNode<Number>>((*actualStart_723)), implicit_cast<TNode<Smi>>((*insertCount_119).value()), implicit_cast<TNode<Number>>((*actualDeleteCount_120).value()), label_Bailout_180));
          USE(implicit_cast<TNode<Object>>(t530));
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(t530));
        }
      }
      if (label_Bailout_180->is_used())
      {
        BIND(label_Bailout_180);
        // ../../src/builtins/array-splice.tq:387:19
        {
        }
        Goto(label_try_done_729_1378);
      }
      BIND(label_try_done_729_1378);
    }
    // ../../src/builtins/array-splice.tq:391:5
    TNode<Object> t531 = UncheckedCast<Object>(SlowSplice(implicit_cast<TNode<Context>>(p_context), implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<JSReceiver>>((*o_717)), implicit_cast<TNode<Number>>((*len_718)), implicit_cast<TNode<Number>>((*actualStart_723)), implicit_cast<TNode<Smi>>((*insertCount_119).value()), implicit_cast<TNode<Number>>((*actualDeleteCount_120).value())));
    USE(implicit_cast<TNode<Object>>(t531));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t531));
  }
}

void ArrayBuiltinsFromDSLAssembler::TryFastArrayUnshift(TNode<Context> p_context, TNode<Object> p_receiver, CodeStubArguments* p_arguments, Label* label_Slow_181) {
  Label label_macro_end_1380_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1380 = &label_macro_end_1380_impl;
  USE(label_macro_end_1380);
  // ../../src/builtins/array-unshift.tq:11:19
  {
    // ../../src/builtins/array-unshift.tq:12:5
    EnsureFastJSArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), label_Slow_181);
    // ../../src/builtins/array-unshift.tq:13:5
    TNode<JSArray> t532 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSArray>>(t532));
    TNode<JSArray> array_731_impl;
    auto array_731 = &array_731_impl;
    USE(array_731);
    *array_731 = implicit_cast<TNode<JSArray>>(t532);
    // ../../src/builtins/array-unshift.tq:14:5
    EnsureWriteableFastElements(implicit_cast<TNode<JSArray>>((*array_731)));
    // ../../src/builtins/array-unshift.tq:16:5
    TNode<Map> t533 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*array_731))));
    TNode<Map> map_732_impl;
    auto map_732 = &map_732_impl;
    USE(map_732);
    *map_732 = implicit_cast<TNode<Map>>(t533);
    // ../../src/builtins/array-unshift.tq:17:5
    {
      Label label__True_182_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_182 = &label__True_182_impl;
      USE(label__True_182);
      Label label__False_183_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_183 = &label__False_183_impl;
      USE(label__False_183);
      TNode<BoolT> t534 = UncheckedCast<BoolT>(IsExtensibleMap(implicit_cast<TNode<Map>>((*map_732))));
      USE(implicit_cast<TNode<BoolT>>(t534));
      TNode<BoolT> t535 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t534)));
      USE(implicit_cast<TNode<BoolT>>(t535));
      Branch(implicit_cast<TNode<BoolT>>(t535), label__True_182, label__False_183);
      if (label__True_182->is_used())
      {
        BIND(label__True_182);
        // ../../src/builtins/array-unshift.tq:17:32
        Goto(label_Slow_181);
      }
      BIND(label__False_183);
    }
    // ../../src/builtins/array-unshift.tq:18:5
    EnsureArrayLengthWritable(implicit_cast<TNode<Map>>((*map_732)), label_Slow_181);
    // ../../src/builtins/array-unshift.tq:20:5
    TNode<JSFunction> t536 = UncheckedCast<JSFunction>(LoadTargetFromFrame());
    USE(implicit_cast<TNode<JSFunction>>(t536));
    TNode<IntPtrT> t537 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_arguments)));
    TNode<Int32T> t538 = UncheckedCast<Int32T>(Convert7ATint32(implicit_cast<TNode<IntPtrT>>(t537)));
    USE(implicit_cast<TNode<Int32T>>(t538));
    TailCallBuiltin(Builtins::kArrayUnshift, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSFunction>>(t536), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<TNode<Int32T>>(t538));
  }
}

compiler::TNode<Number> ArrayBuiltinsFromDSLAssembler::GenericArrayUnshift(TNode<Context> p_context, TNode<Object> p_receiver, CodeStubArguments* p_arguments) {
  TVARIABLE(Number, _return_121_impl);
  auto _return_121 = &_return_121_impl;
  USE(_return_121);
  Label label_macro_end_1381_impl(this, {_return_121}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1381 = &label_macro_end_1381_impl;
  USE(label_macro_end_1381);
  // ../../src/builtins/array-unshift.tq:27:47
  {
    // ../../src/builtins/array-unshift.tq:29:5
    TNode<JSReceiver> t539 = UncheckedCast<JSReceiver>(ToObject_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t539));
    TNode<JSReceiver> object_733_impl;
    auto object_733 = &object_733_impl;
    USE(object_733);
    *object_733 = implicit_cast<TNode<JSReceiver>>(t539);
    // ../../src/builtins/array-unshift.tq:32:5
    TNode<Number> t540 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_733))));
    USE(implicit_cast<TNode<Number>>(t540));
    TNode<Number> length_734_impl;
    auto length_734 = &length_734_impl;
    USE(length_734);
    *length_734 = implicit_cast<TNode<Number>>(t540);
    // ../../src/builtins/array-unshift.tq:35:5
    TNode<IntPtrT> t541 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_arguments)));
    TNode<Smi> t542 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<IntPtrT>>(t541)));
    USE(implicit_cast<TNode<Smi>>(t542));
    TNode<Smi> argCount_735_impl;
    auto argCount_735 = &argCount_735_impl;
    USE(argCount_735);
    *argCount_735 = implicit_cast<TNode<Smi>>(t542);
    // ../../src/builtins/array-unshift.tq:38:5
    {
      Label label__True_184_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_184 = &label__True_184_impl;
      USE(label__True_184);
      Label label__False_185_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_185 = &label__False_185_impl;
      USE(label__False_185);
      int31_t t543 = 0;
      TNode<Smi> t544 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t543)));
      TNode<BoolT> t545 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*argCount_735)), implicit_cast<TNode<Smi>>(t544)));
      USE(implicit_cast<TNode<BoolT>>(t545));
      Branch(implicit_cast<TNode<BoolT>>(t545), label__True_184, label__False_185);
      if (label__True_184->is_used())
      {
        BIND(label__True_184);
        // ../../src/builtins/array-unshift.tq:38:23
        {
          // ../../src/builtins/array-unshift.tq:40:7
          {
            Label label__True_186_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_186 = &label__True_186_impl;
            USE(label__True_186);
            Label label__False_187_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_187 = &label__False_187_impl;
            USE(label__False_187);
            TNode<Number> t546 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*length_734)), implicit_cast<TNode<Number>>((*argCount_735))));
            USE(implicit_cast<TNode<Number>>(t546));
            TNode<Number> t547 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<double>(kMaxSafeInteger)));
            BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>(t546), implicit_cast<TNode<Number>>(t547), label__True_186, label__False_187);
            if (label__True_186->is_used())
            {
              BIND(label__True_186);
              // ../../src/builtins/array-unshift.tq:40:48
              {
                // ../../src/builtins/array-unshift.tq:41:9
                ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kInvalidArrayLength));
              }
            }
            BIND(label__False_187);
          }
          // ../../src/builtins/array-unshift.tq:45:7
          TVARIABLE(Number, k_122_impl);
          auto k_122 = &k_122_impl;
          USE(k_122);
          *k_122 = implicit_cast<TNode<Number>>((*length_734));
          // ../../src/builtins/array-unshift.tq:48:7
          {
            Label label__True_188_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_188 = &label__True_188_impl;
            USE(label__True_188);
            Label label__False_189_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_189 = &label__False_189_impl;
            USE(label__False_189);
            Label label_header_736_1382_impl(this, {k_122}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_736_1382 = &label_header_736_1382_impl;
            USE(label_header_736_1382);
            Goto(label_header_736_1382);
            BIND(label_header_736_1382);
            int31_t t548 = 0;
            TNode<Number> t549 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t548)));
            BranchIfNumberGreaterThan(implicit_cast<TNode<Number>>((*k_122).value()), implicit_cast<TNode<Number>>(t549), label__True_188, label__False_189);
            if (label__True_188->is_used())
            {
              BIND(label__True_188);
              // ../../src/builtins/array-unshift.tq:48:21
              {
                // ../../src/builtins/array-unshift.tq:50:9
                int31_t t550 = 1;
                TNode<Number> t551 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t550)));
                TNode<Number> t552 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*k_122).value()), implicit_cast<TNode<Number>>(t551)));
                USE(implicit_cast<TNode<Number>>(t552));
                TNode<Number> from_737_impl;
                auto from_737 = &from_737_impl;
                USE(from_737);
                *from_737 = implicit_cast<TNode<Number>>(t552);
                // ../../src/builtins/array-unshift.tq:53:9
                TNode<Number> t553 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*k_122).value()), implicit_cast<TNode<Number>>((*argCount_735))));
                USE(implicit_cast<TNode<Number>>(t553));
                int31_t t554 = 1;
                TNode<Number> t555 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t554)));
                TNode<Number> t556 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>(t553), implicit_cast<TNode<Number>>(t555)));
                USE(implicit_cast<TNode<Number>>(t556));
                TNode<Number> to_738_impl;
                auto to_738 = &to_738_impl;
                USE(to_738);
                *to_738 = implicit_cast<TNode<Number>>(t556);
                // ../../src/builtins/array-unshift.tq:56:9
                TNode<Oddball> t557 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kHasProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*object_733)), implicit_cast<TNode<Object>>((*from_737))));
                USE(implicit_cast<TNode<Oddball>>(t557));
                TNode<Oddball> fromPresent_739_impl;
                auto fromPresent_739 = &fromPresent_739_impl;
                USE(fromPresent_739);
                *fromPresent_739 = implicit_cast<TNode<Oddball>>(t557);
                // ../../src/builtins/array-unshift.tq:59:9
                {
                  Label label__True_190_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_190 = &label__True_190_impl;
                  USE(label__True_190);
                  Label label__False_191_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_191 = &label__False_191_impl;
                  USE(label__False_191);
                  Label label_if_done_label_740_1383_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_if_done_label_740_1383 = &label_if_done_label_740_1383_impl;
                  USE(label_if_done_label_740_1383);
                  TNode<BoolT> t558 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*fromPresent_739)), implicit_cast<TNode<Object>>(True())));
                  USE(implicit_cast<TNode<BoolT>>(t558));
                  Branch(implicit_cast<TNode<BoolT>>(t558), label__True_190, label__False_191);
                  if (label__True_190->is_used())
                  {
                    BIND(label__True_190);
                    // ../../src/builtins/array-unshift.tq:59:34
                    {
                      // ../../src/builtins/array-unshift.tq:61:11
                      TNode<Object> t559 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_733)), implicit_cast<TNode<Object>>((*from_737))));
                      USE(implicit_cast<TNode<Object>>(t559));
                      TNode<Object> fromValue_741_impl;
                      auto fromValue_741 = &fromValue_741_impl;
                      USE(fromValue_741);
                      *fromValue_741 = implicit_cast<TNode<Object>>(t559);
                      // ../../src/builtins/array-unshift.tq:64:11
                      CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_733)), implicit_cast<TNode<Object>>((*to_738)), implicit_cast<TNode<Object>>((*fromValue_741)));
                    }
                    Goto(label_if_done_label_740_1383);
                  }
                  if (label__False_191->is_used())
                  {
                    BIND(label__False_191);
                    // ../../src/builtins/array-unshift.tq:65:16
                    {
                      // ../../src/builtins/array-unshift.tq:67:11
                      TNode<Smi> t560 = UncheckedCast<Smi>(FromConstexpr14ATLanguageMode(implicit_cast<LanguageMode>(LanguageMode::kStrict)));
                      CallBuiltin(Builtins::kDeleteProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_733)), implicit_cast<TNode<Object>>((*to_738)), implicit_cast<TNode<Smi>>(t560));
                    }
                    Goto(label_if_done_label_740_1383);
                  }
                  BIND(label_if_done_label_740_1383);
                }
                // ../../src/builtins/array-unshift.tq:71:9
                TNode<Number> t561 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Number> t562 = UncheckedCast<Number>(NumberSub(implicit_cast<TNode<Number>>((*k_122).value()), implicit_cast<TNode<Number>>(t561)));
                *k_122 = implicit_cast<TNode<Number>>(t562);
              }
              Goto(label_header_736_1382);
            }
            BIND(label__False_189);
          }
          // ../../src/builtins/array-unshift.tq:75:7
          int31_t t563 = 0;
          TVARIABLE(Smi, j_123_impl);
          auto j_123 = &j_123_impl;
          USE(j_123);
          TNode<Smi> t564 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t563)));
          *j_123 = implicit_cast<TNode<Smi>>(t564);
          // ../../src/builtins/array-unshift.tq:80:7
          {
            Label label__True_192_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_192 = &label__True_192_impl;
            USE(label__True_192);
            Label label__False_193_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_193 = &label__False_193_impl;
            USE(label__False_193);
            Label label_header_742_1384_impl(this, {j_123}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_742_1384 = &label_header_742_1384_impl;
            USE(label_header_742_1384);
            Goto(label_header_742_1384);
            BIND(label_header_742_1384);
            TNode<BoolT> t565 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*j_123).value()), implicit_cast<TNode<Smi>>((*argCount_735))));
            USE(implicit_cast<TNode<BoolT>>(t565));
            Branch(implicit_cast<TNode<BoolT>>(t565), label__True_192, label__False_193);
            if (label__True_192->is_used())
            {
              BIND(label__True_192);
              // ../../src/builtins/array-unshift.tq:80:28
              {
                // ../../src/builtins/array-unshift.tq:82:9
                TNode<IntPtrT> t566 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Smi>>((*j_123).value())));
                USE(implicit_cast<TNode<IntPtrT>>(t566));
                TNode<Object> t567 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(p_arguments), implicit_cast<TNode<IntPtrT>>(t566)));
                CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_733)), implicit_cast<TNode<Object>>((*j_123).value()), implicit_cast<TNode<Object>>(t567));
                // ../../src/builtins/array-unshift.tq:85:9
                TNode<Smi> t568 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t569 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*j_123).value()), implicit_cast<TNode<Smi>>(t568)));
                *j_123 = implicit_cast<TNode<Smi>>(t569);
              }
              Goto(label_header_742_1384);
            }
            BIND(label__False_193);
          }
        }
        Goto(label__False_185);
      }
      BIND(label__False_185);
    }
    // ../../src/builtins/array-unshift.tq:90:5
    TNode<Number> t570 = UncheckedCast<Number>(NumberAdd(implicit_cast<TNode<Number>>((*length_734)), implicit_cast<TNode<Number>>((*argCount_735))));
    USE(implicit_cast<TNode<Number>>(t570));
    TNode<Number> newLength_743_impl;
    auto newLength_743 = &newLength_743_impl;
    USE(newLength_743);
    *newLength_743 = implicit_cast<TNode<Number>>(t570);
    // ../../src/builtins/array-unshift.tq:91:5
    CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*object_733)), implicit_cast<TNode<Object>>(kLengthString()), implicit_cast<TNode<Object>>((*newLength_743)));
    // ../../src/builtins/array-unshift.tq:94:5
    *_return_121 = implicit_cast<TNode<Number>>((*newLength_743));
    Goto(label_macro_end_1381);
  }
  BIND(label_macro_end_1381);
  return implicit_cast<TNode<Number>>((*_return_121).value());
}

TF_BUILTIN(ArrayPrototypeUnshift, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/array-unshift.tq:99:65
  {
    // ../../src/builtins/array-unshift.tq:100:5
    {
      Label label_try_done_744_1385_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_744_1385 = &label_try_done_744_1385_impl;
      USE(label_try_done_744_1385);
      Label label_Baseline_194_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Baseline_194 = &label_Baseline_194_impl;
      USE(label_Baseline_194);
      Label label_try_begin_745_1386_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_745_1386 = &label_try_begin_745_1386_impl;
      USE(label_try_begin_745_1386);
      Goto(label_try_begin_745_1386);
      if (label_try_begin_745_1386->is_used())
      {
        BIND(label_try_begin_745_1386);
        // ../../src/builtins/array-unshift.tq:100:9
        {
          // ../../src/builtins/array-unshift.tq:101:7
          TryFastArrayUnshift(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<CodeStubArguments*>(arguments), label_Baseline_194);
        }
      }
      if (label_Baseline_194->is_used())
      {
        BIND(label_Baseline_194);
        // ../../src/builtins/array-unshift.tq:103:20
        {
          // ../../src/builtins/array-unshift.tq:104:7
          TNode<Number> t571 = UncheckedCast<Number>(GenericArrayUnshift(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<CodeStubArguments*>(arguments)));
          USE(implicit_cast<TNode<Number>>(t571));
          arguments->PopAndReturn(implicit_cast<TNode<Object>>(t571));
        }
      }
    }
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::kGenericElementsAccessorId() {
  int31_t t2582 = 0;
  TNode<Smi> t2583 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2582)));
  return implicit_cast<TNode<Smi>>(t2583);
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::kFastElementsAccessorId() {
  int31_t t2584 = 1;
  TNode<Smi> t2585 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2584)));
  return implicit_cast<TNode<Smi>>(t2585);
}

int31_t ArrayBuiltinsFromDSLAssembler::kReceiverIdx() {
  int31_t t2586 = 0;
  return implicit_cast<int31_t>(t2586);
}

int31_t ArrayBuiltinsFromDSLAssembler::kInitialReceiverMapIdx() {
  int31_t t2587 = 1;
  return implicit_cast<int31_t>(t2587);
}

int31_t ArrayBuiltinsFromDSLAssembler::kInitialReceiverLengthIdx() {
  int31_t t2588 = 2;
  return implicit_cast<int31_t>(t2588);
}

int31_t ArrayBuiltinsFromDSLAssembler::kUserCmpFnIdx() {
  int31_t t2589 = 3;
  return implicit_cast<int31_t>(t2589);
}

int31_t ArrayBuiltinsFromDSLAssembler::kSortComparePtrIdx() {
  int31_t t2590 = 4;
  return implicit_cast<int31_t>(t2590);
}

int31_t ArrayBuiltinsFromDSLAssembler::kLoadFnIdx() {
  int31_t t2591 = 5;
  return implicit_cast<int31_t>(t2591);
}

int31_t ArrayBuiltinsFromDSLAssembler::kStoreFnIdx() {
  int31_t t2592 = 6;
  return implicit_cast<int31_t>(t2592);
}

int31_t ArrayBuiltinsFromDSLAssembler::kCanUseSameAccessorFnIdx() {
  int31_t t2593 = 7;
  return implicit_cast<int31_t>(t2593);
}

int31_t ArrayBuiltinsFromDSLAssembler::kBailoutStatusIdx() {
  int31_t t2594 = 8;
  return implicit_cast<int31_t>(t2594);
}

int31_t ArrayBuiltinsFromDSLAssembler::kMinGallopIdx() {
  int31_t t2595 = 9;
  return implicit_cast<int31_t>(t2595);
}

int31_t ArrayBuiltinsFromDSLAssembler::kPendingRunsSizeIdx() {
  int31_t t2596 = 10;
  return implicit_cast<int31_t>(t2596);
}

int31_t ArrayBuiltinsFromDSLAssembler::kPendingRunsIdx() {
  int31_t t2597 = 11;
  return implicit_cast<int31_t>(t2597);
}

int31_t ArrayBuiltinsFromDSLAssembler::kTempArraySizeIdx() {
  int31_t t2598 = 12;
  return implicit_cast<int31_t>(t2598);
}

int31_t ArrayBuiltinsFromDSLAssembler::kTempArrayIdx() {
  int31_t t2599 = 13;
  return implicit_cast<int31_t>(t2599);
}

int31_t ArrayBuiltinsFromDSLAssembler::kAccessorIdx() {
  int31_t t2600 = 14;
  return implicit_cast<int31_t>(t2600);
}

compiler::TNode<IntPtrT> ArrayBuiltinsFromDSLAssembler::kSortStateSize() {
  int31_t t2601 = 15;
  TNode<IntPtrT> t2602 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t2601)));
  return implicit_cast<TNode<IntPtrT>>(t2602);
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::kFailure() {
  int31_t t2603 = -1;
  TNode<Smi> t2604 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2603)));
  return implicit_cast<TNode<Smi>>(t2604);
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::kSuccess() {
  int31_t t2605 = 0;
  TNode<Smi> t2606 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2605)));
  return implicit_cast<TNode<Smi>>(t2606);
}

int31_t ArrayBuiltinsFromDSLAssembler::kMaxMergePending() {
  int31_t t2607 = 85;
  return implicit_cast<int31_t>(t2607);
}

int31_t ArrayBuiltinsFromDSLAssembler::kMinGallopWins() {
  int31_t t2608 = 7;
  return implicit_cast<int31_t>(t2608);
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::kSortStateTempSize() {
  int31_t t2609 = 32;
  TNode<Smi> t2610 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2609)));
  return implicit_cast<TNode<Smi>>(t2610);
}

TF_BUILTIN(Load23ATFastPackedSmiElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  // ../../third_party/v8/builtins/array-sort.tq:135:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:136:5
    TNode<FixedArray> t2611 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t2611));
    TNode<FixedArray> elems_971_impl;
    auto elems_971 = &elems_971_impl;
    USE(elems_971);
    *elems_971 = implicit_cast<TNode<FixedArray>>(t2611);
    // ../../third_party/v8/builtins/array-sort.tq:137:5
    TNode<Object> t2612 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*elems_971)), implicit_cast<TNode<Smi>>(p_index)));
    Return(implicit_cast<TNode<Object>>(t2612));
  }
}

TF_BUILTIN(Load25ATFastSmiOrObjectElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  // ../../third_party/v8/builtins/array-sort.tq:142:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:143:5
    TNode<FixedArray> t2613 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t2613));
    TNode<FixedArray> elems_972_impl;
    auto elems_972 = &elems_972_impl;
    USE(elems_972);
    *elems_972 = implicit_cast<TNode<FixedArray>>(t2613);
    // ../../third_party/v8/builtins/array-sort.tq:144:5
    TNode<Object> t2614 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*elems_972)), implicit_cast<TNode<Smi>>(p_index)));
    TNode<Object> result_973_impl;
    auto result_973 = &result_973_impl;
    USE(result_973);
    *result_973 = implicit_cast<TNode<Object>>(t2614);
    // ../../third_party/v8/builtins/array-sort.tq:145:5
    {
      Label label__True_831_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_831 = &label__True_831_impl;
      USE(label__True_831);
      Label label__False_832_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_832 = &label__False_832_impl;
      USE(label__False_832);
      TNode<BoolT> t2615 = UncheckedCast<BoolT>(IsTheHole(implicit_cast<TNode<Object>>((*result_973))));
      USE(implicit_cast<TNode<BoolT>>(t2615));
      Branch(implicit_cast<TNode<BoolT>>(t2615), label__True_831, label__False_832);
      if (label__True_831->is_used())
      {
        BIND(label__True_831);
        // ../../third_party/v8/builtins/array-sort.tq:145:28
        {
          // ../../third_party/v8/builtins/array-sort.tq:149:7
          TNode<Smi> t2616 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2616));
          Return(implicit_cast<TNode<Object>>(t2616));
        }
      }
      BIND(label__False_832);
    }
    // ../../third_party/v8/builtins/array-sort.tq:151:5
    Return(implicit_cast<TNode<Object>>((*result_973)));
  }
}

TF_BUILTIN(Load20ATFastDoubleElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  // ../../third_party/v8/builtins/array-sort.tq:156:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:157:5
    {
      Label label_try_done_974_1604_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_974_1604 = &label_try_done_974_1604_impl;
      USE(label_try_done_974_1604);
      Label label_Bailout_833_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_833 = &label_Bailout_833_impl;
      USE(label_Bailout_833);
      Label label_try_begin_975_1605_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_975_1605 = &label_try_begin_975_1605_impl;
      USE(label_try_begin_975_1605);
      Goto(label_try_begin_975_1605);
      if (label_try_begin_975_1605->is_used())
      {
        BIND(label_try_begin_975_1605);
        // ../../third_party/v8/builtins/array-sort.tq:157:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:158:7
          TNode<FixedDoubleArray> t2617 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>(p_elements)));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t2617));
          TNode<FixedDoubleArray> elems_976_impl;
          auto elems_976 = &elems_976_impl;
          USE(elems_976);
          *elems_976 = implicit_cast<TNode<FixedDoubleArray>>(t2617);
          // ../../third_party/v8/builtins/array-sort.tq:159:7
          TNode<Float64T> t2618 = UncheckedCast<Float64T>(LoadDoubleWithHoleCheck(implicit_cast<TNode<FixedDoubleArray>>((*elems_976)), implicit_cast<TNode<Smi>>(p_index), label_Bailout_833));
          USE(implicit_cast<TNode<Float64T>>(t2618));
          TNode<Float64T> value_977_impl;
          auto value_977 = &value_977_impl;
          USE(value_977);
          *value_977 = implicit_cast<TNode<Float64T>>(t2618);
          // ../../third_party/v8/builtins/array-sort.tq:161:7
          TNode<HeapNumber> t2619 = UncheckedCast<HeapNumber>(AllocateHeapNumberWithValue(implicit_cast<TNode<Float64T>>((*value_977))));
          USE(implicit_cast<TNode<HeapNumber>>(t2619));
          Return(implicit_cast<TNode<Object>>(t2619));
        }
      }
      if (label_Bailout_833->is_used())
      {
        BIND(label_Bailout_833);
        // ../../third_party/v8/builtins/array-sort.tq:163:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:167:7
          TNode<Smi> t2620 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2620));
          Return(implicit_cast<TNode<Object>>(t2620));
        }
      }
    }
  }
}

TF_BUILTIN(Load20ATDictionaryElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  // ../../third_party/v8/builtins/array-sort.tq:173:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:174:5
    {
      Label label_try_done_978_1606_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_978_1606 = &label_try_done_978_1606_impl;
      USE(label_try_done_978_1606);
      Label label_Bailout_834_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_834 = &label_Bailout_834_impl;
      USE(label_Bailout_834);
      Label label_try_begin_979_1607_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_979_1607 = &label_try_begin_979_1607_impl;
      USE(label_try_begin_979_1607);
      Goto(label_try_begin_979_1607);
      if (label_try_begin_979_1607->is_used())
      {
        BIND(label_try_begin_979_1607);
        // ../../third_party/v8/builtins/array-sort.tq:174:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:175:7
          TNode<NumberDictionary> t2621 = UncheckedCast<NumberDictionary>(UnsafeCast18ATNumberDictionary(implicit_cast<TNode<Object>>(p_elements)));
          USE(implicit_cast<TNode<NumberDictionary>>(t2621));
          TNode<NumberDictionary> dictionary_980_impl;
          auto dictionary_980 = &dictionary_980_impl;
          USE(dictionary_980);
          *dictionary_980 = implicit_cast<TNode<NumberDictionary>>(t2621);
          // ../../third_party/v8/builtins/array-sort.tq:177:7
          TNode<IntPtrT> t2622 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Smi>>(p_index)));
          USE(implicit_cast<TNode<IntPtrT>>(t2622));
          TNode<IntPtrT> intptrIndex_981_impl;
          auto intptrIndex_981 = &intptrIndex_981_impl;
          USE(intptrIndex_981);
          *intptrIndex_981 = implicit_cast<TNode<IntPtrT>>(t2622);
          // ../../third_party/v8/builtins/array-sort.tq:178:7
          TNode<Object> t2623 = UncheckedCast<Object>(BasicLoadNumberDictionaryElement(implicit_cast<TNode<NumberDictionary>>((*dictionary_980)), implicit_cast<TNode<IntPtrT>>((*intptrIndex_981)), label_Bailout_834, label_Bailout_834));
          USE(implicit_cast<TNode<Object>>(t2623));
          TNode<Object> value_982_impl;
          auto value_982 = &value_982_impl;
          USE(value_982);
          *value_982 = implicit_cast<TNode<Object>>(t2623);
          // ../../third_party/v8/builtins/array-sort.tq:181:7
          Return(implicit_cast<TNode<Object>>((*value_982)));
        }
      }
      if (label_Bailout_834->is_used())
      {
        BIND(label_Bailout_834);
        // ../../third_party/v8/builtins/array-sort.tq:183:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:184:7
          TNode<Smi> t2624 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2624));
          Return(implicit_cast<TNode<Object>>(t2624));
        }
      }
    }
  }
}

TF_BUILTIN(Load19ATTempArrayElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  // ../../third_party/v8/builtins/array-sort.tq:190:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:191:5
    // ../../third_party/v8/builtins/array-sort.tq:192:5
    TNode<FixedArray> t2625 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t2625));
    TNode<FixedArray> elems_983_impl;
    auto elems_983 = &elems_983_impl;
    USE(elems_983);
    *elems_983 = implicit_cast<TNode<FixedArray>>(t2625);
    // ../../third_party/v8/builtins/array-sort.tq:193:5
    TNode<Object> t2626 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*elems_983)), implicit_cast<TNode<Smi>>(p_index)));
    Return(implicit_cast<TNode<Object>>(t2626));
  }
}

TF_BUILTIN(Store23ATFastPackedSmiElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  TNode<Object> p_value = UncheckedCast<Object>(Parameter(Descriptor::kValue));
  USE(p_value);
  // ../../third_party/v8/builtins/array-sort.tq:205:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:206:5
    TNode<FixedArray> t2627 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t2627));
    TNode<FixedArray> elems_984_impl;
    auto elems_984 = &elems_984_impl;
    USE(elems_984);
    *elems_984 = implicit_cast<TNode<FixedArray>>(t2627);
    // ../../third_party/v8/builtins/array-sort.tq:207:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>((*elems_984)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Object>>(p_value), implicit_cast<WriteBarrierMode>(SKIP_WRITE_BARRIER));
    // ../../third_party/v8/builtins/array-sort.tq:208:5
    Return(implicit_cast<TNode<Smi>>(kSuccess()));
  }
}

TF_BUILTIN(Store25ATFastSmiOrObjectElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  TNode<Object> p_value = UncheckedCast<Object>(Parameter(Descriptor::kValue));
  USE(p_value);
  // ../../third_party/v8/builtins/array-sort.tq:213:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:214:5
    TNode<FixedArray> t2628 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t2628));
    TNode<FixedArray> elems_985_impl;
    auto elems_985 = &elems_985_impl;
    USE(elems_985);
    *elems_985 = implicit_cast<TNode<FixedArray>>(t2628);
    // ../../third_party/v8/builtins/array-sort.tq:215:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>((*elems_985)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Object>>(p_value));
    // ../../third_party/v8/builtins/array-sort.tq:216:5
    Return(implicit_cast<TNode<Smi>>(kSuccess()));
  }
}

TF_BUILTIN(Store20ATFastDoubleElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  TNode<Object> p_value = UncheckedCast<Object>(Parameter(Descriptor::kValue));
  USE(p_value);
  // ../../third_party/v8/builtins/array-sort.tq:221:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:222:5
    TNode<FixedDoubleArray> t2629 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedDoubleArray>>(t2629));
    TNode<FixedDoubleArray> elems_986_impl;
    auto elems_986 = &elems_986_impl;
    USE(elems_986);
    *elems_986 = implicit_cast<TNode<FixedDoubleArray>>(t2629);
    // ../../third_party/v8/builtins/array-sort.tq:223:5
    TNode<HeapNumber> t2630 = UncheckedCast<HeapNumber>(UnsafeCast12ATHeapNumber(implicit_cast<TNode<Object>>(p_value)));
    USE(implicit_cast<TNode<HeapNumber>>(t2630));
    TNode<HeapNumber> heapVal_987_impl;
    auto heapVal_987 = &heapVal_987_impl;
    USE(heapVal_987);
    *heapVal_987 = implicit_cast<TNode<HeapNumber>>(t2630);
    // ../../third_party/v8/builtins/array-sort.tq:225:5
    TNode<Float64T> t2631 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<TNode<HeapNumber>>((*heapVal_987))));
    USE(implicit_cast<TNode<Float64T>>(t2631));
    TNode<Float64T> t2632 = UncheckedCast<Float64T>(Float64SilenceNaN(implicit_cast<TNode<Float64T>>(t2631)));
    USE(implicit_cast<TNode<Float64T>>(t2632));
    TNode<Float64T> val_988_impl;
    auto val_988 = &val_988_impl;
    USE(val_988);
    *val_988 = implicit_cast<TNode<Float64T>>(t2632);
    // ../../third_party/v8/builtins/array-sort.tq:226:5
    StoreFixedDoubleArrayElementWithSmiIndex(implicit_cast<TNode<FixedDoubleArray>>((*elems_986)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Float64T>>((*val_988)));
    // ../../third_party/v8/builtins/array-sort.tq:227:5
    Return(implicit_cast<TNode<Smi>>(kSuccess()));
  }
}

TF_BUILTIN(Store20ATDictionaryElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  TNode<Object> p_value = UncheckedCast<Object>(Parameter(Descriptor::kValue));
  USE(p_value);
  // ../../third_party/v8/builtins/array-sort.tq:232:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:233:5
    TNode<NumberDictionary> t2633 = UncheckedCast<NumberDictionary>(UnsafeCast18ATNumberDictionary(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<NumberDictionary>>(t2633));
    TNode<NumberDictionary> dictionary_989_impl;
    auto dictionary_989 = &dictionary_989_impl;
    USE(dictionary_989);
    *dictionary_989 = implicit_cast<TNode<NumberDictionary>>(t2633);
    // ../../third_party/v8/builtins/array-sort.tq:234:5
    TNode<IntPtrT> t2634 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Smi>>(p_index)));
    USE(implicit_cast<TNode<IntPtrT>>(t2634));
    TNode<IntPtrT> intptrIndex_990_impl;
    auto intptrIndex_990 = &intptrIndex_990_impl;
    USE(intptrIndex_990);
    *intptrIndex_990 = implicit_cast<TNode<IntPtrT>>(t2634);
    // ../../third_party/v8/builtins/array-sort.tq:235:5
    {
      Label label_try_done_991_1608_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_991_1608 = &label_try_done_991_1608_impl;
      USE(label_try_done_991_1608);
      Label label_ReadOnly_835_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_ReadOnly_835 = &label_ReadOnly_835_impl;
      USE(label_ReadOnly_835);
      Label label_Fail_836_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Fail_836 = &label_Fail_836_impl;
      USE(label_Fail_836);
      Label label_try_begin_992_1609_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_992_1609 = &label_try_begin_992_1609_impl;
      USE(label_try_begin_992_1609);
      Goto(label_try_begin_992_1609);
      if (label_try_begin_992_1609->is_used())
      {
        BIND(label_try_begin_992_1609);
        // ../../third_party/v8/builtins/array-sort.tq:235:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:236:7
          BasicStoreNumberDictionaryElement(implicit_cast<TNode<NumberDictionary>>((*dictionary_989)), implicit_cast<TNode<IntPtrT>>((*intptrIndex_990)), implicit_cast<TNode<Object>>(p_value), label_Fail_836, label_Fail_836, label_ReadOnly_835);
          // ../../third_party/v8/builtins/array-sort.tq:238:7
          Return(implicit_cast<TNode<Smi>>(kSuccess()));
        }
      }
      if (label_ReadOnly_835->is_used())
      {
        BIND(label_ReadOnly_835);
        // ../../third_party/v8/builtins/array-sort.tq:240:20
        {
          // ../../third_party/v8/builtins/array-sort.tq:243:7
          TNode<JSReceiver> t2635 = UncheckedCast<JSReceiver>(GetReceiver(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<JSReceiver>>(t2635));
          TNode<JSReceiver> receiver_993_impl;
          auto receiver_993 = &receiver_993_impl;
          USE(receiver_993);
          *receiver_993 = implicit_cast<TNode<JSReceiver>>(t2635);
          // ../../third_party/v8/builtins/array-sort.tq:244:7
          TNode<Object> t2636 = UncheckedCast<Object>(Typeof(implicit_cast<TNode<Object>>((*receiver_993))));
          USE(implicit_cast<TNode<Object>>(t2636));
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kStrictReadOnlyProperty), implicit_cast<TNode<Object>>(p_index), implicit_cast<TNode<Object>>(t2636), implicit_cast<TNode<Object>>((*receiver_993)));
        }
      }
      if (label_Fail_836->is_used())
      {
        BIND(label_Fail_836);
        // ../../third_party/v8/builtins/array-sort.tq:247:16
        {
          // ../../third_party/v8/builtins/array-sort.tq:248:7
          TNode<Smi> t2637 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2637));
          Return(implicit_cast<TNode<Smi>>(t2637));
        }
      }
    }
  }
}

TF_BUILTIN(Store19ATTempArrayElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  TNode<Object> p_value = UncheckedCast<Object>(Parameter(Descriptor::kValue));
  USE(p_value);
  // ../../third_party/v8/builtins/array-sort.tq:254:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:255:5
    TNode<FixedArray> t2638 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(p_elements)));
    USE(implicit_cast<TNode<FixedArray>>(t2638));
    TNode<FixedArray> elems_994_impl;
    auto elems_994 = &elems_994_impl;
    USE(elems_994);
    *elems_994 = implicit_cast<TNode<FixedArray>>(t2638);
    // ../../third_party/v8/builtins/array-sort.tq:256:5
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>((*elems_994)), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Object>>(p_value));
    // ../../third_party/v8/builtins/array-sort.tq:257:5
    Return(implicit_cast<TNode<Smi>>(kSuccess()));
  }
}

TF_BUILTIN(SortCompareDefault, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<Object> p_comparefn = UncheckedCast<Object>(Parameter(Descriptor::kComparefn));
  USE(p_comparefn);
  TNode<Object> p_x = UncheckedCast<Object>(Parameter(Descriptor::kX));
  USE(p_x);
  TNode<Object> p_y = UncheckedCast<Object>(Parameter(Descriptor::kY));
  USE(p_y);
  // ../../third_party/v8/builtins/array-sort.tq:282:74
  {
    // ../../third_party/v8/builtins/array-sort.tq:283:5
    // ../../third_party/v8/builtins/array-sort.tq:285:5
    {
      Label label__True_837_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_837 = &label__True_837_impl;
      USE(label__True_837);
      Label label__False_838_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_838 = &label__False_838_impl;
      USE(label__False_838);
      Label label__True_839_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_839 = &label__True_839_impl;
      USE(label__True_839);
      TNode<BoolT> t2643 = UncheckedCast<BoolT>(TaggedIsSmi(implicit_cast<TNode<Object>>(p_x)));
      USE(implicit_cast<TNode<BoolT>>(t2643));
      GotoIfNot(implicit_cast<TNode<BoolT>>(t2643), label__False_838);
      TNode<BoolT> t2644 = UncheckedCast<BoolT>(TaggedIsSmi(implicit_cast<TNode<Object>>(p_y)));
      USE(implicit_cast<TNode<BoolT>>(t2644));
Branch(implicit_cast<TNode<BoolT>>(t2644), label__True_837, label__False_838);
      if (label__True_837->is_used())
      {
        BIND(label__True_837);
        // ../../third_party/v8/builtins/array-sort.tq:285:43
        {
          // ../../third_party/v8/builtins/array-sort.tq:286:7
          TNode<Smi> t2645 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(p_x)));
          USE(implicit_cast<TNode<Smi>>(t2645));
          TNode<Smi> t2646 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(p_y)));
          USE(implicit_cast<TNode<Smi>>(t2646));
          TNode<Smi> t2647 = UncheckedCast<Smi>(SmiLexicographicCompare(implicit_cast<TNode<Smi>>(t2645), implicit_cast<TNode<Smi>>(t2646)));
          USE(implicit_cast<TNode<Smi>>(t2647));
          Return(implicit_cast<TNode<Number>>(t2647));
        }
      }
      BIND(label__False_838);
    }
    // ../../third_party/v8/builtins/array-sort.tq:290:5
    TNode<String> t2648 = UncheckedCast<String>(ToString_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_x)));
    USE(implicit_cast<TNode<String>>(t2648));
    TNode<String> xString_995_impl;
    auto xString_995 = &xString_995_impl;
    USE(xString_995);
    *xString_995 = implicit_cast<TNode<String>>(t2648);
    // ../../third_party/v8/builtins/array-sort.tq:293:5
    TNode<String> t2649 = UncheckedCast<String>(ToString_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_y)));
    USE(implicit_cast<TNode<String>>(t2649));
    TNode<String> yString_996_impl;
    auto yString_996 = &yString_996_impl;
    USE(yString_996);
    *yString_996 = implicit_cast<TNode<String>>(t2649);
    // ../../third_party/v8/builtins/array-sort.tq:298:5
    {
      Label label__True_840_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_840 = &label__True_840_impl;
      USE(label__True_840);
      Label label__False_841_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_841 = &label__False_841_impl;
      USE(label__False_841);
      TNode<Oddball> t2650 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kStringLessThan, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<String>>((*xString_995)), implicit_cast<TNode<String>>((*yString_996))));
      USE(implicit_cast<TNode<Oddball>>(t2650));
      TNode<BoolT> t2651 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(t2650), implicit_cast<TNode<Object>>(True())));
      USE(implicit_cast<TNode<BoolT>>(t2651));
      Branch(implicit_cast<TNode<BoolT>>(t2651), label__True_840, label__False_841);
      if (label__True_840->is_used())
      {
        BIND(label__True_840);
        // ../../third_party/v8/builtins/array-sort.tq:298:60
        int31_t t2652 = -1;
        TNode<Number> t2653 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2652)));
        Return(implicit_cast<TNode<Number>>(t2653));
      }
      BIND(label__False_841);
    }
    // ../../third_party/v8/builtins/array-sort.tq:303:5
    {
      Label label__True_842_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_842 = &label__True_842_impl;
      USE(label__True_842);
      Label label__False_843_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_843 = &label__False_843_impl;
      USE(label__False_843);
      TNode<Oddball> t2654 = UncheckedCast<Oddball>(CallBuiltin(Builtins::kStringLessThan, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<String>>((*yString_996)), implicit_cast<TNode<String>>((*xString_995))));
      USE(implicit_cast<TNode<Oddball>>(t2654));
      TNode<BoolT> t2655 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(t2654), implicit_cast<TNode<Object>>(True())));
      USE(implicit_cast<TNode<BoolT>>(t2655));
      Branch(implicit_cast<TNode<BoolT>>(t2655), label__True_842, label__False_843);
      if (label__True_842->is_used())
      {
        BIND(label__True_842);
        // ../../third_party/v8/builtins/array-sort.tq:303:60
        int31_t t2656 = 1;
        TNode<Number> t2657 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2656)));
        Return(implicit_cast<TNode<Number>>(t2657));
      }
      BIND(label__False_843);
    }
    // ../../third_party/v8/builtins/array-sort.tq:306:5
    int31_t t2658 = 0;
    TNode<Number> t2659 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2658)));
    Return(implicit_cast<TNode<Number>>(t2659));
  }
}

TF_BUILTIN(SortCompareUserFn, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<Object> p_comparefn = UncheckedCast<Object>(Parameter(Descriptor::kComparefn));
  USE(p_comparefn);
  TNode<Object> p_x = UncheckedCast<Object>(Parameter(Descriptor::kX));
  USE(p_x);
  TNode<Object> p_y = UncheckedCast<Object>(Parameter(Descriptor::kY));
  USE(p_y);
  // ../../third_party/v8/builtins/array-sort.tq:310:74
  {
    // ../../third_party/v8/builtins/array-sort.tq:311:5
    // ../../third_party/v8/builtins/array-sort.tq:312:5
    TNode<JSReceiver> t2660 = UncheckedCast<JSReceiver>(UnsafeCast45UT17ATJSBoundFunction12ATJSFunction9ATJSProxy(implicit_cast<TNode<Object>>(p_comparefn)));
    USE(implicit_cast<TNode<JSReceiver>>(t2660));
    TNode<JSReceiver> cmpfn_997_impl;
    auto cmpfn_997 = &cmpfn_997_impl;
    USE(cmpfn_997);
    *cmpfn_997 = implicit_cast<TNode<JSReceiver>>(t2660);
    // ../../third_party/v8/builtins/array-sort.tq:315:5
    TNode<Object> t2661 = UncheckedCast<Object>(Call(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*cmpfn_997)), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<TNode<Object>>(p_x), implicit_cast<TNode<Object>>(p_y)));
    USE(implicit_cast<TNode<Object>>(t2661));
    TNode<Number> t2662 = UncheckedCast<Number>(ToNumber_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t2661)));
    USE(implicit_cast<TNode<Number>>(t2662));
    TNode<Number> v_998_impl;
    auto v_998 = &v_998_impl;
    USE(v_998);
    *v_998 = implicit_cast<TNode<Number>>(t2662);
    // ../../third_party/v8/builtins/array-sort.tq:319:5
    {
      Label label__True_844_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_844 = &label__True_844_impl;
      USE(label__True_844);
      Label label__False_845_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_845 = &label__False_845_impl;
      USE(label__False_845);
      TNode<BoolT> t2663 = UncheckedCast<BoolT>(NumberIsNaN(implicit_cast<TNode<Number>>((*v_998))));
      USE(implicit_cast<TNode<BoolT>>(t2663));
      Branch(implicit_cast<TNode<BoolT>>(t2663), label__True_844, label__False_845);
      if (label__True_844->is_used())
      {
        BIND(label__True_844);
        // ../../third_party/v8/builtins/array-sort.tq:319:25
        int31_t t2664 = 0;
        TNode<Number> t2665 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2664)));
        Return(implicit_cast<TNode<Number>>(t2665));
      }
      BIND(label__False_845);
    }
    // ../../third_party/v8/builtins/array-sort.tq:322:5
    Return(implicit_cast<TNode<Number>>((*v_998)));
  }
}

TF_BUILTIN(CanUseSameAccessor25ATGenericElementsAccessor, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<JSReceiver> p_receiver = UncheckedCast<JSReceiver>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_initialReceiverMap = UncheckedCast<Object>(Parameter(Descriptor::kInitialReceiverMap));
  USE(p_initialReceiverMap);
  TNode<Number> p_initialReceiverLength = UncheckedCast<Number>(Parameter(Descriptor::kInitialReceiverLength));
  USE(p_initialReceiverLength);
  // ../../third_party/v8/builtins/array-sort.tq:342:47
  {
    // ../../third_party/v8/builtins/array-sort.tq:344:5
    Return(implicit_cast<TNode<Oddball>>(True()));
  }
}

TF_BUILTIN(CanUseSameAccessor20ATDictionaryElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<JSReceiver> p_receiver = UncheckedCast<JSReceiver>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_initialReceiverMap = UncheckedCast<Object>(Parameter(Descriptor::kInitialReceiverMap));
  USE(p_initialReceiverMap);
  TNode<Number> p_initialReceiverLength = UncheckedCast<Number>(Parameter(Descriptor::kInitialReceiverLength));
  USE(p_initialReceiverLength);
  // ../../third_party/v8/builtins/array-sort.tq:349:47
  {
    // ../../third_party/v8/builtins/array-sort.tq:350:5
    TNode<JSReceiver> t2666 = UncheckedCast<JSReceiver>(UnsafeCast12ATJSReceiver(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t2666));
    TVARIABLE(JSReceiver, obj_405_impl);
    auto obj_405 = &obj_405_impl;
    USE(obj_405);
    *obj_405 = implicit_cast<TNode<JSReceiver>>(t2666);
    // ../../third_party/v8/builtins/array-sort.tq:351:5
    TNode<Map> t2667 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*obj_405).value())));
    TNode<BoolT> t2668 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(t2667), implicit_cast<TNode<Object>>(p_initialReceiverMap)));
    USE(implicit_cast<TNode<BoolT>>(t2668));
    TNode<Oddball> t2669 = UncheckedCast<Oddball>(SelectBooleanConstant(implicit_cast<TNode<BoolT>>(t2668)));
    USE(implicit_cast<TNode<Oddball>>(t2669));
    Return(implicit_cast<TNode<Oddball>>(t2669));
  }
}

compiler::TNode<Number> ArrayBuiltinsFromDSLAssembler::CallCompareFn(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Object> p_x, TNode<Object> p_y, Label* label_Bailout_846) {
  TVARIABLE(Number, _return_406_impl);
  auto _return_406 = &_return_406_impl;
  USE(_return_406);
  Label label_macro_end_1614_impl(this, {_return_406}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1614 = &label_macro_end_1614_impl;
  USE(label_macro_end_1614);
  // ../../third_party/v8/builtins/array-sort.tq:356:22
  {
    // ../../third_party/v8/builtins/array-sort.tq:357:5
    TNode<Object> t2670 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kUserCmpFnIdx())));
    TNode<Object> userCmpFn_999_impl;
    auto userCmpFn_999 = &userCmpFn_999_impl;
    USE(userCmpFn_999);
    *userCmpFn_999 = implicit_cast<TNode<Object>>(t2670);
    // ../../third_party/v8/builtins/array-sort.tq:358:5
    TNode<Object> t2671 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kSortComparePtrIdx())));
    TNode<Code> t2672 = UncheckedCast<Code>(UnsafeCast108FT9ATContext22UT12ATHeapObject5ATSmi22UT12ATHeapObject5ATSmi22UT12ATHeapObject5ATSmi22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Object>>(t2671)));
    USE(implicit_cast<TNode<Code>>(t2672));
    TNode<Code> sortCompare_1000_impl;
    auto sortCompare_1000 = &sortCompare_1000_impl;
    USE(sortCompare_1000);
    *sortCompare_1000 = implicit_cast<TNode<Code>>(t2672);
    // ../../third_party/v8/builtins/array-sort.tq:361:5
    TNode<Number> t2673 = UncheckedCast<Number>(CallStub(Builtins::CallableFor(isolate(), Builtins::kSortCompareDefault).descriptor(), implicit_cast<TNode<Code>>((*sortCompare_1000)), implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*userCmpFn_999)), implicit_cast<TNode<Object>>(p_x), implicit_cast<TNode<Object>>(p_y)));
    USE(implicit_cast<TNode<Number>>(t2673));
    TNode<Number> result_1001_impl;
    auto result_1001 = &result_1001_impl;
    USE(result_1001);
    *result_1001 = implicit_cast<TNode<Number>>(t2673);
    // ../../third_party/v8/builtins/array-sort.tq:363:5
    TNode<JSReceiver> t2674 = UncheckedCast<JSReceiver>(GetReceiver(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<JSReceiver>>(t2674));
    TNode<JSReceiver> receiver_1002_impl;
    auto receiver_1002 = &receiver_1002_impl;
    USE(receiver_1002);
    *receiver_1002 = implicit_cast<TNode<JSReceiver>>(t2674);
    // ../../third_party/v8/builtins/array-sort.tq:364:5
    TNode<Object> t2675 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kInitialReceiverMapIdx())));
    TNode<Object> initialReceiverMap_1003_impl;
    auto initialReceiverMap_1003 = &initialReceiverMap_1003_impl;
    USE(initialReceiverMap_1003);
    *initialReceiverMap_1003 = implicit_cast<TNode<Object>>(t2675);
    // ../../third_party/v8/builtins/array-sort.tq:365:5
    TNode<Object> t2676 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kInitialReceiverLengthIdx())));
    TNode<Number> t2677 = UncheckedCast<Number>(UnsafeCast22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Object>>(t2676)));
    USE(implicit_cast<TNode<Number>>(t2677));
    TNode<Number> initialReceiverLength_1004_impl;
    auto initialReceiverLength_1004 = &initialReceiverLength_1004_impl;
    USE(initialReceiverLength_1004);
    *initialReceiverLength_1004 = implicit_cast<TNode<Number>>(t2677);
    // ../../third_party/v8/builtins/array-sort.tq:367:5
    TNode<Code> t2678 = UncheckedCast<Code>(GetCanUseSameAccessorFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t2678));
    TNode<Code> canUseSameAccessorFn_1005_impl;
    auto canUseSameAccessorFn_1005 = &canUseSameAccessorFn_1005_impl;
    USE(canUseSameAccessorFn_1005);
    *canUseSameAccessorFn_1005 = implicit_cast<TNode<Code>>(t2678);
    // ../../third_party/v8/builtins/array-sort.tq:370:5
    {
      Label label__True_847_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_847 = &label__True_847_impl;
      USE(label__True_847);
      Label label__False_848_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_848 = &label__False_848_impl;
      USE(label__False_848);
      TNode<Oddball> t2679 = UncheckedCast<Oddball>(CallStub(Builtins::CallableFor(isolate(), Builtins::kCanUseSameAccessor25ATGenericElementsAccessor).descriptor(), implicit_cast<TNode<Code>>((*canUseSameAccessorFn_1005)), implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>((*receiver_1002)), implicit_cast<TNode<Object>>((*initialReceiverMap_1003)), implicit_cast<TNode<Number>>((*initialReceiverLength_1004))));
      USE(implicit_cast<TNode<Oddball>>(t2679));
      TNode<BoolT> t2680 = UncheckedCast<BoolT>(IsFalse(implicit_cast<TNode<Oddball>>(t2679)));
      USE(implicit_cast<TNode<BoolT>>(t2680));
      Branch(implicit_cast<TNode<BoolT>>(t2680), label__True_847, label__False_848);
      if (label__True_847->is_used())
      {
        BIND(label__True_847);
        // ../../third_party/v8/builtins/array-sort.tq:371:76
        {
          // ../../third_party/v8/builtins/array-sort.tq:372:7
          Goto(label_Bailout_846);
        }
      }
      BIND(label__False_848);
    }
    // ../../third_party/v8/builtins/array-sort.tq:374:5
    *_return_406 = implicit_cast<TNode<Number>>((*result_1001));
    Goto(label_macro_end_1614);
  }
  BIND(label_macro_end_1614);
  return implicit_cast<TNode<Number>>((*_return_406).value());
}

compiler::TNode<HeapObject> ArrayBuiltinsFromDSLAssembler::ReloadElements(TNode<FixedArray> p_sortState) {
  TVARIABLE(HeapObject, _return_407_impl);
  auto _return_407 = &_return_407_impl;
  USE(_return_407);
  Label label_macro_end_1615_impl(this, {_return_407}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1615 = &label_macro_end_1615_impl;
  USE(label_macro_end_1615);
  // ../../third_party/v8/builtins/array-sort.tq:381:59
  {
    // ../../third_party/v8/builtins/array-sort.tq:382:5
    TNode<JSReceiver> t2681 = UncheckedCast<JSReceiver>(GetReceiver(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<JSReceiver>>(t2681));
    TNode<JSReceiver> receiver_1006_impl;
    auto receiver_1006 = &receiver_1006_impl;
    USE(receiver_1006);
    *receiver_1006 = implicit_cast<TNode<JSReceiver>>(t2681);
    // ../../third_party/v8/builtins/array-sort.tq:383:5
    {
      Label label__True_849_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_849 = &label__True_849_impl;
      USE(label__True_849);
      Label label__False_850_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_850 = &label__False_850_impl;
      USE(label__False_850);
      TNode<Object> t2682 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx())));
      TNode<BoolT> t2683 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(t2682), implicit_cast<TNode<Object>>(kGenericElementsAccessorId())));
      USE(implicit_cast<TNode<BoolT>>(t2683));
      Branch(implicit_cast<TNode<BoolT>>(t2683), label__True_849, label__False_850);
      if (label__True_849->is_used())
      {
        BIND(label__True_849);
        // ../../third_party/v8/builtins/array-sort.tq:383:64
        *_return_407 = implicit_cast<TNode<HeapObject>>((*receiver_1006));
        Goto(label_macro_end_1615);
      }
      BIND(label__False_850);
    }
    // ../../third_party/v8/builtins/array-sort.tq:385:5
    TNode<JSObject> t2684 = UncheckedCast<JSObject>(UnsafeCast10ATJSObject(implicit_cast<TNode<Object>>((*receiver_1006))));
    USE(implicit_cast<TNode<JSObject>>(t2684));
    TNode<JSObject> object_1007_impl;
    auto object_1007 = &object_1007_impl;
    USE(object_1007);
    *object_1007 = implicit_cast<TNode<JSObject>>(t2684);
    // ../../third_party/v8/builtins/array-sort.tq:386:5
    TNode<FixedArrayBase> t2685 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>((*object_1007))));
    *_return_407 = implicit_cast<TNode<HeapObject>>(t2685);
    Goto(label_macro_end_1615);
  }
  BIND(label_macro_end_1615);
  return implicit_cast<TNode<HeapObject>>((*_return_407).value());
}

compiler::TNode<Code> ArrayBuiltinsFromDSLAssembler::GetLoadFn(TNode<FixedArray> p_sortState) {
  TVARIABLE(Code, _return_408_impl);
  auto _return_408 = &_return_408_impl;
  USE(_return_408);
  Label label_macro_end_1616_impl(this, {_return_408}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1616 = &label_macro_end_1616_impl;
  USE(label_macro_end_1616);
  // ../../third_party/v8/builtins/array-sort.tq:389:50
  {
    // ../../third_party/v8/builtins/array-sort.tq:390:5
    TNode<Object> t2686 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kLoadFnIdx())));
    TNode<Code> t2687 = UncheckedCast<Code>(UnsafeCast70FT9ATContext12ATFixedArray12ATHeapObject5ATSmi22UT12ATHeapObject5ATSmi(implicit_cast<TNode<Object>>(t2686)));
    USE(implicit_cast<TNode<Code>>(t2687));
    *_return_408 = implicit_cast<TNode<Code>>(t2687);
    Goto(label_macro_end_1616);
  }
  BIND(label_macro_end_1616);
  return implicit_cast<TNode<Code>>((*_return_408).value());
}

compiler::TNode<Code> ArrayBuiltinsFromDSLAssembler::GetStoreFn(TNode<FixedArray> p_sortState) {
  TVARIABLE(Code, _return_409_impl);
  auto _return_409 = &_return_409_impl;
  USE(_return_409);
  Label label_macro_end_1617_impl(this, {_return_409}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1617 = &label_macro_end_1617_impl;
  USE(label_macro_end_1617);
  // ../../third_party/v8/builtins/array-sort.tq:393:52
  {
    // ../../third_party/v8/builtins/array-sort.tq:394:5
    TNode<Object> t2688 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kStoreFnIdx())));
    TNode<Code> t2689 = UncheckedCast<Code>(UnsafeCast76FT9ATContext12ATFixedArray12ATHeapObject5ATSmi22UT12ATHeapObject5ATSmi5ATSmi(implicit_cast<TNode<Object>>(t2688)));
    USE(implicit_cast<TNode<Code>>(t2689));
    *_return_409 = implicit_cast<TNode<Code>>(t2689);
    Goto(label_macro_end_1617);
  }
  BIND(label_macro_end_1617);
  return implicit_cast<TNode<Code>>((*_return_409).value());
}

compiler::TNode<Code> ArrayBuiltinsFromDSLAssembler::GetCanUseSameAccessorFn(TNode<FixedArray> p_sortState) {
  TVARIABLE(Code, _return_410_impl);
  auto _return_410 = &_return_410_impl;
  USE(_return_410);
  Label label_macro_end_1618_impl(this, {_return_410}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1618 = &label_macro_end_1618_impl;
  USE(label_macro_end_1618);
  // ../../third_party/v8/builtins/array-sort.tq:397:78
  {
    // ../../third_party/v8/builtins/array-sort.tq:398:5
    TNode<Object> t2690 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kCanUseSameAccessorFnIdx())));
    TNode<Code> t2691 = UncheckedCast<Code>(UnsafeCast84FT9ATContext12ATJSReceiver22UT12ATHeapObject5ATSmi22UT12ATHeapNumber5ATSmi9ATBoolean(implicit_cast<TNode<Object>>(t2690)));
    USE(implicit_cast<TNode<Code>>(t2691));
    *_return_410 = implicit_cast<TNode<Code>>(t2691);
    Goto(label_macro_end_1618);
  }
  BIND(label_macro_end_1618);
  return implicit_cast<TNode<Code>>((*_return_410).value());
}

compiler::TNode<JSReceiver> ArrayBuiltinsFromDSLAssembler::GetReceiver(TNode<FixedArray> p_sortState) {
  TVARIABLE(JSReceiver, _return_411_impl);
  auto _return_411 = &_return_411_impl;
  USE(_return_411);
  Label label_macro_end_1619_impl(this, {_return_411}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1619 = &label_macro_end_1619_impl;
  USE(label_macro_end_1619);
  // ../../third_party/v8/builtins/array-sort.tq:402:56
  {
    // ../../third_party/v8/builtins/array-sort.tq:403:5
    TNode<Object> t2692 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kReceiverIdx())));
    TNode<JSReceiver> t2693 = UncheckedCast<JSReceiver>(UnsafeCast12ATJSReceiver(implicit_cast<TNode<Object>>(t2692)));
    USE(implicit_cast<TNode<JSReceiver>>(t2693));
    *_return_411 = implicit_cast<TNode<JSReceiver>>(t2693);
    Goto(label_macro_end_1619);
  }
  BIND(label_macro_end_1619);
  return implicit_cast<TNode<JSReceiver>>((*_return_411).value());
}

compiler::TNode<FixedArray> ArrayBuiltinsFromDSLAssembler::GetTempArray(TNode<FixedArray> p_sortState) {
  TVARIABLE(FixedArray, _return_412_impl);
  auto _return_412 = &_return_412_impl;
  USE(_return_412);
  Label label_macro_end_1620_impl(this, {_return_412}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1620 = &label_macro_end_1620_impl;
  USE(label_macro_end_1620);
  // ../../third_party/v8/builtins/array-sort.tq:407:57
  {
    // ../../third_party/v8/builtins/array-sort.tq:408:5
    TNode<Object> t2694 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kTempArrayIdx())));
    TNode<FixedArray> t2695 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(t2694)));
    USE(implicit_cast<TNode<FixedArray>>(t2695));
    *_return_412 = implicit_cast<TNode<FixedArray>>(t2695);
    Goto(label_macro_end_1620);
  }
  BIND(label_macro_end_1620);
  return implicit_cast<TNode<FixedArray>>((*_return_412).value());
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::GetPendingRunsSize(TNode<FixedArray> p_sortState) {
  TVARIABLE(Smi, _return_413_impl);
  auto _return_413 = &_return_413_impl;
  USE(_return_413);
  Label label_macro_end_1621_impl(this, {_return_413}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1621 = &label_macro_end_1621_impl;
  USE(label_macro_end_1621);
  // ../../third_party/v8/builtins/array-sort.tq:413:56
  {
    // ../../third_party/v8/builtins/array-sort.tq:414:5
    // ../../third_party/v8/builtins/array-sort.tq:415:5
    TNode<Object> t2696 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsSizeIdx())));
    TNode<Smi> t2697 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t2696)));
    USE(implicit_cast<TNode<Smi>>(t2697));
    TNode<Smi> stackSize_1008_impl;
    auto stackSize_1008 = &stackSize_1008_impl;
    USE(stackSize_1008);
    *stackSize_1008 = implicit_cast<TNode<Smi>>(t2697);
    // ../../third_party/v8/builtins/array-sort.tq:417:5
    // ../../third_party/v8/builtins/array-sort.tq:418:5
    *_return_413 = implicit_cast<TNode<Smi>>((*stackSize_1008));
    Goto(label_macro_end_1621);
  }
  BIND(label_macro_end_1621);
  return implicit_cast<TNode<Smi>>((*_return_413).value());
}

void ArrayBuiltinsFromDSLAssembler::SetPendingRunsSize(TNode<FixedArray> p_sortState, TNode<Smi> p_value) {
  Label label_macro_end_1622_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1622 = &label_macro_end_1622_impl;
  USE(label_macro_end_1622);
  // ../../third_party/v8/builtins/array-sort.tq:421:63
  {
    // ../../third_party/v8/builtins/array-sort.tq:422:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsSizeIdx()), implicit_cast<TNode<Object>>(p_value));
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::GetPendingRunBase(TNode<FixedArray> p_pendingRuns, TNode<Smi> p_run) {
  TVARIABLE(Smi, _return_414_impl);
  auto _return_414 = &_return_414_impl;
  USE(_return_414);
  Label label_macro_end_1623_impl(this, {_return_414}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1623 = &label_macro_end_1623_impl;
  USE(label_macro_end_1623);
  // ../../third_party/v8/builtins/array-sort.tq:425:67
  {
    // ../../third_party/v8/builtins/array-sort.tq:426:5
    int31_t t2698 = 1;
    TNode<Smi> t2699 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>(p_run), implicit_cast<int31_t>(t2698)));
    USE(implicit_cast<TNode<Smi>>(t2699));
    TNode<Object> t2700 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(t2699)));
    TNode<Smi> t2701 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t2700)));
    USE(implicit_cast<TNode<Smi>>(t2701));
    *_return_414 = implicit_cast<TNode<Smi>>(t2701);
    Goto(label_macro_end_1623);
  }
  BIND(label_macro_end_1623);
  return implicit_cast<TNode<Smi>>((*_return_414).value());
}

void ArrayBuiltinsFromDSLAssembler::SetPendingRunBase(TNode<FixedArray> p_pendingRuns, TNode<Smi> p_run, TNode<Smi> p_value) {
  Label label_macro_end_1624_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1624 = &label_macro_end_1624_impl;
  USE(label_macro_end_1624);
  // ../../third_party/v8/builtins/array-sort.tq:429:74
  {
    // ../../third_party/v8/builtins/array-sort.tq:430:5
    int31_t t2702 = 1;
    TNode<Smi> t2703 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>(p_run), implicit_cast<int31_t>(t2702)));
    USE(implicit_cast<TNode<Smi>>(t2703));
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(t2703), implicit_cast<TNode<Object>>(p_value));
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::GetPendingRunLength(TNode<FixedArray> p_pendingRuns, TNode<Smi> p_run) {
  TVARIABLE(Smi, _return_415_impl);
  auto _return_415 = &_return_415_impl;
  USE(_return_415);
  Label label_macro_end_1625_impl(this, {_return_415}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1625 = &label_macro_end_1625_impl;
  USE(label_macro_end_1625);
  // ../../third_party/v8/builtins/array-sort.tq:433:69
  {
    // ../../third_party/v8/builtins/array-sort.tq:434:5
    int31_t t2704 = 1;
    TNode<Smi> t2705 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>(p_run), implicit_cast<int31_t>(t2704)));
    USE(implicit_cast<TNode<Smi>>(t2705));
    int31_t t2706 = 1;
    TNode<Smi> t2707 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2706)));
    TNode<Smi> t2708 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t2705), implicit_cast<TNode<Smi>>(t2707)));
    USE(implicit_cast<TNode<Smi>>(t2708));
    TNode<Object> t2709 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(t2708)));
    TNode<Smi> t2710 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t2709)));
    USE(implicit_cast<TNode<Smi>>(t2710));
    *_return_415 = implicit_cast<TNode<Smi>>(t2710);
    Goto(label_macro_end_1625);
  }
  BIND(label_macro_end_1625);
  return implicit_cast<TNode<Smi>>((*_return_415).value());
}

void ArrayBuiltinsFromDSLAssembler::SetPendingRunLength(TNode<FixedArray> p_pendingRuns, TNode<Smi> p_run, TNode<Smi> p_value) {
  Label label_macro_end_1626_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1626 = &label_macro_end_1626_impl;
  USE(label_macro_end_1626);
  // ../../third_party/v8/builtins/array-sort.tq:437:76
  {
    // ../../third_party/v8/builtins/array-sort.tq:438:5
    int31_t t2711 = 1;
    TNode<Smi> t2712 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>(p_run), implicit_cast<int31_t>(t2711)));
    USE(implicit_cast<TNode<Smi>>(t2712));
    int31_t t2713 = 1;
    TNode<Smi> t2714 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2713)));
    TNode<Smi> t2715 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t2712), implicit_cast<TNode<Smi>>(t2714)));
    USE(implicit_cast<TNode<Smi>>(t2715));
    StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(t2715), implicit_cast<TNode<Object>>(p_value));
  }
}

void ArrayBuiltinsFromDSLAssembler::PushRun(TNode<FixedArray> p_sortState, TNode<Smi> p_base, TNode<Smi> p_length) {
  Label label_macro_end_1627_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1627 = &label_macro_end_1627_impl;
  USE(label_macro_end_1627);
  // ../../third_party/v8/builtins/array-sort.tq:441:64
  {
    // ../../third_party/v8/builtins/array-sort.tq:442:5
    // ../../third_party/v8/builtins/array-sort.tq:444:5
    TNode<Smi> t2716 = UncheckedCast<Smi>(GetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Smi>>(t2716));
    TNode<Smi> stackSize_1009_impl;
    auto stackSize_1009 = &stackSize_1009_impl;
    USE(stackSize_1009);
    *stackSize_1009 = implicit_cast<TNode<Smi>>(t2716);
    // ../../third_party/v8/builtins/array-sort.tq:445:5
    TNode<Object> t2717 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsIdx())));
    TNode<FixedArray> t2718 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(t2717)));
    USE(implicit_cast<TNode<FixedArray>>(t2718));
    TNode<FixedArray> pendingRuns_1010_impl;
    auto pendingRuns_1010 = &pendingRuns_1010_impl;
    USE(pendingRuns_1010);
    *pendingRuns_1010 = implicit_cast<TNode<FixedArray>>(t2718);
    // ../../third_party/v8/builtins/array-sort.tq:448:5
    SetPendingRunBase(implicit_cast<TNode<FixedArray>>((*pendingRuns_1010)), implicit_cast<TNode<Smi>>((*stackSize_1009)), implicit_cast<TNode<Smi>>(p_base));
    // ../../third_party/v8/builtins/array-sort.tq:449:5
    SetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1010)), implicit_cast<TNode<Smi>>((*stackSize_1009)), implicit_cast<TNode<Smi>>(p_length));
    // ../../third_party/v8/builtins/array-sort.tq:451:5
    int31_t t2719 = 1;
    TNode<Smi> t2720 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2719)));
    TNode<Smi> t2721 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*stackSize_1009)), implicit_cast<TNode<Smi>>(t2720)));
    USE(implicit_cast<TNode<Smi>>(t2721));
    SetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>(t2721));
  }
}

compiler::TNode<FixedArray> ArrayBuiltinsFromDSLAssembler::GetTempArray(TNode<FixedArray> p_sortState, TNode<Smi> p_requestedSize) {
  TVARIABLE(FixedArray, _return_416_impl);
  auto _return_416 = &_return_416_impl;
  USE(_return_416);
  Label label_macro_end_1628_impl(this, {_return_416}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1628 = &label_macro_end_1628_impl;
  USE(label_macro_end_1628);
  // ../../third_party/v8/builtins/array-sort.tq:456:77
  {
    // ../../third_party/v8/builtins/array-sort.tq:457:5
    TNode<Smi> t2722 = UncheckedCast<Smi>(SmiMax(implicit_cast<TNode<Smi>>(kSortStateTempSize()), implicit_cast<TNode<Smi>>(p_requestedSize)));
    USE(implicit_cast<TNode<Smi>>(t2722));
    TNode<Smi> minSize_1011_impl;
    auto minSize_1011 = &minSize_1011_impl;
    USE(minSize_1011);
    *minSize_1011 = implicit_cast<TNode<Smi>>(t2722);
    // ../../third_party/v8/builtins/array-sort.tq:459:5
    TNode<Object> t2723 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kTempArraySizeIdx())));
    TNode<Smi> t2724 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t2723)));
    USE(implicit_cast<TNode<Smi>>(t2724));
    TNode<Smi> currentSize_1012_impl;
    auto currentSize_1012 = &currentSize_1012_impl;
    USE(currentSize_1012);
    *currentSize_1012 = implicit_cast<TNode<Smi>>(t2724);
    // ../../third_party/v8/builtins/array-sort.tq:460:5
    {
      Label label__True_851_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_851 = &label__True_851_impl;
      USE(label__True_851);
      Label label__False_852_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_852 = &label__False_852_impl;
      USE(label__False_852);
      TNode<BoolT> t2725 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*currentSize_1012)), implicit_cast<TNode<Smi>>((*minSize_1011))));
      USE(implicit_cast<TNode<BoolT>>(t2725));
      Branch(implicit_cast<TNode<BoolT>>(t2725), label__True_851, label__False_852);
      if (label__True_851->is_used())
      {
        BIND(label__True_851);
        // ../../third_party/v8/builtins/array-sort.tq:460:33
        {
          // ../../third_party/v8/builtins/array-sort.tq:461:7
          TNode<FixedArray> t2726 = UncheckedCast<FixedArray>(GetTempArray(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<FixedArray>>(t2726));
          *_return_416 = implicit_cast<TNode<FixedArray>>(t2726);
          Goto(label_macro_end_1628);
        }
      }
      BIND(label__False_852);
    }
    // ../../third_party/v8/builtins/array-sort.tq:464:5
    TNode<IntPtrT> t2727 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Smi>>((*minSize_1011))));
    USE(implicit_cast<TNode<IntPtrT>>(t2727));
    TNode<FixedArray> t2728 = UncheckedCast<FixedArray>(AllocateZeroedFixedArray(implicit_cast<TNode<IntPtrT>>(t2727)));
    USE(implicit_cast<TNode<FixedArray>>(t2728));
    TNode<FixedArray> tempArray_1013_impl;
    auto tempArray_1013 = &tempArray_1013_impl;
    USE(tempArray_1013);
    *tempArray_1013 = implicit_cast<TNode<FixedArray>>(t2728);
    // ../../third_party/v8/builtins/array-sort.tq:467:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kTempArraySizeIdx()), implicit_cast<TNode<Object>>((*minSize_1011)));
    // ../../third_party/v8/builtins/array-sort.tq:468:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kTempArrayIdx()), implicit_cast<TNode<Object>>((*tempArray_1013)));
    // ../../third_party/v8/builtins/array-sort.tq:469:5
    *_return_416 = implicit_cast<TNode<FixedArray>>((*tempArray_1013));
    Goto(label_macro_end_1628);
  }
  BIND(label_macro_end_1628);
  return implicit_cast<TNode<FixedArray>>((*_return_416).value());
}

void ArrayBuiltinsFromDSLAssembler::EnsureSuccess(TNode<FixedArray> p_sortState, Label* label_Bailout_853) {
  Label label_macro_end_1629_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1629 = &label_macro_end_1629_impl;
  USE(label_macro_end_1629);
  // ../../third_party/v8/builtins/array-sort.tq:473:61
  {
    // ../../third_party/v8/builtins/array-sort.tq:474:5
    TNode<Object> t2729 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kBailoutStatusIdx())));
    TNode<Smi> t2730 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t2729)));
    USE(implicit_cast<TNode<Smi>>(t2730));
    TNode<Smi> status_1014_impl;
    auto status_1014 = &status_1014_impl;
    USE(status_1014);
    *status_1014 = implicit_cast<TNode<Smi>>(t2730);
    // ../../third_party/v8/builtins/array-sort.tq:475:5
    {
      Label label__True_854_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_854 = &label__True_854_impl;
      USE(label__True_854);
      Label label__False_855_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_855 = &label__False_855_impl;
      USE(label__False_855);
      TNode<BoolT> t2731 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*status_1014)), implicit_cast<TNode<Smi>>(kFailure())));
      USE(implicit_cast<TNode<BoolT>>(t2731));
      Branch(implicit_cast<TNode<BoolT>>(t2731), label__True_854, label__False_855);
      if (label__True_854->is_used())
      {
        BIND(label__True_854);
        // ../../third_party/v8/builtins/array-sort.tq:475:29
        Goto(label_Bailout_853);
      }
      BIND(label__False_855);
    }
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::Failure(TNode<FixedArray> p_sortState) {
  TVARIABLE(Smi, _return_417_impl);
  auto _return_417 = &_return_417_impl;
  USE(_return_417);
  Label label_macro_end_1630_impl(this, {_return_417}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1630 = &label_macro_end_1630_impl;
  USE(label_macro_end_1630);
  // ../../third_party/v8/builtins/array-sort.tq:479:45
  {
    // ../../third_party/v8/builtins/array-sort.tq:480:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kBailoutStatusIdx()), implicit_cast<TNode<Object>>(kFailure()));
    // ../../third_party/v8/builtins/array-sort.tq:481:5
    *_return_417 = implicit_cast<TNode<Smi>>(kFailure());
    Goto(label_macro_end_1630);
  }
  BIND(label_macro_end_1630);
  return implicit_cast<TNode<Smi>>((*_return_417).value());
}

compiler::TNode<Object> ArrayBuiltinsFromDSLAssembler::CallLoad(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_load, TNode<HeapObject> p_elements, TNode<Smi> p_index, Label* label_Bailout_856) {
  TVARIABLE(Object, _return_418_impl);
  auto _return_418 = &_return_418_impl;
  USE(_return_418);
  Label label_macro_end_1631_impl(this, {_return_418}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1631 = &label_macro_end_1631_impl;
  USE(label_macro_end_1631);
  // ../../third_party/v8/builtins/array-sort.tq:491:22
  {
    // ../../third_party/v8/builtins/array-sort.tq:492:5
    TNode<Object> t2732 = UncheckedCast<Object>(CallStub(Builtins::CallableFor(isolate(), Builtins::kLoad23ATFastPackedSmiElements).descriptor(), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(p_index)));
    USE(implicit_cast<TNode<Object>>(t2732));
    TNode<Object> result_1015_impl;
    auto result_1015 = &result_1015_impl;
    USE(result_1015);
    *result_1015 = implicit_cast<TNode<Object>>(t2732);
    // ../../third_party/v8/builtins/array-sort.tq:493:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_856);
    // ../../third_party/v8/builtins/array-sort.tq:494:5
    *_return_418 = implicit_cast<TNode<Object>>((*result_1015));
    Goto(label_macro_end_1631);
  }
  BIND(label_macro_end_1631);
  return implicit_cast<TNode<Object>>((*_return_418).value());
}

void ArrayBuiltinsFromDSLAssembler::CallStore(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_store, TNode<HeapObject> p_elements, TNode<Smi> p_index, TNode<Object> p_value, Label* label_Bailout_857) {
  Label label_macro_end_1632_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1632 = &label_macro_end_1632_impl;
  USE(label_macro_end_1632);
  // ../../third_party/v8/builtins/array-sort.tq:499:71
  {
    // ../../third_party/v8/builtins/array-sort.tq:500:5
    TNode<Smi> t2733 = UncheckedCast<Smi>(CallStub(Builtins::CallableFor(isolate(), Builtins::kStore23ATFastPackedSmiElements).descriptor(), implicit_cast<TNode<Code>>(p_store), implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(p_index), implicit_cast<TNode<Object>>(p_value)));
    USE(implicit_cast<TNode<Smi>>(t2733));
    // ../../third_party/v8/builtins/array-sort.tq:501:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_857);
  }
}

void ArrayBuiltinsFromDSLAssembler::CallCopyFromTempArray(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<HeapObject> p_dstElements, TNode<Smi> p_dstPos, TNode<FixedArray> p_tempArray, TNode<Smi> p_srcPos, TNode<Smi> p_length, Label* label_Bailout_858) {
  Label label_macro_end_1633_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1633 = &label_macro_end_1633_impl;
  USE(label_macro_end_1633);
  // ../../third_party/v8/builtins/array-sort.tq:507:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:508:5
    TNode<Smi> t2734 = UncheckedCast<Smi>(CallBuiltin(Builtins::kCopyFromTempArray, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>(p_dstElements), implicit_cast<TNode<Smi>>(p_dstPos), implicit_cast<TNode<FixedArray>>(p_tempArray), implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_length)));
    USE(implicit_cast<TNode<Smi>>(t2734));
    // ../../third_party/v8/builtins/array-sort.tq:510:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_858);
  }
}

void ArrayBuiltinsFromDSLAssembler::CallCopyWithinSortArray(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<HeapObject> p_elements, TNode<Smi> p_srcPos, TNode<Smi> p_dstPos, TNode<Smi> p_length, Label* label_Bailout_859) {
  Label label_macro_end_1634_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1634 = &label_macro_end_1634_impl;
  USE(label_macro_end_1634);
  // ../../third_party/v8/builtins/array-sort.tq:516:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:517:5
    TNode<Smi> t2735 = UncheckedCast<Smi>(CallBuiltin(Builtins::kCopyWithinSortArray, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_dstPos), implicit_cast<TNode<Smi>>(p_length)));
    USE(implicit_cast<TNode<Smi>>(t2735));
    // ../../third_party/v8/builtins/array-sort.tq:518:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_859);
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::CallGallopRight(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_load, TNode<Object> p_key, TNode<Smi> p_base, TNode<Smi> p_length, TNode<Smi> p_hint, TNode<Oddball> p_useTempArray, Label* label_Bailout_860) {
  TVARIABLE(Smi, _return_419_impl);
  auto _return_419 = &_return_419_impl;
  USE(_return_419);
  Label label_macro_end_1635_impl(this, {_return_419}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1635 = &label_macro_end_1635_impl;
  USE(label_macro_end_1635);
  // ../../third_party/v8/builtins/array-sort.tq:524:22
  {
    // ../../third_party/v8/builtins/array-sort.tq:525:5
    TNode<Smi> t2736 = UncheckedCast<Smi>(CallBuiltin(Builtins::kGallopRight, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<Object>>(p_key), implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Oddball>>(p_useTempArray)));
    USE(implicit_cast<TNode<Smi>>(t2736));
    TNode<Smi> result_1016_impl;
    auto result_1016 = &result_1016_impl;
    USE(result_1016);
    *result_1016 = implicit_cast<TNode<Smi>>(t2736);
    // ../../third_party/v8/builtins/array-sort.tq:527:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_860);
    // ../../third_party/v8/builtins/array-sort.tq:528:5
    *_return_419 = implicit_cast<TNode<Smi>>((*result_1016));
    Goto(label_macro_end_1635);
  }
  BIND(label_macro_end_1635);
  return implicit_cast<TNode<Smi>>((*_return_419).value());
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::CallGallopLeft(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_load, TNode<Object> p_key, TNode<Smi> p_base, TNode<Smi> p_length, TNode<Smi> p_hint, TNode<Oddball> p_useTempArray, Label* label_Bailout_861) {
  TVARIABLE(Smi, _return_420_impl);
  auto _return_420 = &_return_420_impl;
  USE(_return_420);
  Label label_macro_end_1636_impl(this, {_return_420}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1636 = &label_macro_end_1636_impl;
  USE(label_macro_end_1636);
  // ../../third_party/v8/builtins/array-sort.tq:534:22
  {
    // ../../third_party/v8/builtins/array-sort.tq:535:5
    TNode<Smi> t2737 = UncheckedCast<Smi>(CallBuiltin(Builtins::kGallopLeft, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<Object>>(p_key), implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Oddball>>(p_useTempArray)));
    USE(implicit_cast<TNode<Smi>>(t2737));
    TNode<Smi> result_1017_impl;
    auto result_1017 = &result_1017_impl;
    USE(result_1017);
    *result_1017 = implicit_cast<TNode<Smi>>(t2737);
    // ../../third_party/v8/builtins/array-sort.tq:537:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_861);
    // ../../third_party/v8/builtins/array-sort.tq:538:5
    *_return_420 = implicit_cast<TNode<Smi>>((*result_1017));
    Goto(label_macro_end_1636);
  }
  BIND(label_macro_end_1636);
  return implicit_cast<TNode<Smi>>((*_return_420).value());
}

void ArrayBuiltinsFromDSLAssembler::CallMergeAt(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Smi> p_i, Label* label_Bailout_862) {
  Label label_macro_end_1637_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1637 = &label_macro_end_1637_impl;
  USE(label_macro_end_1637);
  // ../../third_party/v8/builtins/array-sort.tq:542:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:543:5
    TNode<Smi> t2738 = UncheckedCast<Smi>(CallBuiltin(Builtins::kMergeAt, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>(p_i)));
    USE(implicit_cast<TNode<Smi>>(t2738));
    // ../../third_party/v8/builtins/array-sort.tq:544:5
    EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_862);
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::GetReceiverLengthProperty(TNode<Context> p_context, TNode<FixedArray> p_sortState) {
  TVARIABLE(Smi, _return_421_impl);
  auto _return_421 = &_return_421_impl;
  USE(_return_421);
  Label label_macro_end_1638_impl(this, {_return_421}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1638 = &label_macro_end_1638_impl;
  USE(label_macro_end_1638);
  // ../../third_party/v8/builtins/array-sort.tq:549:53
  {
    // ../../third_party/v8/builtins/array-sort.tq:550:5
    TNode<JSReceiver> t2739 = UncheckedCast<JSReceiver>(GetReceiver(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<JSReceiver>>(t2739));
    TNode<JSReceiver> receiver_1018_impl;
    auto receiver_1018 = &receiver_1018_impl;
    USE(receiver_1018);
    *receiver_1018 = implicit_cast<TNode<JSReceiver>>(t2739);
    // ../../third_party/v8/builtins/array-sort.tq:552:5
    {
      Label label__True_863_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_863 = &label__True_863_impl;
      USE(label__True_863);
      Label label__False_864_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_864 = &label__False_864_impl;
      USE(label__False_864);
      TNode<BoolT> t2740 = UncheckedCast<BoolT>(IsJSArray(implicit_cast<TNode<HeapObject>>((*receiver_1018))));
      USE(implicit_cast<TNode<BoolT>>(t2740));
      Branch(implicit_cast<TNode<BoolT>>(t2740), label__True_863, label__False_864);
      if (label__True_863->is_used())
      {
        BIND(label__True_863);
        // ../../third_party/v8/builtins/array-sort.tq:552:30
        TNode<JSArray> t2741 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>((*receiver_1018))));
        USE(implicit_cast<TNode<JSArray>>(t2741));
        TNode<Smi> t2742 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>(t2741)));
        *_return_421 = implicit_cast<TNode<Smi>>(t2742);
        Goto(label_macro_end_1638);
      }
      BIND(label__False_864);
    }
    // ../../third_party/v8/builtins/array-sort.tq:554:5
    TNode<Object> t2743 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*receiver_1018)), implicit_cast<TNode<Object>>(kLengthString())));
    USE(implicit_cast<TNode<Object>>(t2743));
    TNode<Number> t2744 = UncheckedCast<Number>(ToLength_Inline(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(t2743)));
    USE(implicit_cast<TNode<Number>>(t2744));
    TNode<Number> len_1019_impl;
    auto len_1019 = &len_1019_impl;
    USE(len_1019);
    *len_1019 = implicit_cast<TNode<Number>>(t2744);
    // ../../third_party/v8/builtins/array-sort.tq:556:5
    TNode<Smi> t2745 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>((*len_1019))));
    USE(implicit_cast<TNode<Smi>>(t2745));
    *_return_421 = implicit_cast<TNode<Smi>>(t2745);
    Goto(label_macro_end_1638);
  }
  BIND(label_macro_end_1638);
  return implicit_cast<TNode<Smi>>((*_return_421).value());
}

void ArrayBuiltinsFromDSLAssembler::CopyToTempArray(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_load, TNode<HeapObject> p_srcElements, TNode<Smi> p_srcPos, TNode<FixedArray> p_tempArray, TNode<Smi> p_dstPos, TNode<Smi> p_length, Label* label_Bailout_865) {
  Label label_macro_end_1639_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1639 = &label_macro_end_1639_impl;
  USE(label_macro_end_1639);
  // ../../third_party/v8/builtins/array-sort.tq:563:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:564:5
    // ../../third_party/v8/builtins/array-sort.tq:565:5
    // ../../third_party/v8/builtins/array-sort.tq:566:5
    // ../../third_party/v8/builtins/array-sort.tq:567:5
    // ../../third_party/v8/builtins/array-sort.tq:569:5
    TVARIABLE(Smi, srcIdx_422_impl);
    auto srcIdx_422 = &srcIdx_422_impl;
    USE(srcIdx_422);
    *srcIdx_422 = implicit_cast<TNode<Smi>>(p_srcPos);
    // ../../third_party/v8/builtins/array-sort.tq:570:5
    TVARIABLE(Smi, dstIdx_423_impl);
    auto dstIdx_423 = &dstIdx_423_impl;
    USE(dstIdx_423);
    *dstIdx_423 = implicit_cast<TNode<Smi>>(p_dstPos);
    // ../../third_party/v8/builtins/array-sort.tq:571:5
    TNode<Smi> t2746 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_length)));
    USE(implicit_cast<TNode<Smi>>(t2746));
    TVARIABLE(Smi, to_424_impl);
    auto to_424 = &to_424_impl;
    USE(to_424);
    *to_424 = implicit_cast<TNode<Smi>>(t2746);
    // ../../third_party/v8/builtins/array-sort.tq:573:5
    {
      Label label__True_866_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_866 = &label__True_866_impl;
      USE(label__True_866);
      Label label__False_867_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_867 = &label__False_867_impl;
      USE(label__False_867);
      Label label_header_1020_1640_impl(this, {dstIdx_423, srcIdx_422}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1020_1640 = &label_header_1020_1640_impl;
      USE(label_header_1020_1640);
      Goto(label_header_1020_1640);
      BIND(label_header_1020_1640);
      TNode<BoolT> t2747 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*srcIdx_422).value()), implicit_cast<TNode<Smi>>((*to_424).value())));
      USE(implicit_cast<TNode<BoolT>>(t2747));
      Branch(implicit_cast<TNode<BoolT>>(t2747), label__True_866, label__False_867);
      if (label__True_866->is_used())
      {
        BIND(label__True_866);
        // ../../third_party/v8/builtins/array-sort.tq:573:25
        {
          // ../../third_party/v8/builtins/array-sort.tq:574:7
          TNode<Smi> t2748 = implicit_cast<TNode<Smi>>((*srcIdx_422).value());
          USE(t2748);
          TNode<Smi> t2749 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t2750 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*srcIdx_422).value()), implicit_cast<TNode<Smi>>(t2749)));
          *srcIdx_422 = implicit_cast<TNode<Smi>>(t2750);
          TNode<Object> t2751 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>(p_srcElements), implicit_cast<TNode<Smi>>(t2748), label_Bailout_865));
          USE(implicit_cast<TNode<Object>>(t2751));
          TVARIABLE(Object, element_425_impl);
          auto element_425 = &element_425_impl;
          USE(element_425);
          *element_425 = implicit_cast<TNode<Object>>(t2751);
          // ../../third_party/v8/builtins/array-sort.tq:577:7
          TNode<Smi> t2752 = implicit_cast<TNode<Smi>>((*dstIdx_423).value());
          USE(t2752);
          TNode<Smi> t2753 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t2754 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dstIdx_423).value()), implicit_cast<TNode<Smi>>(t2753)));
          *dstIdx_423 = implicit_cast<TNode<Smi>>(t2754);
          StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>(p_tempArray), implicit_cast<TNode<Smi>>(t2752), implicit_cast<TNode<Object>>((*element_425).value()));
        }
        Goto(label_header_1020_1640);
      }
      BIND(label__False_867);
    }
  }
}

TF_BUILTIN(CopyFromTempArray, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_dstElements = UncheckedCast<HeapObject>(Parameter(Descriptor::kDstElements));
  USE(p_dstElements);
  TNode<Smi> p_dstPos = UncheckedCast<Smi>(Parameter(Descriptor::kDstPos));
  USE(p_dstPos);
  TNode<FixedArray> p_tempArray = UncheckedCast<FixedArray>(Parameter(Descriptor::kTempArray));
  USE(p_tempArray);
  TNode<Smi> p_srcPos = UncheckedCast<Smi>(Parameter(Descriptor::kSrcPos));
  USE(p_srcPos);
  TNode<Smi> p_length = UncheckedCast<Smi>(Parameter(Descriptor::kLength));
  USE(p_length);
  // ../../third_party/v8/builtins/array-sort.tq:583:74
  {
    // ../../third_party/v8/builtins/array-sort.tq:584:5
    // ../../third_party/v8/builtins/array-sort.tq:585:5
    // ../../third_party/v8/builtins/array-sort.tq:586:5
    // ../../third_party/v8/builtins/array-sort.tq:587:5
    // ../../third_party/v8/builtins/array-sort.tq:589:5
    TNode<Code> t2755 = UncheckedCast<Code>(GetStoreFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t2755));
    TVARIABLE(Code, store_426_impl);
    auto store_426 = &store_426_impl;
    USE(store_426);
    *store_426 = implicit_cast<TNode<Code>>(t2755);
    // ../../third_party/v8/builtins/array-sort.tq:591:5
    TVARIABLE(Smi, srcIdx_427_impl);
    auto srcIdx_427 = &srcIdx_427_impl;
    USE(srcIdx_427);
    *srcIdx_427 = implicit_cast<TNode<Smi>>(p_srcPos);
    // ../../third_party/v8/builtins/array-sort.tq:592:5
    TVARIABLE(Smi, dstIdx_428_impl);
    auto dstIdx_428 = &dstIdx_428_impl;
    USE(dstIdx_428);
    *dstIdx_428 = implicit_cast<TNode<Smi>>(p_dstPos);
    // ../../third_party/v8/builtins/array-sort.tq:593:5
    TNode<Smi> t2756 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_length)));
    USE(implicit_cast<TNode<Smi>>(t2756));
    TVARIABLE(Smi, to_429_impl);
    auto to_429 = &to_429_impl;
    USE(to_429);
    *to_429 = implicit_cast<TNode<Smi>>(t2756);
    // ../../third_party/v8/builtins/array-sort.tq:594:5
    {
      Label label_try_done_1021_1641_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1021_1641 = &label_try_done_1021_1641_impl;
      USE(label_try_done_1021_1641);
      Label label_Bailout_868_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_868 = &label_Bailout_868_impl;
      USE(label_Bailout_868);
      Label label_try_begin_1022_1642_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1022_1642 = &label_try_begin_1022_1642_impl;
      USE(label_try_begin_1022_1642);
      Goto(label_try_begin_1022_1642);
      if (label_try_begin_1022_1642->is_used())
      {
        BIND(label_try_begin_1022_1642);
        // ../../third_party/v8/builtins/array-sort.tq:594:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:595:7
          {
            Label label__True_869_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_869 = &label__True_869_impl;
            USE(label__True_869);
            Label label__False_870_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_870 = &label__False_870_impl;
            USE(label__False_870);
            Label label_header_1023_1643_impl(this, {dstIdx_428, srcIdx_427}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1023_1643 = &label_header_1023_1643_impl;
            USE(label_header_1023_1643);
            Goto(label_header_1023_1643);
            BIND(label_header_1023_1643);
            TNode<BoolT> t2757 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*srcIdx_427).value()), implicit_cast<TNode<Smi>>((*to_429).value())));
            USE(implicit_cast<TNode<BoolT>>(t2757));
            Branch(implicit_cast<TNode<BoolT>>(t2757), label__True_869, label__False_870);
            if (label__True_869->is_used())
            {
              BIND(label__True_869);
              // ../../third_party/v8/builtins/array-sort.tq:595:27
              {
                // ../../third_party/v8/builtins/array-sort.tq:596:9
                TNode<Smi> t2758 = implicit_cast<TNode<Smi>>((*dstIdx_428).value());
                USE(t2758);
                TNode<Smi> t2759 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t2760 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dstIdx_428).value()), implicit_cast<TNode<Smi>>(t2759)));
                *dstIdx_428 = implicit_cast<TNode<Smi>>(t2760);
                TNode<Smi> t2761 = implicit_cast<TNode<Smi>>((*srcIdx_427).value());
                USE(t2761);
                TNode<Smi> t2762 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t2763 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*srcIdx_427).value()), implicit_cast<TNode<Smi>>(t2762)));
                *srcIdx_427 = implicit_cast<TNode<Smi>>(t2763);
                TNode<Object> t2764 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_tempArray), implicit_cast<TNode<Smi>>(t2761)));
                CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_426).value()), implicit_cast<TNode<HeapObject>>(p_dstElements), implicit_cast<TNode<Smi>>(t2758), implicit_cast<TNode<Object>>(t2764), label_Bailout_868);
              }
              Goto(label_header_1023_1643);
            }
            BIND(label__False_870);
          }
          // ../../third_party/v8/builtins/array-sort.tq:601:7
          Return(implicit_cast<TNode<Smi>>(kSuccess()));
        }
      }
      if (label_Bailout_868->is_used())
      {
        BIND(label_Bailout_868);
        // ../../third_party/v8/builtins/array-sort.tq:603:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:604:7
          TNode<Smi> t2765 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2765));
          Return(implicit_cast<TNode<Smi>>(t2765));
        }
      }
    }
  }
}

TF_BUILTIN(CopyWithinSortArray, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_srcPos = UncheckedCast<Smi>(Parameter(Descriptor::kSrcPos));
  USE(p_srcPos);
  TNode<Smi> p_dstPos = UncheckedCast<Smi>(Parameter(Descriptor::kDstPos));
  USE(p_dstPos);
  TNode<Smi> p_length = UncheckedCast<Smi>(Parameter(Descriptor::kLength));
  USE(p_length);
  // ../../third_party/v8/builtins/array-sort.tq:610:51
  {
    // ../../third_party/v8/builtins/array-sort.tq:611:5
    // ../../third_party/v8/builtins/array-sort.tq:612:5
    // ../../third_party/v8/builtins/array-sort.tq:613:5
    // ../../third_party/v8/builtins/array-sort.tq:614:5
    // ../../third_party/v8/builtins/array-sort.tq:616:5
    {
      Label label_try_done_1024_1644_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1024_1644 = &label_try_done_1024_1644_impl;
      USE(label_try_done_1024_1644);
      Label label_Bailout_871_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_871 = &label_Bailout_871_impl;
      USE(label_Bailout_871);
      Label label_try_begin_1025_1645_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1025_1645 = &label_try_begin_1025_1645_impl;
      USE(label_try_begin_1025_1645);
      Goto(label_try_begin_1025_1645);
      if (label_try_begin_1025_1645->is_used())
      {
        BIND(label_try_begin_1025_1645);
        // ../../third_party/v8/builtins/array-sort.tq:616:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:617:7
          TNode<Code> t2766 = UncheckedCast<Code>(GetLoadFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Code>>(t2766));
          TVARIABLE(Code, load_430_impl);
          auto load_430 = &load_430_impl;
          USE(load_430);
          *load_430 = implicit_cast<TNode<Code>>(t2766);
          // ../../third_party/v8/builtins/array-sort.tq:618:7
          TNode<Code> t2767 = UncheckedCast<Code>(GetStoreFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Code>>(t2767));
          TVARIABLE(Code, store_431_impl);
          auto store_431 = &store_431_impl;
          USE(store_431);
          *store_431 = implicit_cast<TNode<Code>>(t2767);
          // ../../third_party/v8/builtins/array-sort.tq:620:7
          {
            Label label__True_872_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_872 = &label__True_872_impl;
            USE(label__True_872);
            Label label__False_873_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_873 = &label__False_873_impl;
            USE(label__False_873);
            Label label_if_done_label_1026_1646_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1026_1646 = &label_if_done_label_1026_1646_impl;
            USE(label_if_done_label_1026_1646);
            TNode<BoolT> t2768 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_dstPos)));
            USE(implicit_cast<TNode<BoolT>>(t2768));
            Branch(implicit_cast<TNode<BoolT>>(t2768), label__True_872, label__False_873);
            if (label__True_872->is_used())
            {
              BIND(label__True_872);
              // ../../third_party/v8/builtins/array-sort.tq:620:28
              {
                // ../../third_party/v8/builtins/array-sort.tq:621:9
                TNode<Smi> t2769 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_length)));
                USE(implicit_cast<TNode<Smi>>(t2769));
                int31_t t2770 = 1;
                TNode<Smi> t2771 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2770)));
                TNode<Smi> t2772 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t2769), implicit_cast<TNode<Smi>>(t2771)));
                USE(implicit_cast<TNode<Smi>>(t2772));
                TVARIABLE(Smi, srcIdx_432_impl);
                auto srcIdx_432 = &srcIdx_432_impl;
                USE(srcIdx_432);
                *srcIdx_432 = implicit_cast<TNode<Smi>>(t2772);
                // ../../third_party/v8/builtins/array-sort.tq:622:9
                TNode<Smi> t2773 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_dstPos), implicit_cast<TNode<Smi>>(p_length)));
                USE(implicit_cast<TNode<Smi>>(t2773));
                int31_t t2774 = 1;
                TNode<Smi> t2775 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2774)));
                TNode<Smi> t2776 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t2773), implicit_cast<TNode<Smi>>(t2775)));
                USE(implicit_cast<TNode<Smi>>(t2776));
                TVARIABLE(Smi, dstIdx_433_impl);
                auto dstIdx_433 = &dstIdx_433_impl;
                USE(dstIdx_433);
                *dstIdx_433 = implicit_cast<TNode<Smi>>(t2776);
                // ../../third_party/v8/builtins/array-sort.tq:623:9
                {
                  Label label__True_874_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_874 = &label__True_874_impl;
                  USE(label__True_874);
                  Label label__False_875_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_875 = &label__False_875_impl;
                  USE(label__False_875);
                  Label label_header_1027_1647_impl(this, {dstIdx_433, srcIdx_432}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1027_1647 = &label_header_1027_1647_impl;
                  USE(label_header_1027_1647);
                  Goto(label_header_1027_1647);
                  BIND(label_header_1027_1647);
                  TNode<BoolT> t2777 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*srcIdx_432).value()), implicit_cast<TNode<Smi>>(p_srcPos)));
                  USE(implicit_cast<TNode<BoolT>>(t2777));
                  Branch(implicit_cast<TNode<BoolT>>(t2777), label__True_874, label__False_875);
                  if (label__True_874->is_used())
                  {
                    BIND(label__True_874);
                    // ../../third_party/v8/builtins/array-sort.tq:623:34
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:624:11
                      TNode<Smi> t2778 = implicit_cast<TNode<Smi>>((*srcIdx_432).value());
                      USE(t2778);
                      TNode<Smi> t2779 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t2780 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*srcIdx_432).value()), implicit_cast<TNode<Smi>>(t2779)));
                      *srcIdx_432 = implicit_cast<TNode<Smi>>(t2780);
                      TNode<Smi> t2781 = implicit_cast<TNode<Smi>>((*dstIdx_433).value());
                      USE(t2781);
                      TNode<Smi> t2782 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t2783 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dstIdx_433).value()), implicit_cast<TNode<Smi>>(t2782)));
                      *dstIdx_433 = implicit_cast<TNode<Smi>>(t2783);
                      CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_430).value()), implicit_cast<TNode<Code>>((*store_431).value()), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(t2778), implicit_cast<TNode<Smi>>(t2781), label_Bailout_871);
                    }
                    Goto(label_header_1027_1647);
                  }
                  BIND(label__False_875);
                }
              }
              Goto(label_if_done_label_1026_1646);
            }
            if (label__False_873->is_used())
            {
              BIND(label__False_873);
              // ../../third_party/v8/builtins/array-sort.tq:628:14
              {
                // ../../third_party/v8/builtins/array-sort.tq:629:9
                TVARIABLE(Smi, srcIdx_434_impl);
                auto srcIdx_434 = &srcIdx_434_impl;
                USE(srcIdx_434);
                *srcIdx_434 = implicit_cast<TNode<Smi>>(p_srcPos);
                // ../../third_party/v8/builtins/array-sort.tq:630:9
                TVARIABLE(Smi, dstIdx_435_impl);
                auto dstIdx_435 = &dstIdx_435_impl;
                USE(dstIdx_435);
                *dstIdx_435 = implicit_cast<TNode<Smi>>(p_dstPos);
                // ../../third_party/v8/builtins/array-sort.tq:631:9
                TNode<Smi> t2784 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_srcPos), implicit_cast<TNode<Smi>>(p_length)));
                USE(implicit_cast<TNode<Smi>>(t2784));
                TVARIABLE(Smi, to_436_impl);
                auto to_436 = &to_436_impl;
                USE(to_436);
                *to_436 = implicit_cast<TNode<Smi>>(t2784);
                // ../../third_party/v8/builtins/array-sort.tq:632:9
                {
                  Label label__True_876_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_876 = &label__True_876_impl;
                  USE(label__True_876);
                  Label label__False_877_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_877 = &label__False_877_impl;
                  USE(label__False_877);
                  Label label_header_1028_1648_impl(this, {dstIdx_435, srcIdx_434}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1028_1648 = &label_header_1028_1648_impl;
                  USE(label_header_1028_1648);
                  Goto(label_header_1028_1648);
                  BIND(label_header_1028_1648);
                  TNode<BoolT> t2785 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*srcIdx_434).value()), implicit_cast<TNode<Smi>>((*to_436).value())));
                  USE(implicit_cast<TNode<BoolT>>(t2785));
                  Branch(implicit_cast<TNode<BoolT>>(t2785), label__True_876, label__False_877);
                  if (label__True_876->is_used())
                  {
                    BIND(label__True_876);
                    // ../../third_party/v8/builtins/array-sort.tq:632:29
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:633:11
                      TNode<Smi> t2786 = implicit_cast<TNode<Smi>>((*srcIdx_434).value());
                      USE(t2786);
                      TNode<Smi> t2787 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t2788 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*srcIdx_434).value()), implicit_cast<TNode<Smi>>(t2787)));
                      *srcIdx_434 = implicit_cast<TNode<Smi>>(t2788);
                      TNode<Smi> t2789 = implicit_cast<TNode<Smi>>((*dstIdx_435).value());
                      USE(t2789);
                      TNode<Smi> t2790 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t2791 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dstIdx_435).value()), implicit_cast<TNode<Smi>>(t2790)));
                      *dstIdx_435 = implicit_cast<TNode<Smi>>(t2791);
                      CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_430).value()), implicit_cast<TNode<Code>>((*store_431).value()), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(t2786), implicit_cast<TNode<Smi>>(t2789), label_Bailout_871);
                    }
                    Goto(label_header_1028_1648);
                  }
                  BIND(label__False_877);
                }
              }
              Goto(label_if_done_label_1026_1646);
            }
            BIND(label_if_done_label_1026_1646);
          }
          // ../../third_party/v8/builtins/array-sort.tq:638:7
          Return(implicit_cast<TNode<Smi>>(kSuccess()));
        }
      }
      if (label_Bailout_871->is_used())
      {
        BIND(label_Bailout_871);
        // ../../third_party/v8/builtins/array-sort.tq:640:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:641:7
          TNode<Smi> t2792 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2792));
          Return(implicit_cast<TNode<Smi>>(t2792));
        }
      }
    }
  }
}

TF_BUILTIN(BinaryInsertionSort, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<Smi> p_low = UncheckedCast<Smi>(Parameter(Descriptor::kLow));
  USE(p_low);
  TNode<Smi> p_startArg = UncheckedCast<Smi>(Parameter(Descriptor::kStartArg));
  USE(p_startArg);
  TNode<Smi> p_high = UncheckedCast<Smi>(Parameter(Descriptor::kHigh));
  USE(p_high);
  // ../../third_party/v8/builtins/array-sort.tq:657:23
  {
    // ../../third_party/v8/builtins/array-sort.tq:658:5
    // ../../third_party/v8/builtins/array-sort.tq:660:5
    {
      Label label_try_done_1029_1649_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1029_1649 = &label_try_done_1029_1649_impl;
      USE(label_try_done_1029_1649);
      Label label_Bailout_878_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_878 = &label_Bailout_878_impl;
      USE(label_Bailout_878);
      Label label_try_begin_1030_1650_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1030_1650 = &label_try_begin_1030_1650_impl;
      USE(label_try_begin_1030_1650);
      Goto(label_try_begin_1030_1650);
      if (label_try_begin_1030_1650->is_used())
      {
        BIND(label_try_begin_1030_1650);
        // ../../third_party/v8/builtins/array-sort.tq:660:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:661:7
          TNode<HeapObject> t2793 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<HeapObject>>(t2793));
          TVARIABLE(HeapObject, elements_437_impl);
          auto elements_437 = &elements_437_impl;
          USE(elements_437);
          *elements_437 = implicit_cast<TNode<HeapObject>>(t2793);
          // ../../third_party/v8/builtins/array-sort.tq:663:7
          TNode<Code> t2794 = UncheckedCast<Code>(GetLoadFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Code>>(t2794));
          TNode<Code> load_1031_impl;
          auto load_1031 = &load_1031_impl;
          USE(load_1031);
          *load_1031 = implicit_cast<TNode<Code>>(t2794);
          // ../../third_party/v8/builtins/array-sort.tq:664:7
          TNode<Code> t2795 = UncheckedCast<Code>(GetStoreFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Code>>(t2795));
          TNode<Code> store_1032_impl;
          auto store_1032 = &store_1032_impl;
          USE(store_1032);
          *store_1032 = implicit_cast<TNode<Code>>(t2795);
          // ../../third_party/v8/builtins/array-sort.tq:666:7
          auto t2796 = [=]() {
            int31_t t2798 = 1;
            TNode<Smi> t2799 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2798)));
            TNode<Smi> t2800 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_startArg), implicit_cast<TNode<Smi>>(t2799)));
            USE(implicit_cast<TNode<Smi>>(t2800));
            return implicit_cast<TNode<Smi>>(t2800);
          };
          auto t2797 = [=]() {
            return implicit_cast<TNode<Smi>>(p_startArg);
          };
          TVARIABLE(Smi, t2801_1033_impl);
          auto t2801_1033 = &t2801_1033_impl;
          USE(t2801_1033);
          {
            Label label__True_879_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_879 = &label__True_879_impl;
            USE(label__True_879);
            Label label__False_880_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_880 = &label__False_880_impl;
            USE(label__False_880);
            Label label__done_1034_1651_impl(this, {t2801_1033}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__done_1034_1651 = &label__done_1034_1651_impl;
            USE(label__done_1034_1651);
            TNode<BoolT> t2802 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(p_low), implicit_cast<TNode<Smi>>(p_startArg)));
            USE(implicit_cast<TNode<BoolT>>(t2802));
            Branch(implicit_cast<TNode<BoolT>>(t2802), label__True_879, label__False_880);
            BIND(label__True_879);
                        *t2801_1033 = implicit_cast<TNode<Smi>>(t2796());
            Goto(label__done_1034_1651);
            BIND(label__False_880);
                        *t2801_1033 = implicit_cast<TNode<Smi>>(t2797());
            Goto(label__done_1034_1651);
            BIND(label__done_1034_1651);
          }
          TVARIABLE(Smi, start_438_impl);
          auto start_438 = &start_438_impl;
          USE(start_438);
          *start_438 = implicit_cast<TNode<Smi>>((*t2801_1033).value());
          // ../../third_party/v8/builtins/array-sort.tq:668:7
          Label label__True_881_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_881 = &label__True_881_impl;
          USE(label__True_881);
          Label label__False_882_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_882 = &label__False_882_impl;
          USE(label__False_882);
          Label label_header_1035_1652_impl(this, {elements_437, start_438}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_header_1035_1652 = &label_header_1035_1652_impl;
          USE(label_header_1035_1652);
          Goto(label_header_1035_1652);
          BIND(label_header_1035_1652);
          Label label_action_1036_1653_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_action_1036_1653 = &label_action_1036_1653_impl;
          USE(label_action_1036_1653);
          TNode<BoolT> t2803 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*start_438).value()), implicit_cast<TNode<Smi>>(p_high)));
          USE(implicit_cast<TNode<BoolT>>(t2803));
          Branch(implicit_cast<TNode<BoolT>>(t2803), label__True_881, label__False_882);
          if (label__True_881->is_used())
          {
            BIND(label__True_881);
            // ../../third_party/v8/builtins/array-sort.tq:668:37
            {
              // ../../third_party/v8/builtins/array-sort.tq:670:9
              TVARIABLE(Smi, left_439_impl);
              auto left_439 = &left_439_impl;
              USE(left_439);
              *left_439 = implicit_cast<TNode<Smi>>(p_low);
              // ../../third_party/v8/builtins/array-sort.tq:671:9
              TVARIABLE(Smi, right_440_impl);
              auto right_440 = &right_440_impl;
              USE(right_440);
              *right_440 = implicit_cast<TNode<Smi>>((*start_438).value());
              // ../../third_party/v8/builtins/array-sort.tq:673:9
              TNode<Object> t2804 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1031)), implicit_cast<TNode<HeapObject>>((*elements_437).value()), implicit_cast<TNode<Smi>>((*right_440).value()), label_Bailout_878));
              USE(implicit_cast<TNode<Object>>(t2804));
              TNode<Object> pivot_1037_impl;
              auto pivot_1037 = &pivot_1037_impl;
              USE(pivot_1037);
              *pivot_1037 = implicit_cast<TNode<Object>>(t2804);
              // ../../third_party/v8/builtins/array-sort.tq:680:9
              // ../../third_party/v8/builtins/array-sort.tq:683:9
              {
                Label label__True_883_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_883 = &label__True_883_impl;
                USE(label__True_883);
                Label label__False_884_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_884 = &label__False_884_impl;
                USE(label__False_884);
                Label label_header_1038_1654_impl(this, {elements_437, left_439, right_440}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_header_1038_1654 = &label_header_1038_1654_impl;
                USE(label_header_1038_1654);
                Goto(label_header_1038_1654);
                BIND(label_header_1038_1654);
                TNode<BoolT> t2805 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*left_439).value()), implicit_cast<TNode<Smi>>((*right_440).value())));
                USE(implicit_cast<TNode<BoolT>>(t2805));
                Branch(implicit_cast<TNode<BoolT>>(t2805), label__True_883, label__False_884);
                if (label__True_883->is_used())
                {
                  BIND(label__True_883);
                  // ../../third_party/v8/builtins/array-sort.tq:683:30
                  {
                    // ../../third_party/v8/builtins/array-sort.tq:684:11
                    TNode<Smi> t2806 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*right_440).value()), implicit_cast<TNode<Smi>>((*left_439).value())));
                    USE(implicit_cast<TNode<Smi>>(t2806));
                    int31_t t2807 = 1;
                    TNode<Smi> t2808 = UncheckedCast<Smi>(SmiShr(implicit_cast<TNode<Smi>>(t2806), implicit_cast<int31_t>(t2807)));
                    USE(implicit_cast<TNode<Smi>>(t2808));
                    TNode<Smi> t2809 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*left_439).value()), implicit_cast<TNode<Smi>>(t2808)));
                    USE(implicit_cast<TNode<Smi>>(t2809));
                    TNode<Smi> mid_1039_impl;
                    auto mid_1039 = &mid_1039_impl;
                    USE(mid_1039);
                    *mid_1039 = implicit_cast<TNode<Smi>>(t2809);
                    // ../../third_party/v8/builtins/array-sort.tq:685:11
                    TNode<Object> t2810 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1031)), implicit_cast<TNode<HeapObject>>((*elements_437).value()), implicit_cast<TNode<Smi>>((*mid_1039)), label_Bailout_878));
                    USE(implicit_cast<TNode<Object>>(t2810));
                    TNode<Object> midElement_1040_impl;
                    auto midElement_1040 = &midElement_1040_impl;
                    USE(midElement_1040);
                    *midElement_1040 = implicit_cast<TNode<Object>>(t2810);
                    // ../../third_party/v8/builtins/array-sort.tq:688:11
                    TNode<Number> t2811 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*pivot_1037)), implicit_cast<TNode<Object>>((*midElement_1040)), label_Bailout_878));
                    USE(implicit_cast<TNode<Number>>(t2811));
                    TNode<Number> order_1041_impl;
                    auto order_1041 = &order_1041_impl;
                    USE(order_1041);
                    *order_1041 = implicit_cast<TNode<Number>>(t2811);
                    // ../../third_party/v8/builtins/array-sort.tq:691:11
                    TNode<HeapObject> t2812 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                    USE(implicit_cast<TNode<HeapObject>>(t2812));
                    *elements_437 = implicit_cast<TNode<HeapObject>>(t2812);
                    // ../../third_party/v8/builtins/array-sort.tq:693:11
                    {
                      Label label__True_885_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label__True_885 = &label__True_885_impl;
                      USE(label__True_885);
                      Label label__False_886_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label__False_886 = &label__False_886_impl;
                      USE(label__False_886);
                      Label label_if_done_label_1042_1655_impl(this, {left_439, right_440}, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label_if_done_label_1042_1655 = &label_if_done_label_1042_1655_impl;
                      USE(label_if_done_label_1042_1655);
                      int31_t t2813 = 0;
                      TNode<Number> t2814 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2813)));
                      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_1041)), implicit_cast<TNode<Number>>(t2814), label__True_885, label__False_886);
                      if (label__True_885->is_used())
                      {
                        BIND(label__True_885);
                        // ../../third_party/v8/builtins/array-sort.tq:693:26
                        {
                          // ../../third_party/v8/builtins/array-sort.tq:694:13
                          *right_440 = implicit_cast<TNode<Smi>>((*mid_1039));
                        }
                        Goto(label_if_done_label_1042_1655);
                      }
                      if (label__False_886->is_used())
                      {
                        BIND(label__False_886);
                        // ../../third_party/v8/builtins/array-sort.tq:695:18
                        {
                          // ../../third_party/v8/builtins/array-sort.tq:696:13
                          int31_t t2815 = 1;
                          TNode<Smi> t2816 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2815)));
                          TNode<Smi> t2817 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*mid_1039)), implicit_cast<TNode<Smi>>(t2816)));
                          USE(implicit_cast<TNode<Smi>>(t2817));
                          *left_439 = implicit_cast<TNode<Smi>>(t2817);
                        }
                        Goto(label_if_done_label_1042_1655);
                      }
                      BIND(label_if_done_label_1042_1655);
                    }
                  }
                  Goto(label_header_1038_1654);
                }
                BIND(label__False_884);
              }
              // ../../third_party/v8/builtins/array-sort.tq:699:9
              // ../../third_party/v8/builtins/array-sort.tq:709:9
              TVARIABLE(Smi, p_441_impl);
              auto p_441 = &p_441_impl;
              USE(p_441);
              *p_441 = implicit_cast<TNode<Smi>>((*start_438).value());
              Label label__True_887_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label__True_887 = &label__True_887_impl;
              USE(label__True_887);
              Label label__False_888_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label__False_888 = &label__False_888_impl;
              USE(label__False_888);
              Label label_header_1043_1656_impl(this, {p_441}, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label_header_1043_1656 = &label_header_1043_1656_impl;
              USE(label_header_1043_1656);
              Goto(label_header_1043_1656);
              BIND(label_header_1043_1656);
              Label label_action_1044_1657_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
              Label* label_action_1044_1657 = &label_action_1044_1657_impl;
              USE(label_action_1044_1657);
              TNode<BoolT> t2818 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*p_441).value()), implicit_cast<TNode<Smi>>((*left_439).value())));
              USE(implicit_cast<TNode<BoolT>>(t2818));
              Branch(implicit_cast<TNode<BoolT>>(t2818), label__True_887, label__False_888);
              if (label__True_887->is_used())
              {
                BIND(label__True_887);
                // ../../third_party/v8/builtins/array-sort.tq:709:49
                {
                  // ../../third_party/v8/builtins/array-sort.tq:710:11
                  int31_t t2819 = 1;
                  TNode<Smi> t2820 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2819)));
                  TNode<Smi> t2821 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*p_441).value()), implicit_cast<TNode<Smi>>(t2820)));
                  USE(implicit_cast<TNode<Smi>>(t2821));
                  CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1031)), implicit_cast<TNode<Code>>((*store_1032)), implicit_cast<TNode<HeapObject>>((*elements_437).value()), implicit_cast<TNode<Smi>>(t2821), implicit_cast<TNode<Smi>>((*p_441).value()), label_Bailout_878);
                }
                Goto(label_action_1044_1657);
              }
              {
                BIND(label_action_1044_1657);
                TNode<Smi> t2822 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t2823 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*p_441).value()), implicit_cast<TNode<Smi>>(t2822)));
                *p_441 = implicit_cast<TNode<Smi>>(t2823);
                Goto(label_header_1043_1656);
              }
              BIND(label__False_888);
              // ../../third_party/v8/builtins/array-sort.tq:713:9
              CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1032)), implicit_cast<TNode<HeapObject>>((*elements_437).value()), implicit_cast<TNode<Smi>>((*left_439).value()), implicit_cast<TNode<Object>>((*pivot_1037)), label_Bailout_878);
            }
            Goto(label_action_1036_1653);
          }
          {
            BIND(label_action_1036_1653);
            TNode<Smi> t2824 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
            TNode<Smi> t2825 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*start_438).value()), implicit_cast<TNode<Smi>>(t2824)));
            *start_438 = implicit_cast<TNode<Smi>>(t2825);
            Goto(label_header_1035_1652);
          }
          BIND(label__False_882);
          // ../../third_party/v8/builtins/array-sort.tq:716:7
          Return(implicit_cast<TNode<Smi>>(kSuccess()));
        }
      }
      if (label_Bailout_878->is_used())
      {
        BIND(label_Bailout_878);
        // ../../third_party/v8/builtins/array-sort.tq:718:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:719:7
          TNode<Smi> t2826 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2826));
          Return(implicit_cast<TNode<Smi>>(t2826));
        }
      }
    }
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::CountAndMakeRun(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Smi> p_lowArg, TNode<Smi> p_high, Label* label_Bailout_889) {
  TVARIABLE(Smi, _return_442_impl);
  auto _return_442 = &_return_442_impl;
  USE(_return_442);
  Label label_macro_end_1658_impl(this, {_return_442}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1658 = &label_macro_end_1658_impl;
  USE(label_macro_end_1658);
  // ../../third_party/v8/builtins/array-sort.tq:742:22
  {
    // ../../third_party/v8/builtins/array-sort.tq:743:5
    // ../../third_party/v8/builtins/array-sort.tq:745:5
    TNode<HeapObject> t2827 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<HeapObject>>(t2827));
    TVARIABLE(HeapObject, elements_443_impl);
    auto elements_443 = &elements_443_impl;
    USE(elements_443);
    *elements_443 = implicit_cast<TNode<HeapObject>>(t2827);
    // ../../third_party/v8/builtins/array-sort.tq:746:5
    TNode<Code> t2828 = UncheckedCast<Code>(GetLoadFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t2828));
    TNode<Code> load_1045_impl;
    auto load_1045 = &load_1045_impl;
    USE(load_1045);
    *load_1045 = implicit_cast<TNode<Code>>(t2828);
    // ../../third_party/v8/builtins/array-sort.tq:747:5
    TNode<Code> t2829 = UncheckedCast<Code>(GetStoreFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t2829));
    TNode<Code> store_1046_impl;
    auto store_1046 = &store_1046_impl;
    USE(store_1046);
    *store_1046 = implicit_cast<TNode<Code>>(t2829);
    // ../../third_party/v8/builtins/array-sort.tq:749:5
    int31_t t2830 = 1;
    TNode<Smi> t2831 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2830)));
    TNode<Smi> t2832 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_lowArg), implicit_cast<TNode<Smi>>(t2831)));
    USE(implicit_cast<TNode<Smi>>(t2832));
    TVARIABLE(Smi, low_444_impl);
    auto low_444 = &low_444_impl;
    USE(low_444);
    *low_444 = implicit_cast<TNode<Smi>>(t2832);
    // ../../third_party/v8/builtins/array-sort.tq:750:5
    {
      Label label__True_890_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_890 = &label__True_890_impl;
      USE(label__True_890);
      Label label__False_891_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_891 = &label__False_891_impl;
      USE(label__False_891);
      TNode<BoolT> t2833 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*low_444).value()), implicit_cast<TNode<Smi>>(p_high)));
      USE(implicit_cast<TNode<BoolT>>(t2833));
      Branch(implicit_cast<TNode<BoolT>>(t2833), label__True_890, label__False_891);
      if (label__True_890->is_used())
      {
        BIND(label__True_890);
        // ../../third_party/v8/builtins/array-sort.tq:750:22
        int31_t t2834 = 1;
        TNode<Smi> t2835 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2834)));
        *_return_442 = implicit_cast<TNode<Smi>>(t2835);
        Goto(label_macro_end_1658);
      }
      BIND(label__False_891);
    }
    // ../../third_party/v8/builtins/array-sort.tq:752:5
    int31_t t2836 = 2;
    TVARIABLE(Smi, runLength_445_impl);
    auto runLength_445 = &runLength_445_impl;
    USE(runLength_445);
    TNode<Smi> t2837 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2836)));
    *runLength_445 = implicit_cast<TNode<Smi>>(t2837);
    // ../../third_party/v8/builtins/array-sort.tq:754:5
    TNode<Object> t2838 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1045)), implicit_cast<TNode<HeapObject>>((*elements_443).value()), implicit_cast<TNode<Smi>>((*low_444).value()), label_Bailout_889));
    USE(implicit_cast<TNode<Object>>(t2838));
    TNode<Object> elementLow_1047_impl;
    auto elementLow_1047 = &elementLow_1047_impl;
    USE(elementLow_1047);
    *elementLow_1047 = implicit_cast<TNode<Object>>(t2838);
    // ../../third_party/v8/builtins/array-sort.tq:756:5
    int31_t t2839 = 1;
    TNode<Smi> t2840 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2839)));
    TNode<Smi> t2841 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*low_444).value()), implicit_cast<TNode<Smi>>(t2840)));
    USE(implicit_cast<TNode<Smi>>(t2841));
    TNode<Object> t2842 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1045)), implicit_cast<TNode<HeapObject>>((*elements_443).value()), implicit_cast<TNode<Smi>>(t2841), label_Bailout_889));
    USE(implicit_cast<TNode<Object>>(t2842));
    TNode<Object> elementLowPred_1048_impl;
    auto elementLowPred_1048 = &elementLowPred_1048_impl;
    USE(elementLowPred_1048);
    *elementLowPred_1048 = implicit_cast<TNode<Object>>(t2842);
    // ../../third_party/v8/builtins/array-sort.tq:758:5
    TNode<Number> t2843 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*elementLow_1047)), implicit_cast<TNode<Object>>((*elementLowPred_1048)), label_Bailout_889));
    USE(implicit_cast<TNode<Number>>(t2843));
    TVARIABLE(Number, order_446_impl);
    auto order_446 = &order_446_impl;
    USE(order_446);
    *order_446 = implicit_cast<TNode<Number>>(t2843);
    // ../../third_party/v8/builtins/array-sort.tq:761:5
    TNode<HeapObject> t2844 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<HeapObject>>(t2844));
    *elements_443 = implicit_cast<TNode<HeapObject>>(t2844);
    // ../../third_party/v8/builtins/array-sort.tq:766:5
    auto t2845 = [=]() {
      return implicit_cast<bool>(true);
    };
    auto t2846 = [=]() {
      return implicit_cast<bool>(false);
    };
    TVARIABLE(BoolT, t2847_1049_impl);
    auto t2847_1049 = &t2847_1049_impl;
    USE(t2847_1049);
    {
      Label label__True_892_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_892 = &label__True_892_impl;
      USE(label__True_892);
      Label label__False_893_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_893 = &label__False_893_impl;
      USE(label__False_893);
      Label label__done_1050_1659_impl(this, {t2847_1049}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_1050_1659 = &label__done_1050_1659_impl;
      USE(label__done_1050_1659);
      int31_t t2848 = 0;
      TNode<Number> t2849 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2848)));
      BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_446).value()), implicit_cast<TNode<Number>>(t2849), label__True_892, label__False_893);
      BIND(label__True_892);
            TNode<BoolT> t2850 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(t2845())));
      *t2847_1049 = implicit_cast<TNode<BoolT>>(t2850);
      Goto(label__done_1050_1659);
      BIND(label__False_893);
            TNode<BoolT> t2851 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(t2846())));
      *t2847_1049 = implicit_cast<TNode<BoolT>>(t2851);
      Goto(label__done_1050_1659);
      BIND(label__done_1050_1659);
    }
    TNode<BoolT> isDescending_1051_impl;
    auto isDescending_1051 = &isDescending_1051_impl;
    USE(isDescending_1051);
    *isDescending_1051 = implicit_cast<TNode<BoolT>>((*t2847_1049).value());
    // ../../third_party/v8/builtins/array-sort.tq:768:5
    TVARIABLE(Object, previousElement_447_impl);
    auto previousElement_447 = &previousElement_447_impl;
    USE(previousElement_447);
    *previousElement_447 = implicit_cast<TNode<Object>>((*elementLow_1047));
    // ../../third_party/v8/builtins/array-sort.tq:769:5
    int31_t t2852 = 1;
    TNode<Smi> t2853 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2852)));
    TNode<Smi> t2854 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*low_444).value()), implicit_cast<TNode<Smi>>(t2853)));
    USE(implicit_cast<TNode<Smi>>(t2854));
    TVARIABLE(Smi, idx_448_impl);
    auto idx_448 = &idx_448_impl;
    USE(idx_448);
    *idx_448 = implicit_cast<TNode<Smi>>(t2854);
    Label label__True_894_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label__True_894 = &label__True_894_impl;
    USE(label__True_894);
    Label label__False_895_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label__False_895 = &label__False_895_impl;
    USE(label__False_895);
    Label label_header_1052_1660_impl(this, {elements_443, idx_448, order_446, previousElement_447, runLength_445}, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_header_1052_1660 = &label_header_1052_1660_impl;
    USE(label_header_1052_1660);
    Goto(label_header_1052_1660);
    BIND(label_header_1052_1660);
    Label label_action_1053_1661_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
    Label* label_action_1053_1661 = &label_action_1053_1661_impl;
    USE(label_action_1053_1661);
    TNode<BoolT> t2855 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*idx_448).value()), implicit_cast<TNode<Smi>>(p_high)));
    USE(implicit_cast<TNode<BoolT>>(t2855));
    Branch(implicit_cast<TNode<BoolT>>(t2855), label__True_894, label__False_895);
    if (label__True_894->is_used())
    {
      BIND(label__True_894);
      // ../../third_party/v8/builtins/array-sort.tq:769:53
      {
        // ../../third_party/v8/builtins/array-sort.tq:770:7
        TNode<Object> t2856 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1045)), implicit_cast<TNode<HeapObject>>((*elements_443).value()), implicit_cast<TNode<Smi>>((*idx_448).value()), label_Bailout_889));
        USE(implicit_cast<TNode<Object>>(t2856));
        TNode<Object> currentElement_1054_impl;
        auto currentElement_1054 = &currentElement_1054_impl;
        USE(currentElement_1054);
        *currentElement_1054 = implicit_cast<TNode<Object>>(t2856);
        // ../../third_party/v8/builtins/array-sort.tq:772:7
        TNode<Number> t2857 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*currentElement_1054)), implicit_cast<TNode<Object>>((*previousElement_447).value()), label_Bailout_889));
        USE(implicit_cast<TNode<Number>>(t2857));
        *order_446 = implicit_cast<TNode<Number>>(t2857);
        // ../../third_party/v8/builtins/array-sort.tq:774:7
        TNode<HeapObject> t2858 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
        USE(implicit_cast<TNode<HeapObject>>(t2858));
        *elements_443 = implicit_cast<TNode<HeapObject>>(t2858);
        // ../../third_party/v8/builtins/array-sort.tq:776:7
        {
          Label label__True_896_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_896 = &label__True_896_impl;
          USE(label__True_896);
          Label label__False_897_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_897 = &label__False_897_impl;
          USE(label__False_897);
          Label label_if_done_label_1055_1662_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_if_done_label_1055_1662 = &label_if_done_label_1055_1662_impl;
          USE(label_if_done_label_1055_1662);
          Branch(implicit_cast<TNode<BoolT>>((*isDescending_1051)), label__True_896, label__False_897);
          if (label__True_896->is_used())
          {
            BIND(label__True_896);
            // ../../third_party/v8/builtins/array-sort.tq:776:25
            {
              // ../../third_party/v8/builtins/array-sort.tq:777:9
              {
                Label label__True_898_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_898 = &label__True_898_impl;
                USE(label__True_898);
                Label label__False_899_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_899 = &label__False_899_impl;
                USE(label__False_899);
                int31_t t2859 = 0;
                TNode<Number> t2860 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2859)));
                BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*order_446).value()), implicit_cast<TNode<Number>>(t2860), label__True_898, label__False_899);
                if (label__True_898->is_used())
                {
                  BIND(label__True_898);
                  // ../../third_party/v8/builtins/array-sort.tq:777:25
                  Goto(label__False_895);
                }
                BIND(label__False_899);
              }
            }
            Goto(label_if_done_label_1055_1662);
          }
          if (label__False_897->is_used())
          {
            BIND(label__False_897);
            // ../../third_party/v8/builtins/array-sort.tq:778:14
            {
              // ../../third_party/v8/builtins/array-sort.tq:779:9
              {
                Label label__True_900_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_900 = &label__True_900_impl;
                USE(label__True_900);
                Label label__False_901_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_901 = &label__False_901_impl;
                USE(label__False_901);
                int31_t t2861 = 0;
                TNode<Number> t2862 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2861)));
                BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_446).value()), implicit_cast<TNode<Number>>(t2862), label__True_900, label__False_901);
                if (label__True_900->is_used())
                {
                  BIND(label__True_900);
                  // ../../third_party/v8/builtins/array-sort.tq:779:24
                  Goto(label__False_895);
                }
                BIND(label__False_901);
              }
            }
            Goto(label_if_done_label_1055_1662);
          }
          BIND(label_if_done_label_1055_1662);
        }
        // ../../third_party/v8/builtins/array-sort.tq:782:7
        *previousElement_447 = implicit_cast<TNode<Object>>((*currentElement_1054));
        // ../../third_party/v8/builtins/array-sort.tq:783:7
        TNode<Smi> t2863 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
        TNode<Smi> t2864 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*runLength_445).value()), implicit_cast<TNode<Smi>>(t2863)));
        *runLength_445 = implicit_cast<TNode<Smi>>(t2864);
      }
      Goto(label_action_1053_1661);
    }
    {
      BIND(label_action_1053_1661);
      TNode<Smi> t2865 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
      TNode<Smi> t2866 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*idx_448).value()), implicit_cast<TNode<Smi>>(t2865)));
      *idx_448 = implicit_cast<TNode<Smi>>(t2866);
      Goto(label_header_1052_1660);
    }
    BIND(label__False_895);
    // ../../third_party/v8/builtins/array-sort.tq:786:5
    {
      Label label__True_902_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_902 = &label__True_902_impl;
      USE(label__True_902);
      Label label__False_903_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_903 = &label__False_903_impl;
      USE(label__False_903);
      Branch(implicit_cast<TNode<BoolT>>((*isDescending_1051)), label__True_902, label__False_903);
      if (label__True_902->is_used())
      {
        BIND(label__True_902);
        // ../../third_party/v8/builtins/array-sort.tq:786:23
        {
          // ../../third_party/v8/builtins/array-sort.tq:787:7
          TNode<Smi> t2867 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_lowArg), implicit_cast<TNode<Smi>>((*runLength_445).value())));
          USE(implicit_cast<TNode<Smi>>(t2867));
          ReverseRange(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1045)), implicit_cast<TNode<Code>>((*store_1046)), implicit_cast<TNode<HeapObject>>((*elements_443).value()), implicit_cast<TNode<Smi>>(p_lowArg), implicit_cast<TNode<Smi>>(t2867), label_Bailout_889);
        }
        Goto(label__False_903);
      }
      BIND(label__False_903);
    }
    // ../../third_party/v8/builtins/array-sort.tq:792:5
    *_return_442 = implicit_cast<TNode<Smi>>((*runLength_445).value());
    Goto(label_macro_end_1658);
  }
  BIND(label_macro_end_1658);
  return implicit_cast<TNode<Smi>>((*_return_442).value());
}

void ArrayBuiltinsFromDSLAssembler::ReverseRange(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_load, TNode<Code> p_store, TNode<HeapObject> p_elements, TNode<Smi> p_from, TNode<Smi> p_to, Label* label_Bailout_904) {
  Label label_macro_end_1663_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1663 = &label_macro_end_1663_impl;
  USE(label_macro_end_1663);
  // ../../third_party/v8/builtins/array-sort.tq:798:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:799:5
    TVARIABLE(Smi, low_449_impl);
    auto low_449 = &low_449_impl;
    USE(low_449);
    *low_449 = implicit_cast<TNode<Smi>>(p_from);
    // ../../third_party/v8/builtins/array-sort.tq:800:5
    int31_t t2868 = 1;
    TNode<Smi> t2869 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2868)));
    TNode<Smi> t2870 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_to), implicit_cast<TNode<Smi>>(t2869)));
    USE(implicit_cast<TNode<Smi>>(t2870));
    TVARIABLE(Smi, high_450_impl);
    auto high_450 = &high_450_impl;
    USE(high_450);
    *high_450 = implicit_cast<TNode<Smi>>(t2870);
    // ../../third_party/v8/builtins/array-sort.tq:802:5
    {
      Label label__True_905_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_905 = &label__True_905_impl;
      USE(label__True_905);
      Label label__False_906_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_906 = &label__False_906_impl;
      USE(label__False_906);
      Label label_header_1056_1664_impl(this, {high_450, low_449}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1056_1664 = &label_header_1056_1664_impl;
      USE(label_header_1056_1664);
      Goto(label_header_1056_1664);
      BIND(label_header_1056_1664);
      TNode<BoolT> t2871 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*low_449).value()), implicit_cast<TNode<Smi>>((*high_450).value())));
      USE(implicit_cast<TNode<BoolT>>(t2871));
      Branch(implicit_cast<TNode<BoolT>>(t2871), label__True_905, label__False_906);
      if (label__True_905->is_used())
      {
        BIND(label__True_905);
        // ../../third_party/v8/builtins/array-sort.tq:802:24
        {
          // ../../third_party/v8/builtins/array-sort.tq:803:7
          TNode<Object> t2872 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>((*low_449).value()), label_Bailout_904));
          USE(implicit_cast<TNode<Object>>(t2872));
          TNode<Object> elementLow_1057_impl;
          auto elementLow_1057 = &elementLow_1057_impl;
          USE(elementLow_1057);
          *elementLow_1057 = implicit_cast<TNode<Object>>(t2872);
          // ../../third_party/v8/builtins/array-sort.tq:805:7
          TNode<Object> t2873 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>((*high_450).value()), label_Bailout_904));
          USE(implicit_cast<TNode<Object>>(t2873));
          TNode<Object> elementHigh_1058_impl;
          auto elementHigh_1058 = &elementHigh_1058_impl;
          USE(elementHigh_1058);
          *elementHigh_1058 = implicit_cast<TNode<Object>>(t2873);
          // ../../third_party/v8/builtins/array-sort.tq:807:7
          TNode<Smi> t2874 = implicit_cast<TNode<Smi>>((*low_449).value());
          USE(t2874);
          TNode<Smi> t2875 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t2876 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*low_449).value()), implicit_cast<TNode<Smi>>(t2875)));
          *low_449 = implicit_cast<TNode<Smi>>(t2876);
          CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_store), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(t2874), implicit_cast<TNode<Object>>((*elementHigh_1058)), label_Bailout_904);
          // ../../third_party/v8/builtins/array-sort.tq:809:7
          TNode<Smi> t2877 = implicit_cast<TNode<Smi>>((*high_450).value());
          USE(t2877);
          TNode<Smi> t2878 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t2879 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*high_450).value()), implicit_cast<TNode<Smi>>(t2878)));
          *high_450 = implicit_cast<TNode<Smi>>(t2879);
          CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_store), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(t2877), implicit_cast<TNode<Object>>((*elementLow_1057)), label_Bailout_904);
        }
        Goto(label_header_1056_1664);
      }
      BIND(label__False_906);
    }
  }
}

TF_BUILTIN(MergeAt, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<Smi> p_i = UncheckedCast<Smi>(Parameter(Descriptor::kI));
  USE(p_i);
  // ../../third_party/v8/builtins/array-sort.tq:816:73
  {
    // ../../third_party/v8/builtins/array-sort.tq:817:5
    TNode<Smi> t2880 = UncheckedCast<Smi>(GetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Smi>>(t2880));
    TNode<Smi> stackSize_1059_impl;
    auto stackSize_1059 = &stackSize_1059_impl;
    USE(stackSize_1059);
    *stackSize_1059 = implicit_cast<TNode<Smi>>(t2880);
    // ../../third_party/v8/builtins/array-sort.tq:821:5
    // ../../third_party/v8/builtins/array-sort.tq:822:5
    // ../../third_party/v8/builtins/array-sort.tq:823:5
    // ../../third_party/v8/builtins/array-sort.tq:825:5
    TNode<HeapObject> t2881 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<HeapObject>>(t2881));
    TNode<HeapObject> elements_1060_impl;
    auto elements_1060 = &elements_1060_impl;
    USE(elements_1060);
    *elements_1060 = implicit_cast<TNode<HeapObject>>(t2881);
    // ../../third_party/v8/builtins/array-sort.tq:826:5
    TNode<Code> t2882 = UncheckedCast<Code>(GetLoadFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t2882));
    TNode<Code> load_1061_impl;
    auto load_1061 = &load_1061_impl;
    USE(load_1061);
    *load_1061 = implicit_cast<TNode<Code>>(t2882);
    // ../../third_party/v8/builtins/array-sort.tq:828:5
    TNode<Object> t2883 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsIdx())));
    TNode<FixedArray> t2884 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(t2883)));
    USE(implicit_cast<TNode<FixedArray>>(t2884));
    TNode<FixedArray> pendingRuns_1062_impl;
    auto pendingRuns_1062 = &pendingRuns_1062_impl;
    USE(pendingRuns_1062);
    *pendingRuns_1062 = implicit_cast<TNode<FixedArray>>(t2884);
    // ../../third_party/v8/builtins/array-sort.tq:830:5
    TNode<Smi> t2885 = UncheckedCast<Smi>(GetPendingRunBase(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(p_i)));
    USE(implicit_cast<TNode<Smi>>(t2885));
    TVARIABLE(Smi, baseA_451_impl);
    auto baseA_451 = &baseA_451_impl;
    USE(baseA_451);
    *baseA_451 = implicit_cast<TNode<Smi>>(t2885);
    // ../../third_party/v8/builtins/array-sort.tq:831:5
    TNode<Smi> t2886 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(p_i)));
    USE(implicit_cast<TNode<Smi>>(t2886));
    TVARIABLE(Smi, lengthA_452_impl);
    auto lengthA_452 = &lengthA_452_impl;
    USE(lengthA_452);
    *lengthA_452 = implicit_cast<TNode<Smi>>(t2886);
    // ../../third_party/v8/builtins/array-sort.tq:832:5
    int31_t t2887 = 1;
    TNode<Smi> t2888 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2887)));
    TNode<Smi> t2889 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2888)));
    USE(implicit_cast<TNode<Smi>>(t2889));
    TNode<Smi> t2890 = UncheckedCast<Smi>(GetPendingRunBase(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(t2889)));
    USE(implicit_cast<TNode<Smi>>(t2890));
    TVARIABLE(Smi, baseB_453_impl);
    auto baseB_453 = &baseB_453_impl;
    USE(baseB_453);
    *baseB_453 = implicit_cast<TNode<Smi>>(t2890);
    // ../../third_party/v8/builtins/array-sort.tq:833:5
    int31_t t2891 = 1;
    TNode<Smi> t2892 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2891)));
    TNode<Smi> t2893 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2892)));
    USE(implicit_cast<TNode<Smi>>(t2893));
    TNode<Smi> t2894 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(t2893)));
    USE(implicit_cast<TNode<Smi>>(t2894));
    TVARIABLE(Smi, lengthB_454_impl);
    auto lengthB_454 = &lengthB_454_impl;
    USE(lengthB_454);
    *lengthB_454 = implicit_cast<TNode<Smi>>(t2894);
    // ../../third_party/v8/builtins/array-sort.tq:834:5
    // ../../third_party/v8/builtins/array-sort.tq:835:5
    // ../../third_party/v8/builtins/array-sort.tq:840:5
    TNode<Smi> t2895 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>((*lengthB_454).value())));
    USE(implicit_cast<TNode<Smi>>(t2895));
    SetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2895));
    // ../../third_party/v8/builtins/array-sort.tq:841:5
    {
      Label label__True_907_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_907 = &label__True_907_impl;
      USE(label__True_907);
      Label label__False_908_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_908 = &label__False_908_impl;
      USE(label__False_908);
      int31_t t2896 = 3;
      TNode<Smi> t2897 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2896)));
      TNode<Smi> t2898 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*stackSize_1059)), implicit_cast<TNode<Smi>>(t2897)));
      USE(implicit_cast<TNode<Smi>>(t2898));
      TNode<BoolT> t2899 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2898)));
      USE(implicit_cast<TNode<BoolT>>(t2899));
      Branch(implicit_cast<TNode<BoolT>>(t2899), label__True_907, label__False_908);
      if (label__True_907->is_used())
      {
        BIND(label__True_907);
        // ../../third_party/v8/builtins/array-sort.tq:841:29
        {
          // ../../third_party/v8/builtins/array-sort.tq:842:7
          int31_t t2900 = 2;
          TNode<Smi> t2901 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2900)));
          TNode<Smi> t2902 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2901)));
          USE(implicit_cast<TNode<Smi>>(t2902));
          TNode<Smi> t2903 = UncheckedCast<Smi>(GetPendingRunBase(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(t2902)));
          USE(implicit_cast<TNode<Smi>>(t2903));
          TNode<Smi> base_1063_impl;
          auto base_1063 = &base_1063_impl;
          USE(base_1063);
          *base_1063 = implicit_cast<TNode<Smi>>(t2903);
          // ../../third_party/v8/builtins/array-sort.tq:843:7
          int31_t t2904 = 2;
          TNode<Smi> t2905 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2904)));
          TNode<Smi> t2906 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2905)));
          USE(implicit_cast<TNode<Smi>>(t2906));
          TNode<Smi> t2907 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(t2906)));
          USE(implicit_cast<TNode<Smi>>(t2907));
          TNode<Smi> length_1064_impl;
          auto length_1064 = &length_1064_impl;
          USE(length_1064);
          *length_1064 = implicit_cast<TNode<Smi>>(t2907);
          // ../../third_party/v8/builtins/array-sort.tq:844:7
          int31_t t2908 = 1;
          TNode<Smi> t2909 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2908)));
          TNode<Smi> t2910 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2909)));
          USE(implicit_cast<TNode<Smi>>(t2910));
          SetPendingRunBase(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(t2910), implicit_cast<TNode<Smi>>((*base_1063)));
          // ../../third_party/v8/builtins/array-sort.tq:845:7
          int31_t t2911 = 1;
          TNode<Smi> t2912 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2911)));
          TNode<Smi> t2913 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_i), implicit_cast<TNode<Smi>>(t2912)));
          USE(implicit_cast<TNode<Smi>>(t2913));
          SetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1062)), implicit_cast<TNode<Smi>>(t2913), implicit_cast<TNode<Smi>>((*length_1064)));
        }
        Goto(label__False_908);
      }
      BIND(label__False_908);
    }
    // ../../third_party/v8/builtins/array-sort.tq:847:5
    int31_t t2914 = 1;
    TNode<Smi> t2915 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2914)));
    TNode<Smi> t2916 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*stackSize_1059)), implicit_cast<TNode<Smi>>(t2915)));
    USE(implicit_cast<TNode<Smi>>(t2916));
    SetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>(t2916));
    // ../../third_party/v8/builtins/array-sort.tq:849:5
    {
      Label label_try_done_1065_1665_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1065_1665 = &label_try_done_1065_1665_impl;
      USE(label_try_done_1065_1665);
      Label label_Bailout_909_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_909 = &label_Bailout_909_impl;
      USE(label_Bailout_909);
      Label label_try_begin_1066_1666_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1066_1666 = &label_try_begin_1066_1666_impl;
      USE(label_try_begin_1066_1666);
      Goto(label_try_begin_1066_1666);
      if (label_try_begin_1066_1666->is_used())
      {
        BIND(label_try_begin_1066_1666);
        // ../../third_party/v8/builtins/array-sort.tq:849:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:852:7
          TNode<Object> t2917 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1061)), implicit_cast<TNode<HeapObject>>((*elements_1060)), implicit_cast<TNode<Smi>>((*baseB_453).value()), label_Bailout_909));
          USE(implicit_cast<TNode<Object>>(t2917));
          TNode<Object> keyRight_1067_impl;
          auto keyRight_1067 = &keyRight_1067_impl;
          USE(keyRight_1067);
          *keyRight_1067 = implicit_cast<TNode<Object>>(t2917);
          // ../../third_party/v8/builtins/array-sort.tq:855:7
          int31_t t2918 = 0;
          TNode<Smi> t2919 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2918)));
          TNode<Smi> t2920 = UncheckedCast<Smi>(CallGallopRight(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1061)), implicit_cast<TNode<Object>>((*keyRight_1067)), implicit_cast<TNode<Smi>>((*baseA_451).value()), implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>(t2919), implicit_cast<TNode<Oddball>>(False()), label_Bailout_909));
          USE(implicit_cast<TNode<Smi>>(t2920));
          TNode<Smi> k_1068_impl;
          auto k_1068 = &k_1068_impl;
          USE(k_1068);
          *k_1068 = implicit_cast<TNode<Smi>>(t2920);
          // ../../third_party/v8/builtins/array-sort.tq:858:7
          // ../../third_party/v8/builtins/array-sort.tq:860:7
          TNode<Smi> t2921 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*baseA_451).value()), implicit_cast<TNode<Smi>>((*k_1068))));
          USE(implicit_cast<TNode<Smi>>(t2921));
          *baseA_451 = implicit_cast<TNode<Smi>>(t2921);
          // ../../third_party/v8/builtins/array-sort.tq:861:7
          TNode<Smi> t2922 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>((*k_1068))));
          USE(implicit_cast<TNode<Smi>>(t2922));
          *lengthA_452 = implicit_cast<TNode<Smi>>(t2922);
          // ../../third_party/v8/builtins/array-sort.tq:862:7
          {
            Label label__True_910_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_910 = &label__True_910_impl;
            USE(label__True_910);
            Label label__False_911_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_911 = &label__False_911_impl;
            USE(label__False_911);
            int31_t t2923 = 0;
            TNode<Smi> t2924 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2923)));
            TNode<BoolT> t2925 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>(t2924)));
            USE(implicit_cast<TNode<BoolT>>(t2925));
            Branch(implicit_cast<TNode<BoolT>>(t2925), label__True_910, label__False_911);
            if (label__True_910->is_used())
            {
              BIND(label__True_910);
              // ../../third_party/v8/builtins/array-sort.tq:862:25
              Return(implicit_cast<TNode<Smi>>(kSuccess()));
            }
            BIND(label__False_911);
          }
          // ../../third_party/v8/builtins/array-sort.tq:863:7
          // ../../third_party/v8/builtins/array-sort.tq:867:7
          TNode<Smi> t2926 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*baseA_451).value()), implicit_cast<TNode<Smi>>((*lengthA_452).value())));
          USE(implicit_cast<TNode<Smi>>(t2926));
          int31_t t2927 = 1;
          TNode<Smi> t2928 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2927)));
          TNode<Smi> t2929 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t2926), implicit_cast<TNode<Smi>>(t2928)));
          USE(implicit_cast<TNode<Smi>>(t2929));
          TNode<Object> t2930 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1061)), implicit_cast<TNode<HeapObject>>((*elements_1060)), implicit_cast<TNode<Smi>>(t2929), label_Bailout_909));
          USE(implicit_cast<TNode<Object>>(t2930));
          TVARIABLE(Object, keyLeft_455_impl);
          auto keyLeft_455 = &keyLeft_455_impl;
          USE(keyLeft_455);
          *keyLeft_455 = implicit_cast<TNode<Object>>(t2930);
          // ../../third_party/v8/builtins/array-sort.tq:870:7
          int31_t t2931 = 1;
          TNode<Smi> t2932 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2931)));
          TNode<Smi> t2933 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_454).value()), implicit_cast<TNode<Smi>>(t2932)));
          USE(implicit_cast<TNode<Smi>>(t2933));
          TNode<Smi> t2934 = UncheckedCast<Smi>(CallGallopLeft(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1061)), implicit_cast<TNode<Object>>((*keyLeft_455).value()), implicit_cast<TNode<Smi>>((*baseB_453).value()), implicit_cast<TNode<Smi>>((*lengthB_454).value()), implicit_cast<TNode<Smi>>(t2933), implicit_cast<TNode<Oddball>>(False()), label_Bailout_909));
          USE(implicit_cast<TNode<Smi>>(t2934));
          *lengthB_454 = implicit_cast<TNode<Smi>>(t2934);
          // ../../third_party/v8/builtins/array-sort.tq:873:7
          // ../../third_party/v8/builtins/array-sort.tq:874:7
          {
            Label label__True_912_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_912 = &label__True_912_impl;
            USE(label__True_912);
            Label label__False_913_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_913 = &label__False_913_impl;
            USE(label__False_913);
            int31_t t2935 = 0;
            TNode<Smi> t2936 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2935)));
            TNode<BoolT> t2937 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_454).value()), implicit_cast<TNode<Smi>>(t2936)));
            USE(implicit_cast<TNode<BoolT>>(t2937));
            Branch(implicit_cast<TNode<BoolT>>(t2937), label__True_912, label__False_913);
            if (label__True_912->is_used())
            {
              BIND(label__True_912);
              // ../../third_party/v8/builtins/array-sort.tq:874:25
              Return(implicit_cast<TNode<Smi>>(kSuccess()));
            }
            BIND(label__False_913);
          }
          // ../../third_party/v8/builtins/array-sort.tq:878:7
          {
            Label label__True_914_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_914 = &label__True_914_impl;
            USE(label__True_914);
            Label label__False_915_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_915 = &label__False_915_impl;
            USE(label__False_915);
            Label label_if_done_label_1069_1667_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1069_1667 = &label_if_done_label_1069_1667_impl;
            USE(label_if_done_label_1069_1667);
            TNode<BoolT> t2938 = UncheckedCast<BoolT>(SmiLessThanOrEqual(implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>((*lengthB_454).value())));
            USE(implicit_cast<TNode<BoolT>>(t2938));
            Branch(implicit_cast<TNode<BoolT>>(t2938), label__True_914, label__False_915);
            if (label__True_914->is_used())
            {
              BIND(label__True_914);
              // ../../third_party/v8/builtins/array-sort.tq:878:31
              {
                // ../../third_party/v8/builtins/array-sort.tq:879:9
                MergeLow(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*baseA_451).value()), implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>((*baseB_453).value()), implicit_cast<TNode<Smi>>((*lengthB_454).value()), label_Bailout_909);
              }
              Goto(label_if_done_label_1069_1667);
            }
            if (label__False_915->is_used())
            {
              BIND(label__False_915);
              // ../../third_party/v8/builtins/array-sort.tq:881:14
              {
                // ../../third_party/v8/builtins/array-sort.tq:882:9
                MergeHigh(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*baseA_451).value()), implicit_cast<TNode<Smi>>((*lengthA_452).value()), implicit_cast<TNode<Smi>>((*baseB_453).value()), implicit_cast<TNode<Smi>>((*lengthB_454).value()), label_Bailout_909);
              }
              Goto(label_if_done_label_1069_1667);
            }
            BIND(label_if_done_label_1069_1667);
          }
          // ../../third_party/v8/builtins/array-sort.tq:885:7
          Return(implicit_cast<TNode<Smi>>(kSuccess()));
        }
      }
      if (label_Bailout_909->is_used())
      {
        BIND(label_Bailout_909);
        // ../../third_party/v8/builtins/array-sort.tq:887:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:888:7
          TNode<Smi> t2939 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t2939));
          Return(implicit_cast<TNode<Smi>>(t2939));
        }
      }
    }
  }
}

TF_BUILTIN(GallopLeft, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<Code> p_load = UncheckedCast<Code>(Parameter(Descriptor::kLoad));
  USE(p_load);
  TNode<Object> p_key = UncheckedCast<Object>(Parameter(Descriptor::kKey));
  USE(p_key);
  TNode<Smi> p_base = UncheckedCast<Smi>(Parameter(Descriptor::kBase));
  USE(p_base);
  TNode<Smi> p_length = UncheckedCast<Smi>(Parameter(Descriptor::kLength));
  USE(p_length);
  TNode<Smi> p_hint = UncheckedCast<Smi>(Parameter(Descriptor::kHint));
  USE(p_hint);
  TNode<Oddball> p_useTempArray = UncheckedCast<Oddball>(Parameter(Descriptor::kUseTempArray));
  USE(p_useTempArray);
  // ../../third_party/v8/builtins/array-sort.tq:911:70
  {
    // ../../third_party/v8/builtins/array-sort.tq:912:5
    // ../../third_party/v8/builtins/array-sort.tq:913:5
    // ../../third_party/v8/builtins/array-sort.tq:918:5
    auto t2940 = [=]() {
      TNode<FixedArray> t2942 = UncheckedCast<FixedArray>(GetTempArray(implicit_cast<TNode<FixedArray>>(p_sortState)));
      USE(implicit_cast<TNode<FixedArray>>(t2942));
      return implicit_cast<TNode<FixedArray>>(t2942);
    };
    auto t2941 = [=]() {
      TNode<HeapObject> t2943 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
      USE(implicit_cast<TNode<HeapObject>>(t2943));
      return implicit_cast<TNode<HeapObject>>(t2943);
    };
    TVARIABLE(HeapObject, t2944_1070_impl);
    auto t2944_1070 = &t2944_1070_impl;
    USE(t2944_1070);
    {
      Label label__True_916_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_916 = &label__True_916_impl;
      USE(label__True_916);
      Label label__False_917_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_917 = &label__False_917_impl;
      USE(label__False_917);
      Label label__done_1071_1668_impl(this, {t2944_1070}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_1071_1668 = &label__done_1071_1668_impl;
      USE(label__done_1071_1668);
      TNode<BoolT> t2945 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(True())));
      USE(implicit_cast<TNode<BoolT>>(t2945));
      Branch(implicit_cast<TNode<BoolT>>(t2945), label__True_916, label__False_917);
      BIND(label__True_916);
            *t2944_1070 = implicit_cast<TNode<HeapObject>>(t2940());
      Goto(label__done_1071_1668);
      BIND(label__False_917);
            *t2944_1070 = implicit_cast<TNode<HeapObject>>(t2941());
      Goto(label__done_1071_1668);
      BIND(label__done_1071_1668);
    }
    TVARIABLE(HeapObject, elements_456_impl);
    auto elements_456 = &elements_456_impl;
    USE(elements_456);
    *elements_456 = implicit_cast<TNode<HeapObject>>((*t2944_1070).value());
    // ../../third_party/v8/builtins/array-sort.tq:921:5
    int31_t t2946 = 0;
    TVARIABLE(Smi, lastOfs_457_impl);
    auto lastOfs_457 = &lastOfs_457_impl;
    USE(lastOfs_457);
    TNode<Smi> t2947 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2946)));
    *lastOfs_457 = implicit_cast<TNode<Smi>>(t2947);
    // ../../third_party/v8/builtins/array-sort.tq:922:5
    int31_t t2948 = 1;
    TVARIABLE(Smi, offset_458_impl);
    auto offset_458 = &offset_458_impl;
    USE(offset_458);
    TNode<Smi> t2949 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2948)));
    *offset_458 = implicit_cast<TNode<Smi>>(t2949);
    // ../../third_party/v8/builtins/array-sort.tq:924:5
    {
      Label label_try_done_1072_1669_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1072_1669 = &label_try_done_1072_1669_impl;
      USE(label_try_done_1072_1669);
      Label label_Bailout_918_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_918 = &label_Bailout_918_impl;
      USE(label_Bailout_918);
      Label label_try_begin_1073_1670_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1073_1670 = &label_try_begin_1073_1670_impl;
      USE(label_try_begin_1073_1670);
      Goto(label_try_begin_1073_1670);
      if (label_try_begin_1073_1670->is_used())
      {
        BIND(label_try_begin_1073_1670);
        // ../../third_party/v8/builtins/array-sort.tq:924:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:925:7
          TNode<Smi> t2950 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_hint)));
          USE(implicit_cast<TNode<Smi>>(t2950));
          TNode<Object> t2951 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_456).value()), implicit_cast<TNode<Smi>>(t2950), label_Bailout_918));
          USE(implicit_cast<TNode<Object>>(t2951));
          TNode<Object> baseHintElement_1074_impl;
          auto baseHintElement_1074 = &baseHintElement_1074_impl;
          USE(baseHintElement_1074);
          *baseHintElement_1074 = implicit_cast<TNode<Object>>(t2951);
          // ../../third_party/v8/builtins/array-sort.tq:928:7
          TNode<Number> t2952 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*baseHintElement_1074)), implicit_cast<TNode<Object>>(p_key), label_Bailout_918));
          USE(implicit_cast<TNode<Number>>(t2952));
          TVARIABLE(Number, order_459_impl);
          auto order_459 = &order_459_impl;
          USE(order_459);
          *order_459 = implicit_cast<TNode<Number>>(t2952);
          // ../../third_party/v8/builtins/array-sort.tq:931:7
          {
            Label label__True_919_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_919 = &label__True_919_impl;
            USE(label__True_919);
            Label label__False_920_impl(this, {elements_456}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_920 = &label__False_920_impl;
            USE(label__False_920);
            TNode<BoolT> t2953 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
            USE(implicit_cast<TNode<BoolT>>(t2953));
            Branch(implicit_cast<TNode<BoolT>>(t2953), label__True_919, label__False_920);
            if (label__True_919->is_used())
            {
              BIND(label__True_919);
              // ../../third_party/v8/builtins/array-sort.tq:931:34
              {
                // ../../third_party/v8/builtins/array-sort.tq:932:9
                TNode<HeapObject> t2954 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                USE(implicit_cast<TNode<HeapObject>>(t2954));
                *elements_456 = implicit_cast<TNode<HeapObject>>(t2954);
              }
              Goto(label__False_920);
            }
            BIND(label__False_920);
          }
          // ../../third_party/v8/builtins/array-sort.tq:935:7
          {
            Label label__True_921_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_921 = &label__True_921_impl;
            USE(label__True_921);
            Label label__False_922_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_922 = &label__False_922_impl;
            USE(label__False_922);
            Label label_if_done_label_1075_1671_impl(this, {elements_456, lastOfs_457, offset_458, order_459}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1075_1671 = &label_if_done_label_1075_1671_impl;
            USE(label_if_done_label_1075_1671);
            int31_t t2955 = 0;
            TNode<Number> t2956 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2955)));
            BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_459).value()), implicit_cast<TNode<Number>>(t2956), label__True_921, label__False_922);
            if (label__True_921->is_used())
            {
              BIND(label__True_921);
              // ../../third_party/v8/builtins/array-sort.tq:935:22
              {
                // ../../third_party/v8/builtins/array-sort.tq:940:9
                TNode<Smi> t2957 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(p_hint)));
                USE(implicit_cast<TNode<Smi>>(t2957));
                TVARIABLE(Smi, maxOfs_460_impl);
                auto maxOfs_460 = &maxOfs_460_impl;
                USE(maxOfs_460);
                *maxOfs_460 = implicit_cast<TNode<Smi>>(t2957);
                // ../../third_party/v8/builtins/array-sort.tq:941:9
                {
                  Label label__True_923_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_923 = &label__True_923_impl;
                  USE(label__True_923);
                  Label label__False_924_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_924 = &label__False_924_impl;
                  USE(label__False_924);
                  Label label_header_1076_1672_impl(this, {elements_456, lastOfs_457, offset_458, order_459}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1076_1672 = &label_header_1076_1672_impl;
                  USE(label_header_1076_1672);
                  Goto(label_header_1076_1672);
                  BIND(label_header_1076_1672);
                  TNode<BoolT> t2958 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>((*maxOfs_460).value())));
                  USE(implicit_cast<TNode<BoolT>>(t2958));
                  Branch(implicit_cast<TNode<BoolT>>(t2958), label__True_923, label__False_924);
                  if (label__True_923->is_used())
                  {
                    BIND(label__True_923);
                    // ../../third_party/v8/builtins/array-sort.tq:941:33
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:942:11
                      TNode<Smi> t2959 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_hint)));
                      USE(implicit_cast<TNode<Smi>>(t2959));
                      TNode<Smi> t2960 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t2959), implicit_cast<TNode<Smi>>((*offset_458).value())));
                      USE(implicit_cast<TNode<Smi>>(t2960));
                      TNode<Object> t2961 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_456).value()), implicit_cast<TNode<Smi>>(t2960), label_Bailout_918));
                      USE(implicit_cast<TNode<Object>>(t2961));
                      TNode<Object> offsetElement_1077_impl;
                      auto offsetElement_1077 = &offsetElement_1077_impl;
                      USE(offsetElement_1077);
                      *offsetElement_1077 = implicit_cast<TNode<Object>>(t2961);
                      // ../../third_party/v8/builtins/array-sort.tq:945:11
                      TNode<Number> t2962 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*offsetElement_1077)), implicit_cast<TNode<Object>>(p_key), label_Bailout_918));
                      USE(implicit_cast<TNode<Number>>(t2962));
                      *order_459 = implicit_cast<TNode<Number>>(t2962);
                      // ../../third_party/v8/builtins/array-sort.tq:947:11
                      {
                        Label label__True_925_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_925 = &label__True_925_impl;
                        USE(label__True_925);
                        Label label__False_926_impl(this, {elements_456}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_926 = &label__False_926_impl;
                        USE(label__False_926);
                        TNode<BoolT> t2963 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
                        USE(implicit_cast<TNode<BoolT>>(t2963));
                        Branch(implicit_cast<TNode<BoolT>>(t2963), label__True_925, label__False_926);
                        if (label__True_925->is_used())
                        {
                          BIND(label__True_925);
                          // ../../third_party/v8/builtins/array-sort.tq:947:38
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:948:13
                            TNode<HeapObject> t2964 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                            USE(implicit_cast<TNode<HeapObject>>(t2964));
                            *elements_456 = implicit_cast<TNode<HeapObject>>(t2964);
                          }
                          Goto(label__False_926);
                        }
                        BIND(label__False_926);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:952:11
                      {
                        Label label__True_927_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_927 = &label__True_927_impl;
                        USE(label__True_927);
                        Label label__False_928_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_928 = &label__False_928_impl;
                        USE(label__False_928);
                        int31_t t2965 = 0;
                        TNode<Number> t2966 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2965)));
                        BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*order_459).value()), implicit_cast<TNode<Number>>(t2966), label__True_927, label__False_928);
                        if (label__True_927->is_used())
                        {
                          BIND(label__True_927);
                          // ../../third_party/v8/builtins/array-sort.tq:952:27
                          Goto(label__False_924);
                        }
                        BIND(label__False_928);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:954:11
                      *lastOfs_457 = implicit_cast<TNode<Smi>>((*offset_458).value());
                      // ../../third_party/v8/builtins/array-sort.tq:955:11
                      int31_t t2967 = 1;
                      TNode<Smi> t2968 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<int31_t>(t2967)));
                      USE(implicit_cast<TNode<Smi>>(t2968));
                      int31_t t2969 = 1;
                      TNode<Smi> t2970 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2969)));
                      TNode<Smi> t2971 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t2968), implicit_cast<TNode<Smi>>(t2970)));
                      USE(implicit_cast<TNode<Smi>>(t2971));
                      *offset_458 = implicit_cast<TNode<Smi>>(t2971);
                      // ../../third_party/v8/builtins/array-sort.tq:958:11
                      {
                        Label label__True_929_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_929 = &label__True_929_impl;
                        USE(label__True_929);
                        Label label__False_930_impl(this, {offset_458}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_930 = &label__False_930_impl;
                        USE(label__False_930);
                        int31_t t2972 = 0;
                        TNode<Smi> t2973 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2972)));
                        TNode<BoolT> t2974 = UncheckedCast<BoolT>(SmiLessThanOrEqual(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>(t2973)));
                        USE(implicit_cast<TNode<BoolT>>(t2974));
                        Branch(implicit_cast<TNode<BoolT>>(t2974), label__True_929, label__False_930);
                        if (label__True_929->is_used())
                        {
                          BIND(label__True_929);
                          // ../../third_party/v8/builtins/array-sort.tq:958:28
                          *offset_458 = implicit_cast<TNode<Smi>>((*maxOfs_460).value());
                          Goto(label__False_930);
                        }
                        BIND(label__False_930);
                      }
                    }
                    Goto(label_header_1076_1672);
                  }
                  BIND(label__False_924);
                }
                // ../../third_party/v8/builtins/array-sort.tq:961:9
                {
                  Label label__True_931_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_931 = &label__True_931_impl;
                  USE(label__True_931);
                  Label label__False_932_impl(this, {offset_458}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_932 = &label__False_932_impl;
                  USE(label__False_932);
                  TNode<BoolT> t2975 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>((*maxOfs_460).value())));
                  USE(implicit_cast<TNode<BoolT>>(t2975));
                  Branch(implicit_cast<TNode<BoolT>>(t2975), label__True_931, label__False_932);
                  if (label__True_931->is_used())
                  {
                    BIND(label__True_931);
                    // ../../third_party/v8/builtins/array-sort.tq:961:30
                    *offset_458 = implicit_cast<TNode<Smi>>((*maxOfs_460).value());
                    Goto(label__False_932);
                  }
                  BIND(label__False_932);
                }
                // ../../third_party/v8/builtins/array-sort.tq:964:9
                TNode<Smi> t2976 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lastOfs_457).value()), implicit_cast<TNode<Smi>>(p_hint)));
                USE(implicit_cast<TNode<Smi>>(t2976));
                *lastOfs_457 = implicit_cast<TNode<Smi>>(t2976);
                // ../../third_party/v8/builtins/array-sort.tq:965:9
                TNode<Smi> t2977 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>(p_hint)));
                USE(implicit_cast<TNode<Smi>>(t2977));
                *offset_458 = implicit_cast<TNode<Smi>>(t2977);
              }
              Goto(label_if_done_label_1075_1671);
            }
            if (label__False_922->is_used())
            {
              BIND(label__False_922);
              // ../../third_party/v8/builtins/array-sort.tq:966:14
              {
                // ../../third_party/v8/builtins/array-sort.tq:969:9
                // ../../third_party/v8/builtins/array-sort.tq:972:9
                int31_t t2978 = 1;
                TNode<Smi> t2979 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2978)));
                TNode<Smi> t2980 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Smi>>(t2979)));
                USE(implicit_cast<TNode<Smi>>(t2980));
                TVARIABLE(Smi, maxOfs_461_impl);
                auto maxOfs_461 = &maxOfs_461_impl;
                USE(maxOfs_461);
                *maxOfs_461 = implicit_cast<TNode<Smi>>(t2980);
                // ../../third_party/v8/builtins/array-sort.tq:973:9
                {
                  Label label__True_933_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_933 = &label__True_933_impl;
                  USE(label__True_933);
                  Label label__False_934_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_934 = &label__False_934_impl;
                  USE(label__False_934);
                  Label label_header_1078_1673_impl(this, {elements_456, lastOfs_457, offset_458, order_459}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1078_1673 = &label_header_1078_1673_impl;
                  USE(label_header_1078_1673);
                  Goto(label_header_1078_1673);
                  BIND(label_header_1078_1673);
                  TNode<BoolT> t2981 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>((*maxOfs_461).value())));
                  USE(implicit_cast<TNode<BoolT>>(t2981));
                  Branch(implicit_cast<TNode<BoolT>>(t2981), label__True_933, label__False_934);
                  if (label__True_933->is_used())
                  {
                    BIND(label__True_933);
                    // ../../third_party/v8/builtins/array-sort.tq:973:33
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:974:11
                      TNode<Smi> t2982 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_hint)));
                      USE(implicit_cast<TNode<Smi>>(t2982));
                      TNode<Smi> t2983 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t2982), implicit_cast<TNode<Smi>>((*offset_458).value())));
                      USE(implicit_cast<TNode<Smi>>(t2983));
                      TNode<Object> t2984 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_456).value()), implicit_cast<TNode<Smi>>(t2983), label_Bailout_918));
                      USE(implicit_cast<TNode<Object>>(t2984));
                      TNode<Object> offsetElement_1079_impl;
                      auto offsetElement_1079 = &offsetElement_1079_impl;
                      USE(offsetElement_1079);
                      *offsetElement_1079 = implicit_cast<TNode<Object>>(t2984);
                      // ../../third_party/v8/builtins/array-sort.tq:977:11
                      TNode<Number> t2985 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*offsetElement_1079)), implicit_cast<TNode<Object>>(p_key), label_Bailout_918));
                      USE(implicit_cast<TNode<Number>>(t2985));
                      *order_459 = implicit_cast<TNode<Number>>(t2985);
                      // ../../third_party/v8/builtins/array-sort.tq:979:11
                      {
                        Label label__True_935_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_935 = &label__True_935_impl;
                        USE(label__True_935);
                        Label label__False_936_impl(this, {elements_456}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_936 = &label__False_936_impl;
                        USE(label__False_936);
                        TNode<BoolT> t2986 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
                        USE(implicit_cast<TNode<BoolT>>(t2986));
                        Branch(implicit_cast<TNode<BoolT>>(t2986), label__True_935, label__False_936);
                        if (label__True_935->is_used())
                        {
                          BIND(label__True_935);
                          // ../../third_party/v8/builtins/array-sort.tq:979:38
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:980:13
                            TNode<HeapObject> t2987 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                            USE(implicit_cast<TNode<HeapObject>>(t2987));
                            *elements_456 = implicit_cast<TNode<HeapObject>>(t2987);
                          }
                          Goto(label__False_936);
                        }
                        BIND(label__False_936);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:983:11
                      {
                        Label label__True_937_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_937 = &label__True_937_impl;
                        USE(label__True_937);
                        Label label__False_938_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_938 = &label__False_938_impl;
                        USE(label__False_938);
                        int31_t t2988 = 0;
                        TNode<Number> t2989 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t2988)));
                        BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_459).value()), implicit_cast<TNode<Number>>(t2989), label__True_937, label__False_938);
                        if (label__True_937->is_used())
                        {
                          BIND(label__True_937);
                          // ../../third_party/v8/builtins/array-sort.tq:983:26
                          Goto(label__False_934);
                        }
                        BIND(label__False_938);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:985:11
                      *lastOfs_457 = implicit_cast<TNode<Smi>>((*offset_458).value());
                      // ../../third_party/v8/builtins/array-sort.tq:986:11
                      int31_t t2990 = 1;
                      TNode<Smi> t2991 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<int31_t>(t2990)));
                      USE(implicit_cast<TNode<Smi>>(t2991));
                      int31_t t2992 = 1;
                      TNode<Smi> t2993 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2992)));
                      TNode<Smi> t2994 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t2991), implicit_cast<TNode<Smi>>(t2993)));
                      USE(implicit_cast<TNode<Smi>>(t2994));
                      *offset_458 = implicit_cast<TNode<Smi>>(t2994);
                      // ../../third_party/v8/builtins/array-sort.tq:989:11
                      {
                        Label label__True_939_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_939 = &label__True_939_impl;
                        USE(label__True_939);
                        Label label__False_940_impl(this, {offset_458}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_940 = &label__False_940_impl;
                        USE(label__False_940);
                        int31_t t2995 = 0;
                        TNode<Smi> t2996 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t2995)));
                        TNode<BoolT> t2997 = UncheckedCast<BoolT>(SmiLessThanOrEqual(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>(t2996)));
                        USE(implicit_cast<TNode<BoolT>>(t2997));
                        Branch(implicit_cast<TNode<BoolT>>(t2997), label__True_939, label__False_940);
                        if (label__True_939->is_used())
                        {
                          BIND(label__True_939);
                          // ../../third_party/v8/builtins/array-sort.tq:989:28
                          *offset_458 = implicit_cast<TNode<Smi>>((*maxOfs_461).value());
                          Goto(label__False_940);
                        }
                        BIND(label__False_940);
                      }
                    }
                    Goto(label_header_1078_1673);
                  }
                  BIND(label__False_934);
                }
                // ../../third_party/v8/builtins/array-sort.tq:992:9
                {
                  Label label__True_941_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_941 = &label__True_941_impl;
                  USE(label__True_941);
                  Label label__False_942_impl(this, {offset_458}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_942 = &label__False_942_impl;
                  USE(label__False_942);
                  TNode<BoolT> t2998 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>((*maxOfs_461).value())));
                  USE(implicit_cast<TNode<BoolT>>(t2998));
                  Branch(implicit_cast<TNode<BoolT>>(t2998), label__True_941, label__False_942);
                  if (label__True_941->is_used())
                  {
                    BIND(label__True_941);
                    // ../../third_party/v8/builtins/array-sort.tq:992:30
                    *offset_458 = implicit_cast<TNode<Smi>>((*maxOfs_461).value());
                    Goto(label__False_942);
                  }
                  BIND(label__False_942);
                }
                // ../../third_party/v8/builtins/array-sort.tq:995:9
                TNode<Smi> tmp_1080_impl;
                auto tmp_1080 = &tmp_1080_impl;
                USE(tmp_1080);
                *tmp_1080 = implicit_cast<TNode<Smi>>((*lastOfs_457).value());
                // ../../third_party/v8/builtins/array-sort.tq:996:9
                TNode<Smi> t2999 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Smi>>((*offset_458).value())));
                USE(implicit_cast<TNode<Smi>>(t2999));
                *lastOfs_457 = implicit_cast<TNode<Smi>>(t2999);
                // ../../third_party/v8/builtins/array-sort.tq:997:9
                TNode<Smi> t3000 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Smi>>((*tmp_1080))));
                USE(implicit_cast<TNode<Smi>>(t3000));
                *offset_458 = implicit_cast<TNode<Smi>>(t3000);
              }
              Goto(label_if_done_label_1075_1671);
            }
            BIND(label_if_done_label_1075_1671);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1000:7
          // ../../third_party/v8/builtins/array-sort.tq:1006:7
          TNode<Smi> t3001 = implicit_cast<TNode<Smi>>((*lastOfs_457).value());
          USE(t3001);
          TNode<Smi> t3002 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3003 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lastOfs_457).value()), implicit_cast<TNode<Smi>>(t3002)));
          *lastOfs_457 = implicit_cast<TNode<Smi>>(t3003);
          // ../../third_party/v8/builtins/array-sort.tq:1007:7
          {
            Label label__True_943_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_943 = &label__True_943_impl;
            USE(label__True_943);
            Label label__False_944_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_944 = &label__False_944_impl;
            USE(label__False_944);
            Label label_header_1081_1674_impl(this, {elements_456, lastOfs_457, offset_458, order_459}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1081_1674 = &label_header_1081_1674_impl;
            USE(label_header_1081_1674);
            Goto(label_header_1081_1674);
            BIND(label_header_1081_1674);
            TNode<BoolT> t3004 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*lastOfs_457).value()), implicit_cast<TNode<Smi>>((*offset_458).value())));
            USE(implicit_cast<TNode<BoolT>>(t3004));
            Branch(implicit_cast<TNode<BoolT>>(t3004), label__True_943, label__False_944);
            if (label__True_943->is_used())
            {
              BIND(label__True_943);
              // ../../third_party/v8/builtins/array-sort.tq:1007:32
              {
                // ../../third_party/v8/builtins/array-sort.tq:1008:9
                TNode<Smi> t3005 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*offset_458).value()), implicit_cast<TNode<Smi>>((*lastOfs_457).value())));
                USE(implicit_cast<TNode<Smi>>(t3005));
                int31_t t3006 = 1;
                TNode<Smi> t3007 = UncheckedCast<Smi>(SmiShr(implicit_cast<TNode<Smi>>(t3005), implicit_cast<int31_t>(t3006)));
                USE(implicit_cast<TNode<Smi>>(t3007));
                TNode<Smi> t3008 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lastOfs_457).value()), implicit_cast<TNode<Smi>>(t3007)));
                USE(implicit_cast<TNode<Smi>>(t3008));
                TNode<Smi> m_1082_impl;
                auto m_1082 = &m_1082_impl;
                USE(m_1082);
                *m_1082 = implicit_cast<TNode<Smi>>(t3008);
                // ../../third_party/v8/builtins/array-sort.tq:1010:9
                TNode<Smi> t3009 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>((*m_1082))));
                USE(implicit_cast<TNode<Smi>>(t3009));
                TNode<Object> t3010 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_456).value()), implicit_cast<TNode<Smi>>(t3009), label_Bailout_918));
                USE(implicit_cast<TNode<Object>>(t3010));
                TNode<Object> baseMElement_1083_impl;
                auto baseMElement_1083 = &baseMElement_1083_impl;
                USE(baseMElement_1083);
                *baseMElement_1083 = implicit_cast<TNode<Object>>(t3010);
                // ../../third_party/v8/builtins/array-sort.tq:1013:9
                TNode<Number> t3011 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*baseMElement_1083)), implicit_cast<TNode<Object>>(p_key), label_Bailout_918));
                USE(implicit_cast<TNode<Number>>(t3011));
                *order_459 = implicit_cast<TNode<Number>>(t3011);
                // ../../third_party/v8/builtins/array-sort.tq:1015:9
                {
                  Label label__True_945_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_945 = &label__True_945_impl;
                  USE(label__True_945);
                  Label label__False_946_impl(this, {elements_456}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_946 = &label__False_946_impl;
                  USE(label__False_946);
                  TNode<BoolT> t3012 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
                  USE(implicit_cast<TNode<BoolT>>(t3012));
                  Branch(implicit_cast<TNode<BoolT>>(t3012), label__True_945, label__False_946);
                  if (label__True_945->is_used())
                  {
                    BIND(label__True_945);
                    // ../../third_party/v8/builtins/array-sort.tq:1015:36
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1016:11
                      TNode<HeapObject> t3013 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                      USE(implicit_cast<TNode<HeapObject>>(t3013));
                      *elements_456 = implicit_cast<TNode<HeapObject>>(t3013);
                    }
                    Goto(label__False_946);
                  }
                  BIND(label__False_946);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1019:9
                {
                  Label label__True_947_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_947 = &label__True_947_impl;
                  USE(label__True_947);
                  Label label__False_948_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_948 = &label__False_948_impl;
                  USE(label__False_948);
                  Label label_if_done_label_1084_1675_impl(this, {lastOfs_457, offset_458}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_if_done_label_1084_1675 = &label_if_done_label_1084_1675_impl;
                  USE(label_if_done_label_1084_1675);
                  int31_t t3014 = 0;
                  TNode<Number> t3015 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3014)));
                  BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_459).value()), implicit_cast<TNode<Number>>(t3015), label__True_947, label__False_948);
                  if (label__True_947->is_used())
                  {
                    BIND(label__True_947);
                    // ../../third_party/v8/builtins/array-sort.tq:1019:24
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1020:11
                      int31_t t3016 = 1;
                      TNode<Smi> t3017 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3016)));
                      TNode<Smi> t3018 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*m_1082)), implicit_cast<TNode<Smi>>(t3017)));
                      USE(implicit_cast<TNode<Smi>>(t3018));
                      *lastOfs_457 = implicit_cast<TNode<Smi>>(t3018);
                    }
                    Goto(label_if_done_label_1084_1675);
                  }
                  if (label__False_948->is_used())
                  {
                    BIND(label__False_948);
                    // ../../third_party/v8/builtins/array-sort.tq:1021:16
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1022:11
                      *offset_458 = implicit_cast<TNode<Smi>>((*m_1082));
                    }
                    Goto(label_if_done_label_1084_1675);
                  }
                  BIND(label_if_done_label_1084_1675);
                }
              }
              Goto(label_header_1081_1674);
            }
            BIND(label__False_944);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1026:7
          // ../../third_party/v8/builtins/array-sort.tq:1027:7
          // ../../third_party/v8/builtins/array-sort.tq:1028:7
          Return(implicit_cast<TNode<Smi>>((*offset_458).value()));
        }
      }
      if (label_Bailout_918->is_used())
      {
        BIND(label_Bailout_918);
        // ../../third_party/v8/builtins/array-sort.tq:1030:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:1031:7
          TNode<Smi> t3019 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t3019));
          Return(implicit_cast<TNode<Smi>>(t3019));
        }
      }
    }
  }
}

TF_BUILTIN(GallopRight, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<Code> p_load = UncheckedCast<Code>(Parameter(Descriptor::kLoad));
  USE(p_load);
  TNode<Object> p_key = UncheckedCast<Object>(Parameter(Descriptor::kKey));
  USE(p_key);
  TNode<Smi> p_base = UncheckedCast<Smi>(Parameter(Descriptor::kBase));
  USE(p_base);
  TNode<Smi> p_length = UncheckedCast<Smi>(Parameter(Descriptor::kLength));
  USE(p_length);
  TNode<Smi> p_hint = UncheckedCast<Smi>(Parameter(Descriptor::kHint));
  USE(p_hint);
  TNode<Oddball> p_useTempArray = UncheckedCast<Oddball>(Parameter(Descriptor::kUseTempArray));
  USE(p_useTempArray);
  // ../../third_party/v8/builtins/array-sort.tq:1046:70
  {
    // ../../third_party/v8/builtins/array-sort.tq:1047:5
    // ../../third_party/v8/builtins/array-sort.tq:1048:5
    // ../../third_party/v8/builtins/array-sort.tq:1053:5
    auto t3020 = [=]() {
      TNode<FixedArray> t3022 = UncheckedCast<FixedArray>(GetTempArray(implicit_cast<TNode<FixedArray>>(p_sortState)));
      USE(implicit_cast<TNode<FixedArray>>(t3022));
      return implicit_cast<TNode<FixedArray>>(t3022);
    };
    auto t3021 = [=]() {
      TNode<HeapObject> t3023 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
      USE(implicit_cast<TNode<HeapObject>>(t3023));
      return implicit_cast<TNode<HeapObject>>(t3023);
    };
    TVARIABLE(HeapObject, t3024_1085_impl);
    auto t3024_1085 = &t3024_1085_impl;
    USE(t3024_1085);
    {
      Label label__True_949_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_949 = &label__True_949_impl;
      USE(label__True_949);
      Label label__False_950_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_950 = &label__False_950_impl;
      USE(label__False_950);
      Label label__done_1086_1676_impl(this, {t3024_1085}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_1086_1676 = &label__done_1086_1676_impl;
      USE(label__done_1086_1676);
      TNode<BoolT> t3025 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(True())));
      USE(implicit_cast<TNode<BoolT>>(t3025));
      Branch(implicit_cast<TNode<BoolT>>(t3025), label__True_949, label__False_950);
      BIND(label__True_949);
            *t3024_1085 = implicit_cast<TNode<HeapObject>>(t3020());
      Goto(label__done_1086_1676);
      BIND(label__False_950);
            *t3024_1085 = implicit_cast<TNode<HeapObject>>(t3021());
      Goto(label__done_1086_1676);
      BIND(label__done_1086_1676);
    }
    TVARIABLE(HeapObject, elements_462_impl);
    auto elements_462 = &elements_462_impl;
    USE(elements_462);
    *elements_462 = implicit_cast<TNode<HeapObject>>((*t3024_1085).value());
    // ../../third_party/v8/builtins/array-sort.tq:1056:5
    int31_t t3026 = 0;
    TVARIABLE(Smi, lastOfs_463_impl);
    auto lastOfs_463 = &lastOfs_463_impl;
    USE(lastOfs_463);
    TNode<Smi> t3027 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3026)));
    *lastOfs_463 = implicit_cast<TNode<Smi>>(t3027);
    // ../../third_party/v8/builtins/array-sort.tq:1057:5
    int31_t t3028 = 1;
    TVARIABLE(Smi, offset_464_impl);
    auto offset_464 = &offset_464_impl;
    USE(offset_464);
    TNode<Smi> t3029 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3028)));
    *offset_464 = implicit_cast<TNode<Smi>>(t3029);
    // ../../third_party/v8/builtins/array-sort.tq:1059:5
    {
      Label label_try_done_1087_1677_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1087_1677 = &label_try_done_1087_1677_impl;
      USE(label_try_done_1087_1677);
      Label label_Bailout_951_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Bailout_951 = &label_Bailout_951_impl;
      USE(label_Bailout_951);
      Label label_try_begin_1088_1678_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1088_1678 = &label_try_begin_1088_1678_impl;
      USE(label_try_begin_1088_1678);
      Goto(label_try_begin_1088_1678);
      if (label_try_begin_1088_1678->is_used())
      {
        BIND(label_try_begin_1088_1678);
        // ../../third_party/v8/builtins/array-sort.tq:1059:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:1060:7
          TNode<Smi> t3030 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_hint)));
          USE(implicit_cast<TNode<Smi>>(t3030));
          TNode<Object> t3031 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_462).value()), implicit_cast<TNode<Smi>>(t3030), label_Bailout_951));
          USE(implicit_cast<TNode<Object>>(t3031));
          TNode<Object> baseHintElement_1089_impl;
          auto baseHintElement_1089 = &baseHintElement_1089_impl;
          USE(baseHintElement_1089);
          *baseHintElement_1089 = implicit_cast<TNode<Object>>(t3031);
          // ../../third_party/v8/builtins/array-sort.tq:1063:7
          TNode<Number> t3032 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>(p_key), implicit_cast<TNode<Object>>((*baseHintElement_1089)), label_Bailout_951));
          USE(implicit_cast<TNode<Number>>(t3032));
          TVARIABLE(Number, order_465_impl);
          auto order_465 = &order_465_impl;
          USE(order_465);
          *order_465 = implicit_cast<TNode<Number>>(t3032);
          // ../../third_party/v8/builtins/array-sort.tq:1066:7
          {
            Label label__True_952_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_952 = &label__True_952_impl;
            USE(label__True_952);
            Label label__False_953_impl(this, {elements_462}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_953 = &label__False_953_impl;
            USE(label__False_953);
            TNode<BoolT> t3033 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
            USE(implicit_cast<TNode<BoolT>>(t3033));
            Branch(implicit_cast<TNode<BoolT>>(t3033), label__True_952, label__False_953);
            if (label__True_952->is_used())
            {
              BIND(label__True_952);
              // ../../third_party/v8/builtins/array-sort.tq:1066:34
              {
                // ../../third_party/v8/builtins/array-sort.tq:1067:9
                TNode<HeapObject> t3034 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                USE(implicit_cast<TNode<HeapObject>>(t3034));
                *elements_462 = implicit_cast<TNode<HeapObject>>(t3034);
              }
              Goto(label__False_953);
            }
            BIND(label__False_953);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1070:7
          {
            Label label__True_954_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_954 = &label__True_954_impl;
            USE(label__True_954);
            Label label__False_955_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_955 = &label__False_955_impl;
            USE(label__False_955);
            Label label_if_done_label_1090_1679_impl(this, {elements_462, lastOfs_463, offset_464, order_465}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1090_1679 = &label_if_done_label_1090_1679_impl;
            USE(label_if_done_label_1090_1679);
            int31_t t3035 = 0;
            TNode<Number> t3036 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3035)));
            BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_465).value()), implicit_cast<TNode<Number>>(t3036), label__True_954, label__False_955);
            if (label__True_954->is_used())
            {
              BIND(label__True_954);
              // ../../third_party/v8/builtins/array-sort.tq:1070:22
              {
                // ../../third_party/v8/builtins/array-sort.tq:1075:9
                int31_t t3037 = 1;
                TNode<Smi> t3038 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3037)));
                TNode<Smi> t3039 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Smi>>(t3038)));
                USE(implicit_cast<TNode<Smi>>(t3039));
                TVARIABLE(Smi, maxOfs_466_impl);
                auto maxOfs_466 = &maxOfs_466_impl;
                USE(maxOfs_466);
                *maxOfs_466 = implicit_cast<TNode<Smi>>(t3039);
                // ../../third_party/v8/builtins/array-sort.tq:1076:9
                {
                  Label label__True_956_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_956 = &label__True_956_impl;
                  USE(label__True_956);
                  Label label__False_957_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_957 = &label__False_957_impl;
                  USE(label__False_957);
                  Label label_header_1091_1680_impl(this, {elements_462, lastOfs_463, offset_464, order_465}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1091_1680 = &label_header_1091_1680_impl;
                  USE(label_header_1091_1680);
                  Goto(label_header_1091_1680);
                  BIND(label_header_1091_1680);
                  TNode<BoolT> t3040 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>((*maxOfs_466).value())));
                  USE(implicit_cast<TNode<BoolT>>(t3040));
                  Branch(implicit_cast<TNode<BoolT>>(t3040), label__True_956, label__False_957);
                  if (label__True_956->is_used())
                  {
                    BIND(label__True_956);
                    // ../../third_party/v8/builtins/array-sort.tq:1076:33
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1077:11
                      TNode<Smi> t3041 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_hint)));
                      USE(implicit_cast<TNode<Smi>>(t3041));
                      TNode<Smi> t3042 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3041), implicit_cast<TNode<Smi>>((*offset_464).value())));
                      USE(implicit_cast<TNode<Smi>>(t3042));
                      TNode<Object> t3043 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_462).value()), implicit_cast<TNode<Smi>>(t3042), label_Bailout_951));
                      USE(implicit_cast<TNode<Object>>(t3043));
                      TNode<Object> offsetElement_1092_impl;
                      auto offsetElement_1092 = &offsetElement_1092_impl;
                      USE(offsetElement_1092);
                      *offsetElement_1092 = implicit_cast<TNode<Object>>(t3043);
                      // ../../third_party/v8/builtins/array-sort.tq:1080:11
                      TNode<Number> t3044 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>(p_key), implicit_cast<TNode<Object>>((*offsetElement_1092)), label_Bailout_951));
                      USE(implicit_cast<TNode<Number>>(t3044));
                      *order_465 = implicit_cast<TNode<Number>>(t3044);
                      // ../../third_party/v8/builtins/array-sort.tq:1082:11
                      {
                        Label label__True_958_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_958 = &label__True_958_impl;
                        USE(label__True_958);
                        Label label__False_959_impl(this, {elements_462}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_959 = &label__False_959_impl;
                        USE(label__False_959);
                        TNode<BoolT> t3045 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
                        USE(implicit_cast<TNode<BoolT>>(t3045));
                        Branch(implicit_cast<TNode<BoolT>>(t3045), label__True_958, label__False_959);
                        if (label__True_958->is_used())
                        {
                          BIND(label__True_958);
                          // ../../third_party/v8/builtins/array-sort.tq:1082:38
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1083:13
                            TNode<HeapObject> t3046 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                            USE(implicit_cast<TNode<HeapObject>>(t3046));
                            *elements_462 = implicit_cast<TNode<HeapObject>>(t3046);
                          }
                          Goto(label__False_959);
                        }
                        BIND(label__False_959);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1086:11
                      {
                        Label label__True_960_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_960 = &label__True_960_impl;
                        USE(label__True_960);
                        Label label__False_961_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_961 = &label__False_961_impl;
                        USE(label__False_961);
                        int31_t t3047 = 0;
                        TNode<Number> t3048 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3047)));
                        BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*order_465).value()), implicit_cast<TNode<Number>>(t3048), label__True_960, label__False_961);
                        if (label__True_960->is_used())
                        {
                          BIND(label__True_960);
                          // ../../third_party/v8/builtins/array-sort.tq:1086:27
                          Goto(label__False_957);
                        }
                        BIND(label__False_961);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1088:11
                      *lastOfs_463 = implicit_cast<TNode<Smi>>((*offset_464).value());
                      // ../../third_party/v8/builtins/array-sort.tq:1089:11
                      int31_t t3049 = 1;
                      TNode<Smi> t3050 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<int31_t>(t3049)));
                      USE(implicit_cast<TNode<Smi>>(t3050));
                      int31_t t3051 = 1;
                      TNode<Smi> t3052 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3051)));
                      TNode<Smi> t3053 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t3050), implicit_cast<TNode<Smi>>(t3052)));
                      USE(implicit_cast<TNode<Smi>>(t3053));
                      *offset_464 = implicit_cast<TNode<Smi>>(t3053);
                      // ../../third_party/v8/builtins/array-sort.tq:1092:11
                      {
                        Label label__True_962_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_962 = &label__True_962_impl;
                        USE(label__True_962);
                        Label label__False_963_impl(this, {offset_464}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_963 = &label__False_963_impl;
                        USE(label__False_963);
                        int31_t t3054 = 0;
                        TNode<Smi> t3055 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3054)));
                        TNode<BoolT> t3056 = UncheckedCast<BoolT>(SmiLessThanOrEqual(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>(t3055)));
                        USE(implicit_cast<TNode<BoolT>>(t3056));
                        Branch(implicit_cast<TNode<BoolT>>(t3056), label__True_962, label__False_963);
                        if (label__True_962->is_used())
                        {
                          BIND(label__True_962);
                          // ../../third_party/v8/builtins/array-sort.tq:1092:28
                          *offset_464 = implicit_cast<TNode<Smi>>((*maxOfs_466).value());
                          Goto(label__False_963);
                        }
                        BIND(label__False_963);
                      }
                    }
                    Goto(label_header_1091_1680);
                  }
                  BIND(label__False_957);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1095:9
                {
                  Label label__True_964_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_964 = &label__True_964_impl;
                  USE(label__True_964);
                  Label label__False_965_impl(this, {offset_464}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_965 = &label__False_965_impl;
                  USE(label__False_965);
                  TNode<BoolT> t3057 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>((*maxOfs_466).value())));
                  USE(implicit_cast<TNode<BoolT>>(t3057));
                  Branch(implicit_cast<TNode<BoolT>>(t3057), label__True_964, label__False_965);
                  if (label__True_964->is_used())
                  {
                    BIND(label__True_964);
                    // ../../third_party/v8/builtins/array-sort.tq:1095:30
                    *offset_464 = implicit_cast<TNode<Smi>>((*maxOfs_466).value());
                    Goto(label__False_965);
                  }
                  BIND(label__False_965);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1098:9
                TNode<Smi> tmp_1093_impl;
                auto tmp_1093 = &tmp_1093_impl;
                USE(tmp_1093);
                *tmp_1093 = implicit_cast<TNode<Smi>>((*lastOfs_463).value());
                // ../../third_party/v8/builtins/array-sort.tq:1099:9
                TNode<Smi> t3058 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Smi>>((*offset_464).value())));
                USE(implicit_cast<TNode<Smi>>(t3058));
                *lastOfs_463 = implicit_cast<TNode<Smi>>(t3058);
                // ../../third_party/v8/builtins/array-sort.tq:1100:9
                TNode<Smi> t3059 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_hint), implicit_cast<TNode<Smi>>((*tmp_1093))));
                USE(implicit_cast<TNode<Smi>>(t3059));
                *offset_464 = implicit_cast<TNode<Smi>>(t3059);
              }
              Goto(label_if_done_label_1090_1679);
            }
            if (label__False_955->is_used())
            {
              BIND(label__False_955);
              // ../../third_party/v8/builtins/array-sort.tq:1101:14
              {
                // ../../third_party/v8/builtins/array-sort.tq:1106:9
                TNode<Smi> t3060 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(p_hint)));
                USE(implicit_cast<TNode<Smi>>(t3060));
                TVARIABLE(Smi, maxOfs_467_impl);
                auto maxOfs_467 = &maxOfs_467_impl;
                USE(maxOfs_467);
                *maxOfs_467 = implicit_cast<TNode<Smi>>(t3060);
                // ../../third_party/v8/builtins/array-sort.tq:1107:9
                {
                  Label label__True_966_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_966 = &label__True_966_impl;
                  USE(label__True_966);
                  Label label__False_967_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_967 = &label__False_967_impl;
                  USE(label__False_967);
                  Label label_header_1094_1681_impl(this, {elements_462, lastOfs_463, offset_464, order_465}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1094_1681 = &label_header_1094_1681_impl;
                  USE(label_header_1094_1681);
                  Goto(label_header_1094_1681);
                  BIND(label_header_1094_1681);
                  TNode<BoolT> t3061 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>((*maxOfs_467).value())));
                  USE(implicit_cast<TNode<BoolT>>(t3061));
                  Branch(implicit_cast<TNode<BoolT>>(t3061), label__True_966, label__False_967);
                  if (label__True_966->is_used())
                  {
                    BIND(label__True_966);
                    // ../../third_party/v8/builtins/array-sort.tq:1107:33
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1108:11
                      TNode<Smi> t3062 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>(p_hint)));
                      USE(implicit_cast<TNode<Smi>>(t3062));
                      TNode<Smi> t3063 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t3062), implicit_cast<TNode<Smi>>((*offset_464).value())));
                      USE(implicit_cast<TNode<Smi>>(t3063));
                      TNode<Object> t3064 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_462).value()), implicit_cast<TNode<Smi>>(t3063), label_Bailout_951));
                      USE(implicit_cast<TNode<Object>>(t3064));
                      TNode<Object> offsetElement_1095_impl;
                      auto offsetElement_1095 = &offsetElement_1095_impl;
                      USE(offsetElement_1095);
                      *offsetElement_1095 = implicit_cast<TNode<Object>>(t3064);
                      // ../../third_party/v8/builtins/array-sort.tq:1111:11
                      TNode<Number> t3065 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>(p_key), implicit_cast<TNode<Object>>((*offsetElement_1095)), label_Bailout_951));
                      USE(implicit_cast<TNode<Number>>(t3065));
                      *order_465 = implicit_cast<TNode<Number>>(t3065);
                      // ../../third_party/v8/builtins/array-sort.tq:1113:11
                      {
                        Label label__True_968_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_968 = &label__True_968_impl;
                        USE(label__True_968);
                        Label label__False_969_impl(this, {elements_462}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_969 = &label__False_969_impl;
                        USE(label__False_969);
                        TNode<BoolT> t3066 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
                        USE(implicit_cast<TNode<BoolT>>(t3066));
                        Branch(implicit_cast<TNode<BoolT>>(t3066), label__True_968, label__False_969);
                        if (label__True_968->is_used())
                        {
                          BIND(label__True_968);
                          // ../../third_party/v8/builtins/array-sort.tq:1113:38
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1114:13
                            TNode<HeapObject> t3067 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                            USE(implicit_cast<TNode<HeapObject>>(t3067));
                            *elements_462 = implicit_cast<TNode<HeapObject>>(t3067);
                          }
                          Goto(label__False_969);
                        }
                        BIND(label__False_969);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1118:11
                      {
                        Label label__True_970_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_970 = &label__True_970_impl;
                        USE(label__True_970);
                        Label label__False_971_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_971 = &label__False_971_impl;
                        USE(label__False_971);
                        int31_t t3068 = 0;
                        TNode<Number> t3069 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3068)));
                        BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_465).value()), implicit_cast<TNode<Number>>(t3069), label__True_970, label__False_971);
                        if (label__True_970->is_used())
                        {
                          BIND(label__True_970);
                          // ../../third_party/v8/builtins/array-sort.tq:1118:26
                          Goto(label__False_967);
                        }
                        BIND(label__False_971);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1120:11
                      *lastOfs_463 = implicit_cast<TNode<Smi>>((*offset_464).value());
                      // ../../third_party/v8/builtins/array-sort.tq:1121:11
                      int31_t t3070 = 1;
                      TNode<Smi> t3071 = UncheckedCast<Smi>(SmiShl(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<int31_t>(t3070)));
                      USE(implicit_cast<TNode<Smi>>(t3071));
                      int31_t t3072 = 1;
                      TNode<Smi> t3073 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3072)));
                      TNode<Smi> t3074 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(t3071), implicit_cast<TNode<Smi>>(t3073)));
                      USE(implicit_cast<TNode<Smi>>(t3074));
                      *offset_464 = implicit_cast<TNode<Smi>>(t3074);
                      // ../../third_party/v8/builtins/array-sort.tq:1124:11
                      {
                        Label label__True_972_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_972 = &label__True_972_impl;
                        USE(label__True_972);
                        Label label__False_973_impl(this, {offset_464}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_973 = &label__False_973_impl;
                        USE(label__False_973);
                        int31_t t3075 = 0;
                        TNode<Smi> t3076 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3075)));
                        TNode<BoolT> t3077 = UncheckedCast<BoolT>(SmiLessThanOrEqual(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>(t3076)));
                        USE(implicit_cast<TNode<BoolT>>(t3077));
                        Branch(implicit_cast<TNode<BoolT>>(t3077), label__True_972, label__False_973);
                        if (label__True_972->is_used())
                        {
                          BIND(label__True_972);
                          // ../../third_party/v8/builtins/array-sort.tq:1124:28
                          *offset_464 = implicit_cast<TNode<Smi>>((*maxOfs_467).value());
                          Goto(label__False_973);
                        }
                        BIND(label__False_973);
                      }
                    }
                    Goto(label_header_1094_1681);
                  }
                  BIND(label__False_967);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1127:9
                {
                  Label label__True_974_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_974 = &label__True_974_impl;
                  USE(label__True_974);
                  Label label__False_975_impl(this, {offset_464}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_975 = &label__False_975_impl;
                  USE(label__False_975);
                  TNode<BoolT> t3078 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>((*maxOfs_467).value())));
                  USE(implicit_cast<TNode<BoolT>>(t3078));
                  Branch(implicit_cast<TNode<BoolT>>(t3078), label__True_974, label__False_975);
                  if (label__True_974->is_used())
                  {
                    BIND(label__True_974);
                    // ../../third_party/v8/builtins/array-sort.tq:1127:30
                    *offset_464 = implicit_cast<TNode<Smi>>((*maxOfs_467).value());
                    Goto(label__False_975);
                  }
                  BIND(label__False_975);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1130:9
                TNode<Smi> t3079 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lastOfs_463).value()), implicit_cast<TNode<Smi>>(p_hint)));
                USE(implicit_cast<TNode<Smi>>(t3079));
                *lastOfs_463 = implicit_cast<TNode<Smi>>(t3079);
                // ../../third_party/v8/builtins/array-sort.tq:1131:9
                TNode<Smi> t3080 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>(p_hint)));
                USE(implicit_cast<TNode<Smi>>(t3080));
                *offset_464 = implicit_cast<TNode<Smi>>(t3080);
              }
              Goto(label_if_done_label_1090_1679);
            }
            BIND(label_if_done_label_1090_1679);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1133:7
          // ../../third_party/v8/builtins/array-sort.tq:1139:7
          TNode<Smi> t3081 = implicit_cast<TNode<Smi>>((*lastOfs_463).value());
          USE(t3081);
          TNode<Smi> t3082 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3083 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lastOfs_463).value()), implicit_cast<TNode<Smi>>(t3082)));
          *lastOfs_463 = implicit_cast<TNode<Smi>>(t3083);
          // ../../third_party/v8/builtins/array-sort.tq:1140:7
          {
            Label label__True_976_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_976 = &label__True_976_impl;
            USE(label__True_976);
            Label label__False_977_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_977 = &label__False_977_impl;
            USE(label__False_977);
            Label label_header_1096_1682_impl(this, {elements_462, lastOfs_463, offset_464, order_465}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1096_1682 = &label_header_1096_1682_impl;
            USE(label_header_1096_1682);
            Goto(label_header_1096_1682);
            BIND(label_header_1096_1682);
            TNode<BoolT> t3084 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*lastOfs_463).value()), implicit_cast<TNode<Smi>>((*offset_464).value())));
            USE(implicit_cast<TNode<BoolT>>(t3084));
            Branch(implicit_cast<TNode<BoolT>>(t3084), label__True_976, label__False_977);
            if (label__True_976->is_used())
            {
              BIND(label__True_976);
              // ../../third_party/v8/builtins/array-sort.tq:1140:32
              {
                // ../../third_party/v8/builtins/array-sort.tq:1141:9
                TNode<Smi> t3085 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*offset_464).value()), implicit_cast<TNode<Smi>>((*lastOfs_463).value())));
                USE(implicit_cast<TNode<Smi>>(t3085));
                int31_t t3086 = 1;
                TNode<Smi> t3087 = UncheckedCast<Smi>(SmiShr(implicit_cast<TNode<Smi>>(t3085), implicit_cast<int31_t>(t3086)));
                USE(implicit_cast<TNode<Smi>>(t3087));
                TNode<Smi> t3088 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lastOfs_463).value()), implicit_cast<TNode<Smi>>(t3087)));
                USE(implicit_cast<TNode<Smi>>(t3088));
                TNode<Smi> m_1097_impl;
                auto m_1097 = &m_1097_impl;
                USE(m_1097);
                *m_1097 = implicit_cast<TNode<Smi>>(t3088);
                // ../../third_party/v8/builtins/array-sort.tq:1143:9
                TNode<Smi> t3089 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_base), implicit_cast<TNode<Smi>>((*m_1097))));
                USE(implicit_cast<TNode<Smi>>(t3089));
                TNode<Object> t3090 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>((*elements_462).value()), implicit_cast<TNode<Smi>>(t3089), label_Bailout_951));
                USE(implicit_cast<TNode<Object>>(t3090));
                TNode<Object> baseMElement_1098_impl;
                auto baseMElement_1098 = &baseMElement_1098_impl;
                USE(baseMElement_1098);
                *baseMElement_1098 = implicit_cast<TNode<Object>>(t3090);
                // ../../third_party/v8/builtins/array-sort.tq:1146:9
                TNode<Number> t3091 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>(p_key), implicit_cast<TNode<Object>>((*baseMElement_1098)), label_Bailout_951));
                USE(implicit_cast<TNode<Number>>(t3091));
                *order_465 = implicit_cast<TNode<Number>>(t3091);
                // ../../third_party/v8/builtins/array-sort.tq:1148:9
                {
                  Label label__True_978_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_978 = &label__True_978_impl;
                  USE(label__True_978);
                  Label label__False_979_impl(this, {elements_462}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_979 = &label__False_979_impl;
                  USE(label__False_979);
                  TNode<BoolT> t3092 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(p_useTempArray), implicit_cast<TNode<Object>>(False())));
                  USE(implicit_cast<TNode<BoolT>>(t3092));
                  Branch(implicit_cast<TNode<BoolT>>(t3092), label__True_978, label__False_979);
                  if (label__True_978->is_used())
                  {
                    BIND(label__True_978);
                    // ../../third_party/v8/builtins/array-sort.tq:1148:36
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1149:11
                      TNode<HeapObject> t3093 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                      USE(implicit_cast<TNode<HeapObject>>(t3093));
                      *elements_462 = implicit_cast<TNode<HeapObject>>(t3093);
                    }
                    Goto(label__False_979);
                  }
                  BIND(label__False_979);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1152:9
                {
                  Label label__True_980_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_980 = &label__True_980_impl;
                  USE(label__True_980);
                  Label label__False_981_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_981 = &label__False_981_impl;
                  USE(label__False_981);
                  Label label_if_done_label_1099_1683_impl(this, {lastOfs_463, offset_464}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_if_done_label_1099_1683 = &label_if_done_label_1099_1683_impl;
                  USE(label_if_done_label_1099_1683);
                  int31_t t3094 = 0;
                  TNode<Number> t3095 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3094)));
                  BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_465).value()), implicit_cast<TNode<Number>>(t3095), label__True_980, label__False_981);
                  if (label__True_980->is_used())
                  {
                    BIND(label__True_980);
                    // ../../third_party/v8/builtins/array-sort.tq:1152:24
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1153:11
                      *offset_464 = implicit_cast<TNode<Smi>>((*m_1097));
                    }
                    Goto(label_if_done_label_1099_1683);
                  }
                  if (label__False_981->is_used())
                  {
                    BIND(label__False_981);
                    // ../../third_party/v8/builtins/array-sort.tq:1154:16
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1155:11
                      int31_t t3096 = 1;
                      TNode<Smi> t3097 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3096)));
                      TNode<Smi> t3098 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*m_1097)), implicit_cast<TNode<Smi>>(t3097)));
                      USE(implicit_cast<TNode<Smi>>(t3098));
                      *lastOfs_463 = implicit_cast<TNode<Smi>>(t3098);
                    }
                    Goto(label_if_done_label_1099_1683);
                  }
                  BIND(label_if_done_label_1099_1683);
                }
              }
              Goto(label_header_1096_1682);
            }
            BIND(label__False_977);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1159:7
          // ../../third_party/v8/builtins/array-sort.tq:1160:7
          // ../../third_party/v8/builtins/array-sort.tq:1161:7
          Return(implicit_cast<TNode<Smi>>((*offset_464).value()));
        }
      }
      if (label_Bailout_951->is_used())
      {
        BIND(label_Bailout_951);
        // ../../third_party/v8/builtins/array-sort.tq:1163:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:1164:7
          TNode<Smi> t3099 = UncheckedCast<Smi>(Failure(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t3099));
          Return(implicit_cast<TNode<Smi>>(t3099));
        }
      }
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::CopyElement(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Code> p_load, TNode<Code> p_store, TNode<HeapObject> p_elements, TNode<Smi> p_from, TNode<Smi> p_to, Label* label_Bailout_982) {
  Label label_macro_end_1684_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1684 = &label_macro_end_1684_impl;
  USE(label_macro_end_1684);
  // ../../third_party/v8/builtins/array-sort.tq:1172:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:1173:5
    TNode<Object> t3100 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_load), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(p_from), label_Bailout_982));
    USE(implicit_cast<TNode<Object>>(t3100));
    TNode<Object> element_1100_impl;
    auto element_1100 = &element_1100_impl;
    USE(element_1100);
    *element_1100 = implicit_cast<TNode<Object>>(t3100);
    // ../../third_party/v8/builtins/array-sort.tq:1175:5
    CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(p_store), implicit_cast<TNode<HeapObject>>(p_elements), implicit_cast<TNode<Smi>>(p_to), implicit_cast<TNode<Object>>((*element_1100)), label_Bailout_982);
  }
}

void ArrayBuiltinsFromDSLAssembler::MergeLow(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Smi> p_baseA, TNode<Smi> p_lengthAArg, TNode<Smi> p_baseB, TNode<Smi> p_lengthBArg, Label* label_Bailout_983) {
  Label label_macro_end_1685_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1685 = &label_macro_end_1685_impl;
  USE(label_macro_end_1685);
  // ../../third_party/v8/builtins/array-sort.tq:1188:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:1189:5
    // ../../third_party/v8/builtins/array-sort.tq:1190:5
    // ../../third_party/v8/builtins/array-sort.tq:1191:5
    // ../../third_party/v8/builtins/array-sort.tq:1193:5
    TVARIABLE(Smi, lengthA_468_impl);
    auto lengthA_468 = &lengthA_468_impl;
    USE(lengthA_468);
    *lengthA_468 = implicit_cast<TNode<Smi>>(p_lengthAArg);
    // ../../third_party/v8/builtins/array-sort.tq:1194:5
    TVARIABLE(Smi, lengthB_469_impl);
    auto lengthB_469 = &lengthB_469_impl;
    USE(lengthB_469);
    *lengthB_469 = implicit_cast<TNode<Smi>>(p_lengthBArg);
    // ../../third_party/v8/builtins/array-sort.tq:1196:5
    TNode<HeapObject> t3101 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<HeapObject>>(t3101));
    TVARIABLE(HeapObject, elements_470_impl);
    auto elements_470 = &elements_470_impl;
    USE(elements_470);
    *elements_470 = implicit_cast<TNode<HeapObject>>(t3101);
    // ../../third_party/v8/builtins/array-sort.tq:1197:5
    TNode<Code> t3102 = UncheckedCast<Code>(GetLoadFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t3102));
    TNode<Code> load_1101_impl;
    auto load_1101 = &load_1101_impl;
    USE(load_1101);
    *load_1101 = implicit_cast<TNode<Code>>(t3102);
    // ../../third_party/v8/builtins/array-sort.tq:1198:5
    TNode<Code> t3103 = UncheckedCast<Code>(GetStoreFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t3103));
    TNode<Code> store_1102_impl;
    auto store_1102 = &store_1102_impl;
    USE(store_1102);
    *store_1102 = implicit_cast<TNode<Code>>(t3103);
    // ../../third_party/v8/builtins/array-sort.tq:1200:5
    TNode<FixedArray> t3104 = UncheckedCast<FixedArray>(GetTempArray(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*lengthA_468).value())));
    USE(implicit_cast<TNode<FixedArray>>(t3104));
    TNode<FixedArray> tempArray_1103_impl;
    auto tempArray_1103 = &tempArray_1103_impl;
    USE(tempArray_1103);
    *tempArray_1103 = implicit_cast<TNode<FixedArray>>(t3104);
    // ../../third_party/v8/builtins/array-sort.tq:1201:5
    int31_t t3105 = 0;
    TNode<Smi> t3106 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3105)));
    CopyToTempArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>(p_baseA), implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>(t3106), implicit_cast<TNode<Smi>>((*lengthA_468).value()), label_Bailout_983);
    // ../../third_party/v8/builtins/array-sort.tq:1205:5
    TVARIABLE(Smi, dest_471_impl);
    auto dest_471 = &dest_471_impl;
    USE(dest_471);
    *dest_471 = implicit_cast<TNode<Smi>>(p_baseA);
    // ../../third_party/v8/builtins/array-sort.tq:1206:5
    int31_t t3107 = 0;
    TVARIABLE(Smi, cursorTemp_472_impl);
    auto cursorTemp_472 = &cursorTemp_472_impl;
    USE(cursorTemp_472);
    TNode<Smi> t3108 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3107)));
    *cursorTemp_472 = implicit_cast<TNode<Smi>>(t3108);
    // ../../third_party/v8/builtins/array-sort.tq:1207:5
    TVARIABLE(Smi, cursorB_473_impl);
    auto cursorB_473 = &cursorB_473_impl;
    USE(cursorB_473);
    *cursorB_473 = implicit_cast<TNode<Smi>>(p_baseB);
    // ../../third_party/v8/builtins/array-sort.tq:1209:5
    TNode<Smi> t3109 = implicit_cast<TNode<Smi>>((*cursorB_473).value());
    USE(t3109);
    TNode<Smi> t3110 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
    TNode<Smi> t3111 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>(t3110)));
    *cursorB_473 = implicit_cast<TNode<Smi>>(t3111);
    TNode<Smi> t3112 = implicit_cast<TNode<Smi>>((*dest_471).value());
    USE(t3112);
    TNode<Smi> t3113 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
    TNode<Smi> t3114 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>(t3113)));
    *dest_471 = implicit_cast<TNode<Smi>>(t3114);
    CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<Code>>((*store_1102)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>(t3109), implicit_cast<TNode<Smi>>(t3112), label_Bailout_983);
    // ../../third_party/v8/builtins/array-sort.tq:1212:5
    {
      Label label_try_done_1104_1686_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1104_1686 = &label_try_done_1104_1686_impl;
      USE(label_try_done_1104_1686);
      Label label_Succeed_984_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Succeed_984 = &label_Succeed_984_impl;
      USE(label_Succeed_984);
      Label label_CopyB_985_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_CopyB_985 = &label_CopyB_985_impl;
      USE(label_CopyB_985);
      Label label_try_begin_1105_1687_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1105_1687 = &label_try_begin_1105_1687_impl;
      USE(label_try_begin_1105_1687);
      Goto(label_try_begin_1105_1687);
      if (label_try_begin_1105_1687->is_used())
      {
        BIND(label_try_begin_1105_1687);
        // ../../third_party/v8/builtins/array-sort.tq:1212:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:1213:7
          {
            Label label__True_986_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_986 = &label__True_986_impl;
            USE(label__True_986);
            Label label__False_987_impl(this, {lengthB_469}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_987 = &label__False_987_impl;
            USE(label__False_987);
            TNode<Smi> t3115 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
            TNode<Smi> t3116 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>(t3115)));
            *lengthB_469 = implicit_cast<TNode<Smi>>(t3116);
            int31_t t3117 = 0;
            TNode<Smi> t3118 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3117)));
            TNode<BoolT> t3119 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(t3116), implicit_cast<TNode<Smi>>(t3118)));
            USE(implicit_cast<TNode<BoolT>>(t3119));
            Branch(implicit_cast<TNode<BoolT>>(t3119), label__True_986, label__False_987);
            if (label__True_986->is_used())
            {
              BIND(label__True_986);
              // ../../third_party/v8/builtins/array-sort.tq:1213:27
              Goto(label_Succeed_984);
            }
            BIND(label__False_987);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1214:7
          {
            Label label__True_988_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_988 = &label__True_988_impl;
            USE(label__True_988);
            Label label__False_989_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_989 = &label__False_989_impl;
            USE(label__False_989);
            int31_t t3120 = 1;
            TNode<Smi> t3121 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3120)));
            TNode<BoolT> t3122 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3121)));
            USE(implicit_cast<TNode<BoolT>>(t3122));
            Branch(implicit_cast<TNode<BoolT>>(t3122), label__True_988, label__False_989);
            if (label__True_988->is_used())
            {
              BIND(label__True_988);
              // ../../third_party/v8/builtins/array-sort.tq:1214:25
              Goto(label_CopyB_985);
            }
            BIND(label__False_989);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1216:7
          TNode<Object> t3123 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx())));
          TNode<Smi> t3124 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t3123)));
          USE(implicit_cast<TNode<Smi>>(t3124));
          TVARIABLE(Smi, minGallop_474_impl);
          auto minGallop_474 = &minGallop_474_impl;
          USE(minGallop_474);
          *minGallop_474 = implicit_cast<TNode<Smi>>(t3124);
          // ../../third_party/v8/builtins/array-sort.tq:1219:7
          {
            Label label__True_990_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_990 = &label__True_990_impl;
            USE(label__True_990);
            Label label__False_991_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_991 = &label__False_991_impl;
            USE(label__False_991);
            Label label_header_1106_1688_impl(this, {cursorB_473, cursorTemp_472, dest_471, elements_470, lengthA_468, lengthB_469, minGallop_474}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1106_1688 = &label_header_1106_1688_impl;
            USE(label_header_1106_1688);
            Goto(label_header_1106_1688);
            BIND(label_header_1106_1688);
            TNode<BoolT> t3125 = UncheckedCast<BoolT>(Int32TrueConstant());
            USE(implicit_cast<TNode<BoolT>>(t3125));
            Branch(implicit_cast<TNode<BoolT>>(t3125), label__True_990, label__False_991);
            if (label__True_990->is_used())
            {
              BIND(label__True_990);
              // ../../third_party/v8/builtins/array-sort.tq:1219:35
              {
                // ../../third_party/v8/builtins/array-sort.tq:1220:9
                int31_t t3126 = 0;
                TVARIABLE(Smi, nofWinsA_475_impl);
                auto nofWinsA_475 = &nofWinsA_475_impl;
                USE(nofWinsA_475);
                TNode<Smi> t3127 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3126)));
                *nofWinsA_475 = implicit_cast<TNode<Smi>>(t3127);
                // ../../third_party/v8/builtins/array-sort.tq:1221:9
                int31_t t3128 = 0;
                TVARIABLE(Smi, nofWinsB_476_impl);
                auto nofWinsB_476 = &nofWinsB_476_impl;
                USE(nofWinsB_476);
                TNode<Smi> t3129 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3128)));
                *nofWinsB_476 = implicit_cast<TNode<Smi>>(t3129);
                // ../../third_party/v8/builtins/array-sort.tq:1227:9
                {
                  Label label__True_992_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_992 = &label__True_992_impl;
                  USE(label__True_992);
                  Label label__False_993_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_993 = &label__False_993_impl;
                  USE(label__False_993);
                  Label label_header_1107_1689_impl(this, {cursorB_473, cursorTemp_472, dest_471, elements_470, lengthA_468, lengthB_469, nofWinsA_475, nofWinsB_476}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1107_1689 = &label_header_1107_1689_impl;
                  USE(label_header_1107_1689);
                  Goto(label_header_1107_1689);
                  BIND(label_header_1107_1689);
                  TNode<BoolT> t3130 = UncheckedCast<BoolT>(Int32TrueConstant());
                  USE(implicit_cast<TNode<BoolT>>(t3130));
                  Branch(implicit_cast<TNode<BoolT>>(t3130), label__True_992, label__False_993);
                  if (label__True_992->is_used())
                  {
                    BIND(label__True_992);
                    // ../../third_party/v8/builtins/array-sort.tq:1227:37
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1228:11
                      // ../../third_party/v8/builtins/array-sort.tq:1230:11
                      TNode<Object> t3131 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*cursorB_473).value()), label_Bailout_983));
                      USE(implicit_cast<TNode<Object>>(t3131));
                      TVARIABLE(Object, elementB_477_impl);
                      auto elementB_477 = &elementB_477_impl;
                      USE(elementB_477);
                      *elementB_477 = implicit_cast<TNode<Object>>(t3131);
                      // ../../third_party/v8/builtins/array-sort.tq:1233:11
                      TNode<Object> t3132 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>((*cursorTemp_472).value())));
                      TNode<Number> t3133 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>((*elementB_477).value()), implicit_cast<TNode<Object>>(t3132), label_Bailout_983));
                      USE(implicit_cast<TNode<Number>>(t3133));
                      TVARIABLE(Number, order_478_impl);
                      auto order_478 = &order_478_impl;
                      USE(order_478);
                      *order_478 = implicit_cast<TNode<Number>>(t3133);
                      // ../../third_party/v8/builtins/array-sort.tq:1236:11
                      TNode<HeapObject> t3134 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                      USE(implicit_cast<TNode<HeapObject>>(t3134));
                      *elements_470 = implicit_cast<TNode<HeapObject>>(t3134);
                      // ../../third_party/v8/builtins/array-sort.tq:1238:11
                      {
                        Label label__True_994_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_994 = &label__True_994_impl;
                        USE(label__True_994);
                        Label label__False_995_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_995 = &label__False_995_impl;
                        USE(label__False_995);
                        Label label_if_done_label_1108_1690_impl(this, {cursorB_473, cursorTemp_472, dest_471, lengthA_468, lengthB_469, nofWinsA_475, nofWinsB_476}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label_if_done_label_1108_1690 = &label_if_done_label_1108_1690_impl;
                        USE(label_if_done_label_1108_1690);
                        int31_t t3135 = 0;
                        TNode<Number> t3136 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3135)));
                        BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_478).value()), implicit_cast<TNode<Number>>(t3136), label__True_994, label__False_995);
                        if (label__True_994->is_used())
                        {
                          BIND(label__True_994);
                          // ../../third_party/v8/builtins/array-sort.tq:1238:26
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1239:13
                            CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<Code>>((*store_1102)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>((*dest_471).value()), label_Bailout_983);
                            // ../../third_party/v8/builtins/array-sort.tq:1243:13
                            TNode<Smi> t3137 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3138 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>(t3137)));
                            *cursorB_473 = implicit_cast<TNode<Smi>>(t3138);
                            // ../../third_party/v8/builtins/array-sort.tq:1244:13
                            TNode<Smi> t3139 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3140 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>(t3139)));
                            *dest_471 = implicit_cast<TNode<Smi>>(t3140);
                            // ../../third_party/v8/builtins/array-sort.tq:1245:13
                            TNode<Smi> t3141 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3142 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*nofWinsB_476).value()), implicit_cast<TNode<Smi>>(t3141)));
                            *nofWinsB_476 = implicit_cast<TNode<Smi>>(t3142);
                            // ../../third_party/v8/builtins/array-sort.tq:1246:13
                            TNode<Smi> t3143 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3144 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>(t3143)));
                            *lengthB_469 = implicit_cast<TNode<Smi>>(t3144);
                            // ../../third_party/v8/builtins/array-sort.tq:1247:13
                            int31_t t3145 = 0;
                            TNode<Smi> t3146 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3145)));
                            *nofWinsA_475 = implicit_cast<TNode<Smi>>(t3146);
                            // ../../third_party/v8/builtins/array-sort.tq:1249:13
                            {
                              Label label__True_996_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_996 = &label__True_996_impl;
                              USE(label__True_996);
                              Label label__False_997_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_997 = &label__False_997_impl;
                              USE(label__False_997);
                              int31_t t3147 = 0;
                              TNode<Smi> t3148 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3147)));
                              TNode<BoolT> t3149 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>(t3148)));
                              USE(implicit_cast<TNode<BoolT>>(t3149));
                              Branch(implicit_cast<TNode<BoolT>>(t3149), label__True_996, label__False_997);
                              if (label__True_996->is_used())
                              {
                                BIND(label__True_996);
                                // ../../third_party/v8/builtins/array-sort.tq:1249:31
                                Goto(label_Succeed_984);
                              }
                              BIND(label__False_997);
                            }
                            // ../../third_party/v8/builtins/array-sort.tq:1250:13
                            {
                              Label label__True_998_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_998 = &label__True_998_impl;
                              USE(label__True_998);
                              Label label__False_999_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_999 = &label__False_999_impl;
                              USE(label__False_999);
                              TNode<BoolT> t3150 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsB_476).value()), implicit_cast<TNode<Smi>>((*minGallop_474).value())));
                              USE(implicit_cast<TNode<BoolT>>(t3150));
                              Branch(implicit_cast<TNode<BoolT>>(t3150), label__True_998, label__False_999);
                              if (label__True_998->is_used())
                              {
                                BIND(label__True_998);
                                // ../../third_party/v8/builtins/array-sort.tq:1250:40
                                Goto(label__False_993);
                              }
                              BIND(label__False_999);
                            }
                          }
                          Goto(label_if_done_label_1108_1690);
                        }
                        if (label__False_995->is_used())
                        {
                          BIND(label__False_995);
                          // ../../third_party/v8/builtins/array-sort.tq:1251:18
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1252:13
                            TNode<Object> t3151 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>((*cursorTemp_472).value())));
                            CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1102)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Object>>(t3151), label_Bailout_983);
                            // ../../third_party/v8/builtins/array-sort.tq:1257:13
                            TNode<Smi> t3152 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3153 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorTemp_472).value()), implicit_cast<TNode<Smi>>(t3152)));
                            *cursorTemp_472 = implicit_cast<TNode<Smi>>(t3153);
                            // ../../third_party/v8/builtins/array-sort.tq:1258:13
                            TNode<Smi> t3154 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3155 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>(t3154)));
                            *dest_471 = implicit_cast<TNode<Smi>>(t3155);
                            // ../../third_party/v8/builtins/array-sort.tq:1259:13
                            TNode<Smi> t3156 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3157 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*nofWinsA_475).value()), implicit_cast<TNode<Smi>>(t3156)));
                            *nofWinsA_475 = implicit_cast<TNode<Smi>>(t3157);
                            // ../../third_party/v8/builtins/array-sort.tq:1260:13
                            TNode<Smi> t3158 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3159 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3158)));
                            *lengthA_468 = implicit_cast<TNode<Smi>>(t3159);
                            // ../../third_party/v8/builtins/array-sort.tq:1261:13
                            int31_t t3160 = 0;
                            TNode<Smi> t3161 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3160)));
                            *nofWinsB_476 = implicit_cast<TNode<Smi>>(t3161);
                            // ../../third_party/v8/builtins/array-sort.tq:1263:13
                            {
                              Label label__True_1000_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1000 = &label__True_1000_impl;
                              USE(label__True_1000);
                              Label label__False_1001_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1001 = &label__False_1001_impl;
                              USE(label__False_1001);
                              int31_t t3162 = 1;
                              TNode<Smi> t3163 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3162)));
                              TNode<BoolT> t3164 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3163)));
                              USE(implicit_cast<TNode<BoolT>>(t3164));
                              Branch(implicit_cast<TNode<BoolT>>(t3164), label__True_1000, label__False_1001);
                              if (label__True_1000->is_used())
                              {
                                BIND(label__True_1000);
                                // ../../third_party/v8/builtins/array-sort.tq:1263:31
                                Goto(label_CopyB_985);
                              }
                              BIND(label__False_1001);
                            }
                            // ../../third_party/v8/builtins/array-sort.tq:1264:13
                            {
                              Label label__True_1002_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1002 = &label__True_1002_impl;
                              USE(label__True_1002);
                              Label label__False_1003_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1003 = &label__False_1003_impl;
                              USE(label__False_1003);
                              TNode<BoolT> t3165 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsA_475).value()), implicit_cast<TNode<Smi>>((*minGallop_474).value())));
                              USE(implicit_cast<TNode<BoolT>>(t3165));
                              Branch(implicit_cast<TNode<BoolT>>(t3165), label__True_1002, label__False_1003);
                              if (label__True_1002->is_used())
                              {
                                BIND(label__True_1002);
                                // ../../third_party/v8/builtins/array-sort.tq:1264:40
                                Goto(label__False_993);
                              }
                              BIND(label__False_1003);
                            }
                          }
                          Goto(label_if_done_label_1108_1690);
                        }
                        BIND(label_if_done_label_1108_1690);
                      }
                    }
                    Goto(label_header_1107_1689);
                  }
                  BIND(label__False_993);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1271:9
                TNode<Smi> t3166 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3167 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*minGallop_474).value()), implicit_cast<TNode<Smi>>(t3166)));
                *minGallop_474 = implicit_cast<TNode<Smi>>(t3167);
                // ../../third_party/v8/builtins/array-sort.tq:1272:9
                TVARIABLE(BoolT, firstIteration_479_impl);
                auto firstIteration_479 = &firstIteration_479_impl;
                USE(firstIteration_479);
                TNode<BoolT> t3168 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
                *firstIteration_479 = implicit_cast<TNode<BoolT>>(t3168);
                // ../../third_party/v8/builtins/array-sort.tq:1273:9
                {
                  Label label__True_1004_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_1004 = &label__True_1004_impl;
                  USE(label__True_1004);
                  Label label__False_1005_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1005 = &label__False_1005_impl;
                  USE(label__False_1005);
                  Label label_header_1109_1691_impl(this, {cursorB_473, cursorTemp_472, dest_471, firstIteration_479, lengthA_468, lengthB_469, minGallop_474, nofWinsA_475, nofWinsB_476}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1109_1691 = &label_header_1109_1691_impl;
                  USE(label_header_1109_1691);
                  Goto(label_header_1109_1691);
                  BIND(label_header_1109_1691);
                  Label label__False_1006_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1006 = &label__False_1006_impl;
                  USE(label__False_1006);
                  Label label__False_1007_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1007 = &label__False_1007_impl;
                  USE(label__False_1007);
                  TNode<Smi> t3169 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(kMinGallopWins())));
                  TNode<BoolT> t3170 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsA_475).value()), implicit_cast<TNode<Smi>>(t3169)));
                  USE(implicit_cast<TNode<BoolT>>(t3170));
                  GotoIf(implicit_cast<TNode<BoolT>>(t3170), label__True_1004);
                  TNode<Smi> t3171 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(kMinGallopWins())));
                  TNode<BoolT> t3172 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsB_476).value()), implicit_cast<TNode<Smi>>(t3171)));
                  USE(implicit_cast<TNode<BoolT>>(t3172));
Branch(implicit_cast<TNode<BoolT>>(t3172), label__True_1004, label__False_1006);
                  BIND(label__False_1006);
Branch(implicit_cast<TNode<BoolT>>((*firstIteration_479).value()), label__True_1004, label__False_1005);
                  if (label__True_1004->is_used())
                  {
                    BIND(label__True_1004);
                    // ../../third_party/v8/builtins/array-sort.tq:1274:32
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1275:11
                      TNode<BoolT> t3173 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(false)));
                      *firstIteration_479 = implicit_cast<TNode<BoolT>>(t3173);
                      // ../../third_party/v8/builtins/array-sort.tq:1276:11
                      // ../../third_party/v8/builtins/array-sort.tq:1278:11
                      int31_t t3174 = 1;
                      int31_t t3175 = 1;
                      TNode<Smi> t3176 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3175)));
                      TNode<Smi> t3177 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*minGallop_474).value()), implicit_cast<TNode<Smi>>(t3176)));
                      USE(implicit_cast<TNode<Smi>>(t3177));
                      TNode<Smi> t3178 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3174)));
                      TNode<Smi> t3179 = UncheckedCast<Smi>(SmiMax(implicit_cast<TNode<Smi>>(t3178), implicit_cast<TNode<Smi>>(t3177)));
                      USE(implicit_cast<TNode<Smi>>(t3179));
                      *minGallop_474 = implicit_cast<TNode<Smi>>(t3179);
                      // ../../third_party/v8/builtins/array-sort.tq:1279:11
                      StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx()), implicit_cast<TNode<Object>>((*minGallop_474).value()));
                      // ../../third_party/v8/builtins/array-sort.tq:1281:11
                      TNode<Object> t3180 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*cursorB_473).value()), label_Bailout_983));
                      USE(implicit_cast<TNode<Object>>(t3180));
                      TVARIABLE(Object, keyRight_480_impl);
                      auto keyRight_480 = &keyRight_480_impl;
                      USE(keyRight_480);
                      *keyRight_480 = implicit_cast<TNode<Object>>(t3180);
                      // ../../third_party/v8/builtins/array-sort.tq:1284:11
                      int31_t t3181 = 0;
                      TNode<Smi> t3182 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3181)));
                      TNode<Smi> t3183 = UncheckedCast<Smi>(CallGallopRight(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad19ATTempArrayElements).code())), implicit_cast<TNode<Object>>((*keyRight_480).value()), implicit_cast<TNode<Smi>>((*cursorTemp_472).value()), implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3182), implicit_cast<TNode<Oddball>>(True()), label_Bailout_983));
                      USE(implicit_cast<TNode<Smi>>(t3183));
                      *nofWinsA_475 = implicit_cast<TNode<Smi>>(t3183);
                      // ../../third_party/v8/builtins/array-sort.tq:1287:11
                      // ../../third_party/v8/builtins/array-sort.tq:1289:11
                      {
                        Label label__True_1008_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1008 = &label__True_1008_impl;
                        USE(label__True_1008);
                        Label label__False_1009_impl(this, {cursorTemp_472, dest_471, lengthA_468}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1009 = &label__False_1009_impl;
                        USE(label__False_1009);
                        int31_t t3184 = 0;
                        TNode<Smi> t3185 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3184)));
                        TNode<BoolT> t3186 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*nofWinsA_475).value()), implicit_cast<TNode<Smi>>(t3185)));
                        USE(implicit_cast<TNode<BoolT>>(t3186));
                        Branch(implicit_cast<TNode<BoolT>>(t3186), label__True_1008, label__False_1009);
                        if (label__True_1008->is_used())
                        {
                          BIND(label__True_1008);
                          // ../../third_party/v8/builtins/array-sort.tq:1289:29
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1290:13
                            CallCopyFromTempArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>((*cursorTemp_472).value()), implicit_cast<TNode<Smi>>((*nofWinsA_475).value()), label_Bailout_983);
                            // ../../third_party/v8/builtins/array-sort.tq:1293:13
                            TNode<Smi> t3187 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>((*nofWinsA_475).value())));
                            USE(implicit_cast<TNode<Smi>>(t3187));
                            *dest_471 = implicit_cast<TNode<Smi>>(t3187);
                            // ../../third_party/v8/builtins/array-sort.tq:1294:13
                            TNode<Smi> t3188 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorTemp_472).value()), implicit_cast<TNode<Smi>>((*nofWinsA_475).value())));
                            USE(implicit_cast<TNode<Smi>>(t3188));
                            *cursorTemp_472 = implicit_cast<TNode<Smi>>(t3188);
                            // ../../third_party/v8/builtins/array-sort.tq:1295:13
                            TNode<Smi> t3189 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>((*nofWinsA_475).value())));
                            USE(implicit_cast<TNode<Smi>>(t3189));
                            *lengthA_468 = implicit_cast<TNode<Smi>>(t3189);
                            // ../../third_party/v8/builtins/array-sort.tq:1297:13
                            {
                              Label label__True_1010_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1010 = &label__True_1010_impl;
                              USE(label__True_1010);
                              Label label__False_1011_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1011 = &label__False_1011_impl;
                              USE(label__False_1011);
                              int31_t t3190 = 1;
                              TNode<Smi> t3191 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3190)));
                              TNode<BoolT> t3192 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3191)));
                              USE(implicit_cast<TNode<BoolT>>(t3192));
                              Branch(implicit_cast<TNode<BoolT>>(t3192), label__True_1010, label__False_1011);
                              if (label__True_1010->is_used())
                              {
                                BIND(label__True_1010);
                                // ../../third_party/v8/builtins/array-sort.tq:1297:31
                                Goto(label_CopyB_985);
                              }
                              BIND(label__False_1011);
                            }
                            // ../../third_party/v8/builtins/array-sort.tq:1301:13
                            {
                              Label label__True_1012_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1012 = &label__True_1012_impl;
                              USE(label__True_1012);
                              Label label__False_1013_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1013 = &label__False_1013_impl;
                              USE(label__False_1013);
                              int31_t t3193 = 0;
                              TNode<Smi> t3194 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3193)));
                              TNode<BoolT> t3195 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3194)));
                              USE(implicit_cast<TNode<BoolT>>(t3195));
                              Branch(implicit_cast<TNode<BoolT>>(t3195), label__True_1012, label__False_1013);
                              if (label__True_1012->is_used())
                              {
                                BIND(label__True_1012);
                                // ../../third_party/v8/builtins/array-sort.tq:1301:31
                                Goto(label_Succeed_984);
                              }
                              BIND(label__False_1013);
                            }
                          }
                          Goto(label__False_1009);
                        }
                        BIND(label__False_1009);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1303:11
                      TNode<Smi> t3196 = implicit_cast<TNode<Smi>>((*cursorB_473).value());
                      USE(t3196);
                      TNode<Smi> t3197 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3198 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>(t3197)));
                      *cursorB_473 = implicit_cast<TNode<Smi>>(t3198);
                      TNode<Smi> t3199 = implicit_cast<TNode<Smi>>((*dest_471).value());
                      USE(t3199);
                      TNode<Smi> t3200 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3201 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>(t3200)));
                      *dest_471 = implicit_cast<TNode<Smi>>(t3201);
                      CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<Code>>((*store_1102)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>(t3196), implicit_cast<TNode<Smi>>(t3199), label_Bailout_983);
                      // ../../third_party/v8/builtins/array-sort.tq:1306:11
                      {
                        Label label__True_1014_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1014 = &label__True_1014_impl;
                        USE(label__True_1014);
                        Label label__False_1015_impl(this, {lengthB_469}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1015 = &label__False_1015_impl;
                        USE(label__False_1015);
                        TNode<Smi> t3202 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                        TNode<Smi> t3203 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>(t3202)));
                        *lengthB_469 = implicit_cast<TNode<Smi>>(t3203);
                        int31_t t3204 = 0;
                        TNode<Smi> t3205 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3204)));
                        TNode<BoolT> t3206 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(t3203), implicit_cast<TNode<Smi>>(t3205)));
                        USE(implicit_cast<TNode<BoolT>>(t3206));
                        Branch(implicit_cast<TNode<BoolT>>(t3206), label__True_1014, label__False_1015);
                        if (label__True_1014->is_used())
                        {
                          BIND(label__True_1014);
                          // ../../third_party/v8/builtins/array-sort.tq:1306:31
                          Goto(label_Succeed_984);
                        }
                        BIND(label__False_1015);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1308:11
                      TNode<Object> t3207 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>((*cursorTemp_472).value())));
                      int31_t t3208 = 0;
                      TNode<Smi> t3209 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3208)));
                      TNode<Smi> t3210 = UncheckedCast<Smi>(CallGallopLeft(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1101)), implicit_cast<TNode<Object>>(t3207), implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>(t3209), implicit_cast<TNode<Oddball>>(False()), label_Bailout_983));
                      USE(implicit_cast<TNode<Smi>>(t3210));
                      *nofWinsB_476 = implicit_cast<TNode<Smi>>(t3210);
                      // ../../third_party/v8/builtins/array-sort.tq:1312:11
                      // ../../third_party/v8/builtins/array-sort.tq:1313:11
                      {
                        Label label__True_1016_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1016 = &label__True_1016_impl;
                        USE(label__True_1016);
                        Label label__False_1017_impl(this, {cursorB_473, dest_471, lengthB_469}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1017 = &label__False_1017_impl;
                        USE(label__False_1017);
                        int31_t t3211 = 0;
                        TNode<Smi> t3212 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3211)));
                        TNode<BoolT> t3213 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*nofWinsB_476).value()), implicit_cast<TNode<Smi>>(t3212)));
                        USE(implicit_cast<TNode<BoolT>>(t3213));
                        Branch(implicit_cast<TNode<BoolT>>(t3213), label__True_1016, label__False_1017);
                        if (label__True_1016->is_used())
                        {
                          BIND(label__True_1016);
                          // ../../third_party/v8/builtins/array-sort.tq:1313:29
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1314:13
                            CallCopyWithinSortArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>((*nofWinsB_476).value()), label_Bailout_983);
                            // ../../third_party/v8/builtins/array-sort.tq:1318:13
                            TNode<Smi> t3214 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>((*nofWinsB_476).value())));
                            USE(implicit_cast<TNode<Smi>>(t3214));
                            *dest_471 = implicit_cast<TNode<Smi>>(t3214);
                            // ../../third_party/v8/builtins/array-sort.tq:1319:13
                            TNode<Smi> t3215 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>((*nofWinsB_476).value())));
                            USE(implicit_cast<TNode<Smi>>(t3215));
                            *cursorB_473 = implicit_cast<TNode<Smi>>(t3215);
                            // ../../third_party/v8/builtins/array-sort.tq:1320:13
                            TNode<Smi> t3216 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>((*nofWinsB_476).value())));
                            USE(implicit_cast<TNode<Smi>>(t3216));
                            *lengthB_469 = implicit_cast<TNode<Smi>>(t3216);
                            // ../../third_party/v8/builtins/array-sort.tq:1322:13
                            {
                              Label label__True_1018_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1018 = &label__True_1018_impl;
                              USE(label__True_1018);
                              Label label__False_1019_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1019 = &label__False_1019_impl;
                              USE(label__False_1019);
                              int31_t t3217 = 0;
                              TNode<Smi> t3218 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3217)));
                              TNode<BoolT> t3219 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_469).value()), implicit_cast<TNode<Smi>>(t3218)));
                              USE(implicit_cast<TNode<BoolT>>(t3219));
                              Branch(implicit_cast<TNode<BoolT>>(t3219), label__True_1018, label__False_1019);
                              if (label__True_1018->is_used())
                              {
                                BIND(label__True_1018);
                                // ../../third_party/v8/builtins/array-sort.tq:1322:31
                                Goto(label_Succeed_984);
                              }
                              BIND(label__False_1019);
                            }
                          }
                          Goto(label__False_1017);
                        }
                        BIND(label__False_1017);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1324:11
                      TNode<Smi> t3220 = implicit_cast<TNode<Smi>>((*dest_471).value());
                      USE(t3220);
                      TNode<Smi> t3221 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3222 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>(t3221)));
                      *dest_471 = implicit_cast<TNode<Smi>>(t3222);
                      TNode<Smi> t3223 = implicit_cast<TNode<Smi>>((*cursorTemp_472).value());
                      USE(t3223);
                      TNode<Smi> t3224 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3225 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorTemp_472).value()), implicit_cast<TNode<Smi>>(t3224)));
                      *cursorTemp_472 = implicit_cast<TNode<Smi>>(t3225);
                      TNode<Object> t3226 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>(t3223)));
                      CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1102)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>(t3220), implicit_cast<TNode<Object>>(t3226), label_Bailout_983);
                      // ../../third_party/v8/builtins/array-sort.tq:1328:11
                      {
                        Label label__True_1020_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1020 = &label__True_1020_impl;
                        USE(label__True_1020);
                        Label label__False_1021_impl(this, {lengthA_468}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1021 = &label__False_1021_impl;
                        USE(label__False_1021);
                        TNode<Smi> t3227 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                        TNode<Smi> t3228 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3227)));
                        *lengthA_468 = implicit_cast<TNode<Smi>>(t3228);
                        int31_t t3229 = 1;
                        TNode<Smi> t3230 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3229)));
                        TNode<BoolT> t3231 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(t3228), implicit_cast<TNode<Smi>>(t3230)));
                        USE(implicit_cast<TNode<BoolT>>(t3231));
                        Branch(implicit_cast<TNode<BoolT>>(t3231), label__True_1020, label__False_1021);
                        if (label__True_1020->is_used())
                        {
                          BIND(label__True_1020);
                          // ../../third_party/v8/builtins/array-sort.tq:1328:31
                          Goto(label_CopyB_985);
                        }
                        BIND(label__False_1021);
                      }
                    }
                    Goto(label_header_1109_1691);
                  }
                  BIND(label__False_1005);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1330:9
                TNode<Smi> t3232 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3233 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*minGallop_474).value()), implicit_cast<TNode<Smi>>(t3232)));
                *minGallop_474 = implicit_cast<TNode<Smi>>(t3233);
                // ../../third_party/v8/builtins/array-sort.tq:1331:9
                StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx()), implicit_cast<TNode<Object>>((*minGallop_474).value()));
              }
              Goto(label_header_1106_1688);
            }
            BIND(label__False_991);
          }
        }
        Goto(label_try_done_1104_1686);
      }
      if (label_Succeed_984->is_used())
      {
        BIND(label_Succeed_984);
        // ../../third_party/v8/builtins/array-sort.tq:1334:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:1335:7
          {
            Label label__True_1022_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1022 = &label__True_1022_impl;
            USE(label__True_1022);
            Label label__False_1023_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1023 = &label__False_1023_impl;
            USE(label__False_1023);
            int31_t t3234 = 0;
            TNode<Smi> t3235 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3234)));
            TNode<BoolT> t3236 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*lengthA_468).value()), implicit_cast<TNode<Smi>>(t3235)));
            USE(implicit_cast<TNode<BoolT>>(t3236));
            Branch(implicit_cast<TNode<BoolT>>(t3236), label__True_1022, label__False_1023);
            if (label__True_1022->is_used())
            {
              BIND(label__True_1022);
              // ../../third_party/v8/builtins/array-sort.tq:1335:24
              {
                // ../../third_party/v8/builtins/array-sort.tq:1336:9
                CallCopyFromTempArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>((*cursorTemp_472).value()), implicit_cast<TNode<Smi>>((*lengthA_468).value()), label_Bailout_983);
              }
              Goto(label__False_1023);
            }
            BIND(label__False_1023);
          }
        }
        Goto(label_try_done_1104_1686);
      }
      if (label_CopyB_985->is_used())
      {
        BIND(label_CopyB_985);
        // ../../third_party/v8/builtins/array-sort.tq:1341:17
        {
          // ../../third_party/v8/builtins/array-sort.tq:1342:7
          // ../../third_party/v8/builtins/array-sort.tq:1344:7
          CallCopyWithinSortArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>((*cursorB_473).value()), implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>((*lengthB_469).value()), label_Bailout_983);
          // ../../third_party/v8/builtins/array-sort.tq:1347:7
          TNode<Smi> t3237 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_471).value()), implicit_cast<TNode<Smi>>((*lengthB_469).value())));
          USE(implicit_cast<TNode<Smi>>(t3237));
          TNode<Object> t3238 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1103)), implicit_cast<TNode<Smi>>((*cursorTemp_472).value())));
          CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1102)), implicit_cast<TNode<HeapObject>>((*elements_470).value()), implicit_cast<TNode<Smi>>(t3237), implicit_cast<TNode<Object>>(t3238), label_Bailout_983);
        }
        Goto(label_try_done_1104_1686);
      }
      BIND(label_try_done_1104_1686);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::MergeHigh(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Smi> p_baseA, TNode<Smi> p_lengthAArg, TNode<Smi> p_baseB, TNode<Smi> p_lengthBArg, Label* label_Bailout_1024) {
  Label label_macro_end_1692_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1692 = &label_macro_end_1692_impl;
  USE(label_macro_end_1692);
  // ../../third_party/v8/builtins/array-sort.tq:1361:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:1362:5
    // ../../third_party/v8/builtins/array-sort.tq:1363:5
    // ../../third_party/v8/builtins/array-sort.tq:1364:5
    // ../../third_party/v8/builtins/array-sort.tq:1366:5
    TVARIABLE(Smi, lengthA_481_impl);
    auto lengthA_481 = &lengthA_481_impl;
    USE(lengthA_481);
    *lengthA_481 = implicit_cast<TNode<Smi>>(p_lengthAArg);
    // ../../third_party/v8/builtins/array-sort.tq:1367:5
    TVARIABLE(Smi, lengthB_482_impl);
    auto lengthB_482 = &lengthB_482_impl;
    USE(lengthB_482);
    *lengthB_482 = implicit_cast<TNode<Smi>>(p_lengthBArg);
    // ../../third_party/v8/builtins/array-sort.tq:1369:5
    TNode<HeapObject> t3239 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<HeapObject>>(t3239));
    TVARIABLE(HeapObject, elements_483_impl);
    auto elements_483 = &elements_483_impl;
    USE(elements_483);
    *elements_483 = implicit_cast<TNode<HeapObject>>(t3239);
    // ../../third_party/v8/builtins/array-sort.tq:1370:5
    TNode<Code> t3240 = UncheckedCast<Code>(GetLoadFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t3240));
    TNode<Code> load_1110_impl;
    auto load_1110 = &load_1110_impl;
    USE(load_1110);
    *load_1110 = implicit_cast<TNode<Code>>(t3240);
    // ../../third_party/v8/builtins/array-sort.tq:1371:5
    TNode<Code> t3241 = UncheckedCast<Code>(GetStoreFn(implicit_cast<TNode<FixedArray>>(p_sortState)));
    USE(implicit_cast<TNode<Code>>(t3241));
    TNode<Code> store_1111_impl;
    auto store_1111 = &store_1111_impl;
    USE(store_1111);
    *store_1111 = implicit_cast<TNode<Code>>(t3241);
    // ../../third_party/v8/builtins/array-sort.tq:1373:5
    TNode<FixedArray> t3242 = UncheckedCast<FixedArray>(GetTempArray(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*lengthB_482).value())));
    USE(implicit_cast<TNode<FixedArray>>(t3242));
    TNode<FixedArray> tempArray_1112_impl;
    auto tempArray_1112 = &tempArray_1112_impl;
    USE(tempArray_1112);
    *tempArray_1112 = implicit_cast<TNode<FixedArray>>(t3242);
    // ../../third_party/v8/builtins/array-sort.tq:1374:5
    int31_t t3243 = 0;
    TNode<Smi> t3244 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3243)));
    CopyToTempArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(p_baseB), implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>(t3244), implicit_cast<TNode<Smi>>((*lengthB_482).value()), label_Bailout_1024);
    // ../../third_party/v8/builtins/array-sort.tq:1379:5
    TNode<Smi> t3245 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_baseB), implicit_cast<TNode<Smi>>((*lengthB_482).value())));
    USE(implicit_cast<TNode<Smi>>(t3245));
    int31_t t3246 = 1;
    TNode<Smi> t3247 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3246)));
    TNode<Smi> t3248 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3245), implicit_cast<TNode<Smi>>(t3247)));
    USE(implicit_cast<TNode<Smi>>(t3248));
    TVARIABLE(Smi, dest_484_impl);
    auto dest_484 = &dest_484_impl;
    USE(dest_484);
    *dest_484 = implicit_cast<TNode<Smi>>(t3248);
    // ../../third_party/v8/builtins/array-sort.tq:1380:5
    int31_t t3249 = 1;
    TNode<Smi> t3250 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3249)));
    TNode<Smi> t3251 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3250)));
    USE(implicit_cast<TNode<Smi>>(t3251));
    TVARIABLE(Smi, cursorTemp_485_impl);
    auto cursorTemp_485 = &cursorTemp_485_impl;
    USE(cursorTemp_485);
    *cursorTemp_485 = implicit_cast<TNode<Smi>>(t3251);
    // ../../third_party/v8/builtins/array-sort.tq:1381:5
    TNode<Smi> t3252 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>(p_baseA), implicit_cast<TNode<Smi>>((*lengthA_481).value())));
    USE(implicit_cast<TNode<Smi>>(t3252));
    int31_t t3253 = 1;
    TNode<Smi> t3254 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3253)));
    TNode<Smi> t3255 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3252), implicit_cast<TNode<Smi>>(t3254)));
    USE(implicit_cast<TNode<Smi>>(t3255));
    TVARIABLE(Smi, cursorA_486_impl);
    auto cursorA_486 = &cursorA_486_impl;
    USE(cursorA_486);
    *cursorA_486 = implicit_cast<TNode<Smi>>(t3255);
    // ../../third_party/v8/builtins/array-sort.tq:1383:5
    TNode<Smi> t3256 = implicit_cast<TNode<Smi>>((*cursorA_486).value());
    USE(t3256);
    TNode<Smi> t3257 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
    TNode<Smi> t3258 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>(t3257)));
    *cursorA_486 = implicit_cast<TNode<Smi>>(t3258);
    TNode<Smi> t3259 = implicit_cast<TNode<Smi>>((*dest_484).value());
    USE(t3259);
    TNode<Smi> t3260 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
    TNode<Smi> t3261 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3260)));
    *dest_484 = implicit_cast<TNode<Smi>>(t3261);
    CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<Code>>((*store_1111)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3256), implicit_cast<TNode<Smi>>(t3259), label_Bailout_1024);
    // ../../third_party/v8/builtins/array-sort.tq:1386:5
    {
      Label label_try_done_1113_1693_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1113_1693 = &label_try_done_1113_1693_impl;
      USE(label_try_done_1113_1693);
      Label label_Succeed_1025_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Succeed_1025 = &label_Succeed_1025_impl;
      USE(label_Succeed_1025);
      Label label_CopyA_1026_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_CopyA_1026 = &label_CopyA_1026_impl;
      USE(label_CopyA_1026);
      Label label_try_begin_1114_1694_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1114_1694 = &label_try_begin_1114_1694_impl;
      USE(label_try_begin_1114_1694);
      Goto(label_try_begin_1114_1694);
      if (label_try_begin_1114_1694->is_used())
      {
        BIND(label_try_begin_1114_1694);
        // ../../third_party/v8/builtins/array-sort.tq:1386:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:1387:7
          {
            Label label__True_1027_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1027 = &label__True_1027_impl;
            USE(label__True_1027);
            Label label__False_1028_impl(this, {lengthA_481}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1028 = &label__False_1028_impl;
            USE(label__False_1028);
            TNode<Smi> t3262 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
            TNode<Smi> t3263 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3262)));
            *lengthA_481 = implicit_cast<TNode<Smi>>(t3263);
            int31_t t3264 = 0;
            TNode<Smi> t3265 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3264)));
            TNode<BoolT> t3266 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(t3263), implicit_cast<TNode<Smi>>(t3265)));
            USE(implicit_cast<TNode<BoolT>>(t3266));
            Branch(implicit_cast<TNode<BoolT>>(t3266), label__True_1027, label__False_1028);
            if (label__True_1027->is_used())
            {
              BIND(label__True_1027);
              // ../../third_party/v8/builtins/array-sort.tq:1387:27
              Goto(label_Succeed_1025);
            }
            BIND(label__False_1028);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1388:7
          {
            Label label__True_1029_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1029 = &label__True_1029_impl;
            USE(label__True_1029);
            Label label__False_1030_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1030 = &label__False_1030_impl;
            USE(label__False_1030);
            int31_t t3267 = 1;
            TNode<Smi> t3268 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3267)));
            TNode<BoolT> t3269 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3268)));
            USE(implicit_cast<TNode<BoolT>>(t3269));
            Branch(implicit_cast<TNode<BoolT>>(t3269), label__True_1029, label__False_1030);
            if (label__True_1029->is_used())
            {
              BIND(label__True_1029);
              // ../../third_party/v8/builtins/array-sort.tq:1388:25
              Goto(label_CopyA_1026);
            }
            BIND(label__False_1030);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1390:7
          TNode<Object> t3270 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx())));
          TNode<Smi> t3271 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(t3270)));
          USE(implicit_cast<TNode<Smi>>(t3271));
          TVARIABLE(Smi, minGallop_487_impl);
          auto minGallop_487 = &minGallop_487_impl;
          USE(minGallop_487);
          *minGallop_487 = implicit_cast<TNode<Smi>>(t3271);
          // ../../third_party/v8/builtins/array-sort.tq:1393:7
          {
            Label label__True_1031_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1031 = &label__True_1031_impl;
            USE(label__True_1031);
            Label label__False_1032_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1032 = &label__False_1032_impl;
            USE(label__False_1032);
            Label label_header_1115_1695_impl(this, {cursorA_486, cursorTemp_485, dest_484, elements_483, lengthA_481, lengthB_482, minGallop_487}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1115_1695 = &label_header_1115_1695_impl;
            USE(label_header_1115_1695);
            Goto(label_header_1115_1695);
            BIND(label_header_1115_1695);
            TNode<BoolT> t3272 = UncheckedCast<BoolT>(Int32TrueConstant());
            USE(implicit_cast<TNode<BoolT>>(t3272));
            Branch(implicit_cast<TNode<BoolT>>(t3272), label__True_1031, label__False_1032);
            if (label__True_1031->is_used())
            {
              BIND(label__True_1031);
              // ../../third_party/v8/builtins/array-sort.tq:1393:35
              {
                // ../../third_party/v8/builtins/array-sort.tq:1394:9
                int31_t t3273 = 0;
                TVARIABLE(Smi, nofWinsA_488_impl);
                auto nofWinsA_488 = &nofWinsA_488_impl;
                USE(nofWinsA_488);
                TNode<Smi> t3274 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3273)));
                *nofWinsA_488 = implicit_cast<TNode<Smi>>(t3274);
                // ../../third_party/v8/builtins/array-sort.tq:1395:9
                int31_t t3275 = 0;
                TVARIABLE(Smi, nofWinsB_489_impl);
                auto nofWinsB_489 = &nofWinsB_489_impl;
                USE(nofWinsB_489);
                TNode<Smi> t3276 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3275)));
                *nofWinsB_489 = implicit_cast<TNode<Smi>>(t3276);
                // ../../third_party/v8/builtins/array-sort.tq:1401:9
                {
                  Label label__True_1033_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_1033 = &label__True_1033_impl;
                  USE(label__True_1033);
                  Label label__False_1034_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1034 = &label__False_1034_impl;
                  USE(label__False_1034);
                  Label label_header_1116_1696_impl(this, {cursorA_486, cursorTemp_485, dest_484, elements_483, lengthA_481, lengthB_482, nofWinsA_488, nofWinsB_489}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1116_1696 = &label_header_1116_1696_impl;
                  USE(label_header_1116_1696);
                  Goto(label_header_1116_1696);
                  BIND(label_header_1116_1696);
                  TNode<BoolT> t3277 = UncheckedCast<BoolT>(Int32TrueConstant());
                  USE(implicit_cast<TNode<BoolT>>(t3277));
                  Branch(implicit_cast<TNode<BoolT>>(t3277), label__True_1033, label__False_1034);
                  if (label__True_1033->is_used())
                  {
                    BIND(label__True_1033);
                    // ../../third_party/v8/builtins/array-sort.tq:1401:37
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1402:11
                      // ../../third_party/v8/builtins/array-sort.tq:1404:11
                      TNode<Object> t3278 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>((*cursorA_486).value()), label_Bailout_1024));
                      USE(implicit_cast<TNode<Object>>(t3278));
                      TVARIABLE(Object, elementA_490_impl);
                      auto elementA_490 = &elementA_490_impl;
                      USE(elementA_490);
                      *elementA_490 = implicit_cast<TNode<Object>>(t3278);
                      // ../../third_party/v8/builtins/array-sort.tq:1407:11
                      TNode<Object> t3279 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>((*cursorTemp_485).value())));
                      TNode<Number> t3280 = UncheckedCast<Number>(CallCompareFn(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Object>>(t3279), implicit_cast<TNode<Object>>((*elementA_490).value()), label_Bailout_1024));
                      USE(implicit_cast<TNode<Number>>(t3280));
                      TVARIABLE(Number, order_491_impl);
                      auto order_491 = &order_491_impl;
                      USE(order_491);
                      *order_491 = implicit_cast<TNode<Number>>(t3280);
                      // ../../third_party/v8/builtins/array-sort.tq:1410:11
                      TNode<HeapObject> t3281 = UncheckedCast<HeapObject>(ReloadElements(implicit_cast<TNode<FixedArray>>(p_sortState)));
                      USE(implicit_cast<TNode<HeapObject>>(t3281));
                      *elements_483 = implicit_cast<TNode<HeapObject>>(t3281);
                      // ../../third_party/v8/builtins/array-sort.tq:1412:11
                      {
                        Label label__True_1035_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1035 = &label__True_1035_impl;
                        USE(label__True_1035);
                        Label label__False_1036_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1036 = &label__False_1036_impl;
                        USE(label__False_1036);
                        Label label_if_done_label_1117_1697_impl(this, {cursorA_486, cursorTemp_485, dest_484, lengthA_481, lengthB_482, nofWinsA_488, nofWinsB_489}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label_if_done_label_1117_1697 = &label_if_done_label_1117_1697_impl;
                        USE(label_if_done_label_1117_1697);
                        int31_t t3282 = 0;
                        TNode<Number> t3283 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3282)));
                        BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*order_491).value()), implicit_cast<TNode<Number>>(t3283), label__True_1035, label__False_1036);
                        if (label__True_1035->is_used())
                        {
                          BIND(label__True_1035);
                          // ../../third_party/v8/builtins/array-sort.tq:1412:26
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1413:13
                            CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<Code>>((*store_1111)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>((*dest_484).value()), label_Bailout_1024);
                            // ../../third_party/v8/builtins/array-sort.tq:1417:13
                            TNode<Smi> t3284 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3285 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>(t3284)));
                            *cursorA_486 = implicit_cast<TNode<Smi>>(t3285);
                            // ../../third_party/v8/builtins/array-sort.tq:1418:13
                            TNode<Smi> t3286 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3287 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3286)));
                            *dest_484 = implicit_cast<TNode<Smi>>(t3287);
                            // ../../third_party/v8/builtins/array-sort.tq:1419:13
                            TNode<Smi> t3288 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3289 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*nofWinsA_488).value()), implicit_cast<TNode<Smi>>(t3288)));
                            *nofWinsA_488 = implicit_cast<TNode<Smi>>(t3289);
                            // ../../third_party/v8/builtins/array-sort.tq:1420:13
                            TNode<Smi> t3290 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3291 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3290)));
                            *lengthA_481 = implicit_cast<TNode<Smi>>(t3291);
                            // ../../third_party/v8/builtins/array-sort.tq:1421:13
                            int31_t t3292 = 0;
                            TNode<Smi> t3293 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3292)));
                            *nofWinsB_489 = implicit_cast<TNode<Smi>>(t3293);
                            // ../../third_party/v8/builtins/array-sort.tq:1423:13
                            {
                              Label label__True_1037_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1037 = &label__True_1037_impl;
                              USE(label__True_1037);
                              Label label__False_1038_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1038 = &label__False_1038_impl;
                              USE(label__False_1038);
                              int31_t t3294 = 0;
                              TNode<Smi> t3295 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3294)));
                              TNode<BoolT> t3296 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3295)));
                              USE(implicit_cast<TNode<BoolT>>(t3296));
                              Branch(implicit_cast<TNode<BoolT>>(t3296), label__True_1037, label__False_1038);
                              if (label__True_1037->is_used())
                              {
                                BIND(label__True_1037);
                                // ../../third_party/v8/builtins/array-sort.tq:1423:31
                                Goto(label_Succeed_1025);
                              }
                              BIND(label__False_1038);
                            }
                            // ../../third_party/v8/builtins/array-sort.tq:1424:13
                            {
                              Label label__True_1039_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1039 = &label__True_1039_impl;
                              USE(label__True_1039);
                              Label label__False_1040_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1040 = &label__False_1040_impl;
                              USE(label__False_1040);
                              TNode<BoolT> t3297 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsA_488).value()), implicit_cast<TNode<Smi>>((*minGallop_487).value())));
                              USE(implicit_cast<TNode<BoolT>>(t3297));
                              Branch(implicit_cast<TNode<BoolT>>(t3297), label__True_1039, label__False_1040);
                              if (label__True_1039->is_used())
                              {
                                BIND(label__True_1039);
                                // ../../third_party/v8/builtins/array-sort.tq:1424:40
                                Goto(label__False_1034);
                              }
                              BIND(label__False_1040);
                            }
                          }
                          Goto(label_if_done_label_1117_1697);
                        }
                        if (label__False_1036->is_used())
                        {
                          BIND(label__False_1036);
                          // ../../third_party/v8/builtins/array-sort.tq:1425:18
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1426:13
                            TNode<Object> t3298 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>((*cursorTemp_485).value())));
                            CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1111)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Object>>(t3298), label_Bailout_1024);
                            // ../../third_party/v8/builtins/array-sort.tq:1431:13
                            TNode<Smi> t3299 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3300 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorTemp_485).value()), implicit_cast<TNode<Smi>>(t3299)));
                            *cursorTemp_485 = implicit_cast<TNode<Smi>>(t3300);
                            // ../../third_party/v8/builtins/array-sort.tq:1432:13
                            TNode<Smi> t3301 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3302 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3301)));
                            *dest_484 = implicit_cast<TNode<Smi>>(t3302);
                            // ../../third_party/v8/builtins/array-sort.tq:1433:13
                            TNode<Smi> t3303 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3304 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*nofWinsB_489).value()), implicit_cast<TNode<Smi>>(t3303)));
                            *nofWinsB_489 = implicit_cast<TNode<Smi>>(t3304);
                            // ../../third_party/v8/builtins/array-sort.tq:1434:13
                            TNode<Smi> t3305 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                            TNode<Smi> t3306 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3305)));
                            *lengthB_482 = implicit_cast<TNode<Smi>>(t3306);
                            // ../../third_party/v8/builtins/array-sort.tq:1435:13
                            int31_t t3307 = 0;
                            TNode<Smi> t3308 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3307)));
                            *nofWinsA_488 = implicit_cast<TNode<Smi>>(t3308);
                            // ../../third_party/v8/builtins/array-sort.tq:1437:13
                            {
                              Label label__True_1041_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1041 = &label__True_1041_impl;
                              USE(label__True_1041);
                              Label label__False_1042_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1042 = &label__False_1042_impl;
                              USE(label__False_1042);
                              int31_t t3309 = 1;
                              TNode<Smi> t3310 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3309)));
                              TNode<BoolT> t3311 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3310)));
                              USE(implicit_cast<TNode<BoolT>>(t3311));
                              Branch(implicit_cast<TNode<BoolT>>(t3311), label__True_1041, label__False_1042);
                              if (label__True_1041->is_used())
                              {
                                BIND(label__True_1041);
                                // ../../third_party/v8/builtins/array-sort.tq:1437:31
                                Goto(label_CopyA_1026);
                              }
                              BIND(label__False_1042);
                            }
                            // ../../third_party/v8/builtins/array-sort.tq:1438:13
                            {
                              Label label__True_1043_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1043 = &label__True_1043_impl;
                              USE(label__True_1043);
                              Label label__False_1044_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1044 = &label__False_1044_impl;
                              USE(label__False_1044);
                              TNode<BoolT> t3312 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsB_489).value()), implicit_cast<TNode<Smi>>((*minGallop_487).value())));
                              USE(implicit_cast<TNode<BoolT>>(t3312));
                              Branch(implicit_cast<TNode<BoolT>>(t3312), label__True_1043, label__False_1044);
                              if (label__True_1043->is_used())
                              {
                                BIND(label__True_1043);
                                // ../../third_party/v8/builtins/array-sort.tq:1438:40
                                Goto(label__False_1034);
                              }
                              BIND(label__False_1044);
                            }
                          }
                          Goto(label_if_done_label_1117_1697);
                        }
                        BIND(label_if_done_label_1117_1697);
                      }
                    }
                    Goto(label_header_1116_1696);
                  }
                  BIND(label__False_1034);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1445:9
                TNode<Smi> t3313 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3314 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*minGallop_487).value()), implicit_cast<TNode<Smi>>(t3313)));
                *minGallop_487 = implicit_cast<TNode<Smi>>(t3314);
                // ../../third_party/v8/builtins/array-sort.tq:1446:9
                TVARIABLE(BoolT, firstIteration_492_impl);
                auto firstIteration_492 = &firstIteration_492_impl;
                USE(firstIteration_492);
                TNode<BoolT> t3315 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
                *firstIteration_492 = implicit_cast<TNode<BoolT>>(t3315);
                // ../../third_party/v8/builtins/array-sort.tq:1447:9
                {
                  Label label__True_1045_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_1045 = &label__True_1045_impl;
                  USE(label__True_1045);
                  Label label__False_1046_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1046 = &label__False_1046_impl;
                  USE(label__False_1046);
                  Label label_header_1118_1698_impl(this, {cursorA_486, cursorTemp_485, dest_484, firstIteration_492, lengthA_481, lengthB_482, minGallop_487, nofWinsA_488, nofWinsB_489}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_header_1118_1698 = &label_header_1118_1698_impl;
                  USE(label_header_1118_1698);
                  Goto(label_header_1118_1698);
                  BIND(label_header_1118_1698);
                  Label label__False_1047_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1047 = &label__False_1047_impl;
                  USE(label__False_1047);
                  Label label__False_1048_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1048 = &label__False_1048_impl;
                  USE(label__False_1048);
                  TNode<Smi> t3316 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(kMinGallopWins())));
                  TNode<BoolT> t3317 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsA_488).value()), implicit_cast<TNode<Smi>>(t3316)));
                  USE(implicit_cast<TNode<BoolT>>(t3317));
                  GotoIf(implicit_cast<TNode<BoolT>>(t3317), label__True_1045);
                  TNode<Smi> t3318 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(kMinGallopWins())));
                  TNode<BoolT> t3319 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*nofWinsB_489).value()), implicit_cast<TNode<Smi>>(t3318)));
                  USE(implicit_cast<TNode<BoolT>>(t3319));
Branch(implicit_cast<TNode<BoolT>>(t3319), label__True_1045, label__False_1047);
                  BIND(label__False_1047);
Branch(implicit_cast<TNode<BoolT>>((*firstIteration_492).value()), label__True_1045, label__False_1046);
                  if (label__True_1045->is_used())
                  {
                    BIND(label__True_1045);
                    // ../../third_party/v8/builtins/array-sort.tq:1448:32
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1449:11
                      TNode<BoolT> t3320 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(false)));
                      *firstIteration_492 = implicit_cast<TNode<BoolT>>(t3320);
                      // ../../third_party/v8/builtins/array-sort.tq:1451:11
                      // ../../third_party/v8/builtins/array-sort.tq:1453:11
                      int31_t t3321 = 1;
                      int31_t t3322 = 1;
                      TNode<Smi> t3323 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3322)));
                      TNode<Smi> t3324 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*minGallop_487).value()), implicit_cast<TNode<Smi>>(t3323)));
                      USE(implicit_cast<TNode<Smi>>(t3324));
                      TNode<Smi> t3325 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3321)));
                      TNode<Smi> t3326 = UncheckedCast<Smi>(SmiMax(implicit_cast<TNode<Smi>>(t3325), implicit_cast<TNode<Smi>>(t3324)));
                      USE(implicit_cast<TNode<Smi>>(t3326));
                      *minGallop_487 = implicit_cast<TNode<Smi>>(t3326);
                      // ../../third_party/v8/builtins/array-sort.tq:1454:11
                      StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx()), implicit_cast<TNode<Object>>((*minGallop_487).value()));
                      // ../../third_party/v8/builtins/array-sort.tq:1456:11
                      TNode<Object> t3327 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>((*cursorTemp_485).value())));
                      int31_t t3328 = 1;
                      TNode<Smi> t3329 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3328)));
                      TNode<Smi> t3330 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3329)));
                      USE(implicit_cast<TNode<Smi>>(t3330));
                      TNode<Smi> t3331 = UncheckedCast<Smi>(CallGallopRight(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<Object>>(t3327), implicit_cast<TNode<Smi>>(p_baseA), implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3330), implicit_cast<TNode<Oddball>>(False()), label_Bailout_1024));
                      USE(implicit_cast<TNode<Smi>>(t3331));
                      TVARIABLE(Smi, k_493_impl);
                      auto k_493 = &k_493_impl;
                      USE(k_493);
                      *k_493 = implicit_cast<TNode<Smi>>(t3331);
                      // ../../third_party/v8/builtins/array-sort.tq:1460:11
                      // ../../third_party/v8/builtins/array-sort.tq:1461:11
                      TNode<Smi> t3332 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>((*k_493).value())));
                      USE(implicit_cast<TNode<Smi>>(t3332));
                      *nofWinsA_488 = implicit_cast<TNode<Smi>>(t3332);
                      // ../../third_party/v8/builtins/array-sort.tq:1463:11
                      {
                        Label label__True_1049_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1049 = &label__True_1049_impl;
                        USE(label__True_1049);
                        Label label__False_1050_impl(this, {cursorA_486, dest_484, lengthA_481}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1050 = &label__False_1050_impl;
                        USE(label__False_1050);
                        int31_t t3333 = 0;
                        TNode<Smi> t3334 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3333)));
                        TNode<BoolT> t3335 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*nofWinsA_488).value()), implicit_cast<TNode<Smi>>(t3334)));
                        USE(implicit_cast<TNode<BoolT>>(t3335));
                        Branch(implicit_cast<TNode<BoolT>>(t3335), label__True_1049, label__False_1050);
                        if (label__True_1049->is_used())
                        {
                          BIND(label__True_1049);
                          // ../../third_party/v8/builtins/array-sort.tq:1463:29
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1464:13
                            TNode<Smi> t3336 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>((*nofWinsA_488).value())));
                            USE(implicit_cast<TNode<Smi>>(t3336));
                            *dest_484 = implicit_cast<TNode<Smi>>(t3336);
                            // ../../third_party/v8/builtins/array-sort.tq:1465:13
                            TNode<Smi> t3337 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>((*nofWinsA_488).value())));
                            USE(implicit_cast<TNode<Smi>>(t3337));
                            *cursorA_486 = implicit_cast<TNode<Smi>>(t3337);
                            // ../../third_party/v8/builtins/array-sort.tq:1466:13
                            int31_t t3338 = 1;
                            TNode<Smi> t3339 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3338)));
                            TNode<Smi> t3340 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>(t3339)));
                            USE(implicit_cast<TNode<Smi>>(t3340));
                            int31_t t3341 = 1;
                            TNode<Smi> t3342 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3341)));
                            TNode<Smi> t3343 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3342)));
                            USE(implicit_cast<TNode<Smi>>(t3343));
                            CallCopyWithinSortArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3340), implicit_cast<TNode<Smi>>(t3343), implicit_cast<TNode<Smi>>((*nofWinsA_488).value()), label_Bailout_1024);
                            // ../../third_party/v8/builtins/array-sort.tq:1470:13
                            TNode<Smi> t3344 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>((*nofWinsA_488).value())));
                            USE(implicit_cast<TNode<Smi>>(t3344));
                            *lengthA_481 = implicit_cast<TNode<Smi>>(t3344);
                            // ../../third_party/v8/builtins/array-sort.tq:1471:13
                            {
                              Label label__True_1051_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1051 = &label__True_1051_impl;
                              USE(label__True_1051);
                              Label label__False_1052_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1052 = &label__False_1052_impl;
                              USE(label__False_1052);
                              int31_t t3345 = 0;
                              TNode<Smi> t3346 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3345)));
                              TNode<BoolT> t3347 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3346)));
                              USE(implicit_cast<TNode<BoolT>>(t3347));
                              Branch(implicit_cast<TNode<BoolT>>(t3347), label__True_1051, label__False_1052);
                              if (label__True_1051->is_used())
                              {
                                BIND(label__True_1051);
                                // ../../third_party/v8/builtins/array-sort.tq:1471:31
                                Goto(label_Succeed_1025);
                              }
                              BIND(label__False_1052);
                            }
                          }
                          Goto(label__False_1050);
                        }
                        BIND(label__False_1050);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1473:11
                      TNode<Smi> t3348 = implicit_cast<TNode<Smi>>((*dest_484).value());
                      USE(t3348);
                      TNode<Smi> t3349 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3350 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3349)));
                      *dest_484 = implicit_cast<TNode<Smi>>(t3350);
                      TNode<Smi> t3351 = implicit_cast<TNode<Smi>>((*cursorTemp_485).value());
                      USE(t3351);
                      TNode<Smi> t3352 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3353 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorTemp_485).value()), implicit_cast<TNode<Smi>>(t3352)));
                      *cursorTemp_485 = implicit_cast<TNode<Smi>>(t3353);
                      TNode<Object> t3354 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>(t3351)));
                      CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1111)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3348), implicit_cast<TNode<Object>>(t3354), label_Bailout_1024);
                      // ../../third_party/v8/builtins/array-sort.tq:1477:11
                      {
                        Label label__True_1053_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1053 = &label__True_1053_impl;
                        USE(label__True_1053);
                        Label label__False_1054_impl(this, {lengthB_482}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1054 = &label__False_1054_impl;
                        USE(label__False_1054);
                        TNode<Smi> t3355 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                        TNode<Smi> t3356 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3355)));
                        *lengthB_482 = implicit_cast<TNode<Smi>>(t3356);
                        int31_t t3357 = 1;
                        TNode<Smi> t3358 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3357)));
                        TNode<BoolT> t3359 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(t3356), implicit_cast<TNode<Smi>>(t3358)));
                        USE(implicit_cast<TNode<BoolT>>(t3359));
                        Branch(implicit_cast<TNode<BoolT>>(t3359), label__True_1053, label__False_1054);
                        if (label__True_1053->is_used())
                        {
                          BIND(label__True_1053);
                          // ../../third_party/v8/builtins/array-sort.tq:1477:31
                          Goto(label_CopyA_1026);
                        }
                        BIND(label__False_1054);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1479:11
                      TNode<Object> t3360 = UncheckedCast<Object>(CallLoad(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>((*cursorA_486).value()), label_Bailout_1024));
                      USE(implicit_cast<TNode<Object>>(t3360));
                      TVARIABLE(Object, key_494_impl);
                      auto key_494 = &key_494_impl;
                      USE(key_494);
                      *key_494 = implicit_cast<TNode<Object>>(t3360);
                      // ../../third_party/v8/builtins/array-sort.tq:1482:11
                      int31_t t3361 = 0;
                      int31_t t3362 = 1;
                      TNode<Smi> t3363 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3362)));
                      TNode<Smi> t3364 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3363)));
                      USE(implicit_cast<TNode<Smi>>(t3364));
                      TNode<Smi> t3365 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3361)));
                      TNode<Smi> t3366 = UncheckedCast<Smi>(CallGallopLeft(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad19ATTempArrayElements).code())), implicit_cast<TNode<Object>>((*key_494).value()), implicit_cast<TNode<Smi>>(t3365), implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3364), implicit_cast<TNode<Oddball>>(True()), label_Bailout_1024));
                      USE(implicit_cast<TNode<Smi>>(t3366));
                      *k_493 = implicit_cast<TNode<Smi>>(t3366);
                      // ../../third_party/v8/builtins/array-sort.tq:1485:11
                      // ../../third_party/v8/builtins/array-sort.tq:1486:11
                      TNode<Smi> t3367 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>((*k_493).value())));
                      USE(implicit_cast<TNode<Smi>>(t3367));
                      *nofWinsB_489 = implicit_cast<TNode<Smi>>(t3367);
                      // ../../third_party/v8/builtins/array-sort.tq:1488:11
                      {
                        Label label__True_1055_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1055 = &label__True_1055_impl;
                        USE(label__True_1055);
                        Label label__False_1056_impl(this, {cursorTemp_485, dest_484, lengthB_482}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1056 = &label__False_1056_impl;
                        USE(label__False_1056);
                        int31_t t3368 = 0;
                        TNode<Smi> t3369 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3368)));
                        TNode<BoolT> t3370 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*nofWinsB_489).value()), implicit_cast<TNode<Smi>>(t3369)));
                        USE(implicit_cast<TNode<BoolT>>(t3370));
                        Branch(implicit_cast<TNode<BoolT>>(t3370), label__True_1055, label__False_1056);
                        if (label__True_1055->is_used())
                        {
                          BIND(label__True_1055);
                          // ../../third_party/v8/builtins/array-sort.tq:1488:29
                          {
                            // ../../third_party/v8/builtins/array-sort.tq:1489:13
                            TNode<Smi> t3371 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>((*nofWinsB_489).value())));
                            USE(implicit_cast<TNode<Smi>>(t3371));
                            *dest_484 = implicit_cast<TNode<Smi>>(t3371);
                            // ../../third_party/v8/builtins/array-sort.tq:1490:13
                            TNode<Smi> t3372 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorTemp_485).value()), implicit_cast<TNode<Smi>>((*nofWinsB_489).value())));
                            USE(implicit_cast<TNode<Smi>>(t3372));
                            *cursorTemp_485 = implicit_cast<TNode<Smi>>(t3372);
                            // ../../third_party/v8/builtins/array-sort.tq:1491:13
                            int31_t t3373 = 1;
                            TNode<Smi> t3374 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3373)));
                            TNode<Smi> t3375 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3374)));
                            USE(implicit_cast<TNode<Smi>>(t3375));
                            int31_t t3376 = 1;
                            TNode<Smi> t3377 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3376)));
                            TNode<Smi> t3378 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorTemp_485).value()), implicit_cast<TNode<Smi>>(t3377)));
                            USE(implicit_cast<TNode<Smi>>(t3378));
                            CallCopyFromTempArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3375), implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>(t3378), implicit_cast<TNode<Smi>>((*nofWinsB_489).value()), label_Bailout_1024);
                            // ../../third_party/v8/builtins/array-sort.tq:1495:13
                            TNode<Smi> t3379 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>((*nofWinsB_489).value())));
                            USE(implicit_cast<TNode<Smi>>(t3379));
                            *lengthB_482 = implicit_cast<TNode<Smi>>(t3379);
                            // ../../third_party/v8/builtins/array-sort.tq:1496:13
                            {
                              Label label__True_1057_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1057 = &label__True_1057_impl;
                              USE(label__True_1057);
                              Label label__False_1058_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1058 = &label__False_1058_impl;
                              USE(label__False_1058);
                              int31_t t3380 = 1;
                              TNode<Smi> t3381 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3380)));
                              TNode<BoolT> t3382 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3381)));
                              USE(implicit_cast<TNode<BoolT>>(t3382));
                              Branch(implicit_cast<TNode<BoolT>>(t3382), label__True_1057, label__False_1058);
                              if (label__True_1057->is_used())
                              {
                                BIND(label__True_1057);
                                // ../../third_party/v8/builtins/array-sort.tq:1496:31
                                Goto(label_CopyA_1026);
                              }
                              BIND(label__False_1058);
                            }
                            // ../../third_party/v8/builtins/array-sort.tq:1500:13
                            {
                              Label label__True_1059_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__True_1059 = &label__True_1059_impl;
                              USE(label__True_1059);
                              Label label__False_1060_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                              Label* label__False_1060 = &label__False_1060_impl;
                              USE(label__False_1060);
                              int31_t t3383 = 0;
                              TNode<Smi> t3384 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3383)));
                              TNode<BoolT> t3385 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3384)));
                              USE(implicit_cast<TNode<BoolT>>(t3385));
                              Branch(implicit_cast<TNode<BoolT>>(t3385), label__True_1059, label__False_1060);
                              if (label__True_1059->is_used())
                              {
                                BIND(label__True_1059);
                                // ../../third_party/v8/builtins/array-sort.tq:1500:31
                                Goto(label_Succeed_1025);
                              }
                              BIND(label__False_1060);
                            }
                          }
                          Goto(label__False_1056);
                        }
                        BIND(label__False_1056);
                      }
                      // ../../third_party/v8/builtins/array-sort.tq:1502:11
                      TNode<Smi> t3386 = implicit_cast<TNode<Smi>>((*cursorA_486).value());
                      USE(t3386);
                      TNode<Smi> t3387 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3388 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>(t3387)));
                      *cursorA_486 = implicit_cast<TNode<Smi>>(t3388);
                      TNode<Smi> t3389 = implicit_cast<TNode<Smi>>((*dest_484).value());
                      USE(t3389);
                      TNode<Smi> t3390 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3391 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3390)));
                      *dest_484 = implicit_cast<TNode<Smi>>(t3391);
                      CopyElement(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*load_1110)), implicit_cast<TNode<Code>>((*store_1111)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3386), implicit_cast<TNode<Smi>>(t3389), label_Bailout_1024);
                      // ../../third_party/v8/builtins/array-sort.tq:1505:11
                      {
                        Label label__True_1061_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_1061 = &label__True_1061_impl;
                        USE(label__True_1061);
                        Label label__False_1062_impl(this, {lengthA_481}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_1062 = &label__False_1062_impl;
                        USE(label__False_1062);
                        TNode<Smi> t3392 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                        TNode<Smi> t3393 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthA_481).value()), implicit_cast<TNode<Smi>>(t3392)));
                        *lengthA_481 = implicit_cast<TNode<Smi>>(t3393);
                        int31_t t3394 = 0;
                        TNode<Smi> t3395 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3394)));
                        TNode<BoolT> t3396 = UncheckedCast<BoolT>(SmiEqual(implicit_cast<TNode<Smi>>(t3393), implicit_cast<TNode<Smi>>(t3395)));
                        USE(implicit_cast<TNode<BoolT>>(t3396));
                        Branch(implicit_cast<TNode<BoolT>>(t3396), label__True_1061, label__False_1062);
                        if (label__True_1061->is_used())
                        {
                          BIND(label__True_1061);
                          // ../../third_party/v8/builtins/array-sort.tq:1505:31
                          Goto(label_Succeed_1025);
                        }
                        BIND(label__False_1062);
                      }
                    }
                    Goto(label_header_1118_1698);
                  }
                  BIND(label__False_1046);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1507:9
                TNode<Smi> t3397 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3398 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*minGallop_487).value()), implicit_cast<TNode<Smi>>(t3397)));
                *minGallop_487 = implicit_cast<TNode<Smi>>(t3398);
                // ../../third_party/v8/builtins/array-sort.tq:1508:9
                StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx()), implicit_cast<TNode<Object>>((*minGallop_487).value()));
              }
              Goto(label_header_1115_1695);
            }
            BIND(label__False_1032);
          }
        }
        Goto(label_try_done_1113_1693);
      }
      if (label_Succeed_1025->is_used())
      {
        BIND(label_Succeed_1025);
        // ../../third_party/v8/builtins/array-sort.tq:1511:19
        {
          // ../../third_party/v8/builtins/array-sort.tq:1512:7
          {
            Label label__True_1063_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1063 = &label__True_1063_impl;
            USE(label__True_1063);
            Label label__False_1064_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1064 = &label__False_1064_impl;
            USE(label__False_1064);
            int31_t t3399 = 0;
            TNode<Smi> t3400 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3399)));
            TNode<BoolT> t3401 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3400)));
            USE(implicit_cast<TNode<BoolT>>(t3401));
            Branch(implicit_cast<TNode<BoolT>>(t3401), label__True_1063, label__False_1064);
            if (label__True_1063->is_used())
            {
              BIND(label__True_1063);
              // ../../third_party/v8/builtins/array-sort.tq:1512:24
              {
                // ../../third_party/v8/builtins/array-sort.tq:1513:9
                // ../../third_party/v8/builtins/array-sort.tq:1514:9
                int31_t t3402 = 1;
                TNode<Smi> t3403 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3402)));
                TNode<Smi> t3404 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*lengthB_482).value()), implicit_cast<TNode<Smi>>(t3403)));
                USE(implicit_cast<TNode<Smi>>(t3404));
                TNode<Smi> t3405 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3404)));
                USE(implicit_cast<TNode<Smi>>(t3405));
                int31_t t3406 = 0;
                TNode<Smi> t3407 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3406)));
                CallCopyFromTempArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3405), implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>(t3407), implicit_cast<TNode<Smi>>((*lengthB_482).value()), label_Bailout_1024);
              }
              Goto(label__False_1064);
            }
            BIND(label__False_1064);
          }
        }
        Goto(label_try_done_1113_1693);
      }
      if (label_CopyA_1026->is_used())
      {
        BIND(label_CopyA_1026);
        // ../../third_party/v8/builtins/array-sort.tq:1519:17
        {
          // ../../third_party/v8/builtins/array-sort.tq:1520:7
          // ../../third_party/v8/builtins/array-sort.tq:1523:7
          TNode<Smi> t3408 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>((*lengthA_481).value())));
          USE(implicit_cast<TNode<Smi>>(t3408));
          *dest_484 = implicit_cast<TNode<Smi>>(t3408);
          // ../../third_party/v8/builtins/array-sort.tq:1524:7
          TNode<Smi> t3409 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>((*lengthA_481).value())));
          USE(implicit_cast<TNode<Smi>>(t3409));
          *cursorA_486 = implicit_cast<TNode<Smi>>(t3409);
          // ../../third_party/v8/builtins/array-sort.tq:1525:7
          int31_t t3410 = 1;
          TNode<Smi> t3411 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3410)));
          TNode<Smi> t3412 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*cursorA_486).value()), implicit_cast<TNode<Smi>>(t3411)));
          USE(implicit_cast<TNode<Smi>>(t3412));
          int31_t t3413 = 1;
          TNode<Smi> t3414 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3413)));
          TNode<Smi> t3415 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Smi>>(t3414)));
          USE(implicit_cast<TNode<Smi>>(t3415));
          CallCopyWithinSortArray(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>(t3412), implicit_cast<TNode<Smi>>(t3415), implicit_cast<TNode<Smi>>((*lengthA_481).value()), label_Bailout_1024);
          // ../../third_party/v8/builtins/array-sort.tq:1528:7
          TNode<Object> t3416 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>((*tempArray_1112)), implicit_cast<TNode<Smi>>((*cursorTemp_485).value())));
          CallStore(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Code>>((*store_1111)), implicit_cast<TNode<HeapObject>>((*elements_483).value()), implicit_cast<TNode<Smi>>((*dest_484).value()), implicit_cast<TNode<Object>>(t3416), label_Bailout_1024);
        }
        Goto(label_try_done_1113_1693);
      }
      BIND(label_try_done_1113_1693);
    }
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::ComputeMinRunLength(TNode<Smi> p_nArg) {
  TVARIABLE(Smi, _return_495_impl);
  auto _return_495 = &_return_495_impl;
  USE(_return_495);
  Label label_macro_end_1699_impl(this, {_return_495}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1699 = &label_macro_end_1699_impl;
  USE(label_macro_end_1699);
  // ../../third_party/v8/builtins/array-sort.tq:1543:45
  {
    // ../../third_party/v8/builtins/array-sort.tq:1544:5
    TVARIABLE(Smi, n_496_impl);
    auto n_496 = &n_496_impl;
    USE(n_496);
    *n_496 = implicit_cast<TNode<Smi>>(p_nArg);
    // ../../third_party/v8/builtins/array-sort.tq:1545:5
    int31_t t3417 = 0;
    TVARIABLE(Smi, r_497_impl);
    auto r_497 = &r_497_impl;
    USE(r_497);
    TNode<Smi> t3418 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3417)));
    *r_497 = implicit_cast<TNode<Smi>>(t3418);
    // ../../third_party/v8/builtins/array-sort.tq:1547:5
    // ../../third_party/v8/builtins/array-sort.tq:1548:5
    {
      Label label__True_1065_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1065 = &label__True_1065_impl;
      USE(label__True_1065);
      Label label__False_1066_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1066 = &label__False_1066_impl;
      USE(label__False_1066);
      Label label_header_1119_1700_impl(this, {n_496, r_497}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1119_1700 = &label_header_1119_1700_impl;
      USE(label_header_1119_1700);
      Goto(label_header_1119_1700);
      BIND(label_header_1119_1700);
      int31_t t3419 = 64;
      TNode<Smi> t3420 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3419)));
      TNode<BoolT> t3421 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*n_496).value()), implicit_cast<TNode<Smi>>(t3420)));
      USE(implicit_cast<TNode<BoolT>>(t3421));
      Branch(implicit_cast<TNode<BoolT>>(t3421), label__True_1065, label__False_1066);
      if (label__True_1065->is_used())
      {
        BIND(label__True_1065);
        // ../../third_party/v8/builtins/array-sort.tq:1548:21
        {
          // ../../third_party/v8/builtins/array-sort.tq:1549:7
          int31_t t3422 = 1;
          TNode<Smi> t3423 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3422)));
          TNode<Smi> t3424 = UncheckedCast<Smi>(SmiAnd(implicit_cast<TNode<Smi>>((*n_496).value()), implicit_cast<TNode<Smi>>(t3423)));
          USE(implicit_cast<TNode<Smi>>(t3424));
          TNode<Smi> t3425 = UncheckedCast<Smi>(SmiOr(implicit_cast<TNode<Smi>>((*r_497).value()), implicit_cast<TNode<Smi>>(t3424)));
          USE(implicit_cast<TNode<Smi>>(t3425));
          *r_497 = implicit_cast<TNode<Smi>>(t3425);
          // ../../third_party/v8/builtins/array-sort.tq:1550:7
          int31_t t3426 = 1;
          TNode<Smi> t3427 = UncheckedCast<Smi>(SmiShr(implicit_cast<TNode<Smi>>((*n_496).value()), implicit_cast<int31_t>(t3426)));
          USE(implicit_cast<TNode<Smi>>(t3427));
          *n_496 = implicit_cast<TNode<Smi>>(t3427);
        }
        Goto(label_header_1119_1700);
      }
      BIND(label__False_1066);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1553:5
    TNode<Smi> t3428 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*n_496).value()), implicit_cast<TNode<Smi>>((*r_497).value())));
    USE(implicit_cast<TNode<Smi>>(t3428));
    TNode<Smi> minRunLength_1120_impl;
    auto minRunLength_1120 = &minRunLength_1120_impl;
    USE(minRunLength_1120);
    *minRunLength_1120 = implicit_cast<TNode<Smi>>(t3428);
    // ../../third_party/v8/builtins/array-sort.tq:1554:5
    // ../../third_party/v8/builtins/array-sort.tq:1555:5
    *_return_495 = implicit_cast<TNode<Smi>>((*minRunLength_1120));
    Goto(label_macro_end_1699);
  }
  BIND(label_macro_end_1699);
  return implicit_cast<TNode<Smi>>((*_return_495).value());
}

compiler::TNode<BoolT> ArrayBuiltinsFromDSLAssembler::RunInvariantEstablished(TNode<FixedArray> p_pendingRuns, TNode<Smi> p_n) {
  TVARIABLE(BoolT, _return_498_impl);
  auto _return_498 = &_return_498_impl;
  USE(_return_498);
  Label label_macro_end_1701_impl(this, {_return_498}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1701 = &label_macro_end_1701_impl;
  USE(label_macro_end_1701);
  // ../../third_party/v8/builtins/array-sort.tq:1559:72
  {
    // ../../third_party/v8/builtins/array-sort.tq:1560:5
    {
      Label label__True_1067_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1067 = &label__True_1067_impl;
      USE(label__True_1067);
      Label label__False_1068_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1068 = &label__False_1068_impl;
      USE(label__False_1068);
      int31_t t3429 = 2;
      TNode<Smi> t3430 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3429)));
      TNode<BoolT> t3431 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>(p_n), implicit_cast<TNode<Smi>>(t3430)));
      USE(implicit_cast<TNode<BoolT>>(t3431));
      Branch(implicit_cast<TNode<BoolT>>(t3431), label__True_1067, label__False_1068);
      if (label__True_1067->is_used())
      {
        BIND(label__True_1067);
        // ../../third_party/v8/builtins/array-sort.tq:1560:16
        TNode<BoolT> t3432 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
        *_return_498 = implicit_cast<TNode<BoolT>>(t3432);
        Goto(label_macro_end_1701);
      }
      BIND(label__False_1068);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1562:5
    TNode<Smi> t3433 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(p_n)));
    USE(implicit_cast<TNode<Smi>>(t3433));
    TNode<Smi> runLengthN_1121_impl;
    auto runLengthN_1121 = &runLengthN_1121_impl;
    USE(runLengthN_1121);
    *runLengthN_1121 = implicit_cast<TNode<Smi>>(t3433);
    // ../../third_party/v8/builtins/array-sort.tq:1563:5
    int31_t t3434 = 1;
    TNode<Smi> t3435 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3434)));
    TNode<Smi> t3436 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_n), implicit_cast<TNode<Smi>>(t3435)));
    USE(implicit_cast<TNode<Smi>>(t3436));
    TNode<Smi> t3437 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(t3436)));
    USE(implicit_cast<TNode<Smi>>(t3437));
    TNode<Smi> runLengthNM_1122_impl;
    auto runLengthNM_1122 = &runLengthNM_1122_impl;
    USE(runLengthNM_1122);
    *runLengthNM_1122 = implicit_cast<TNode<Smi>>(t3437);
    // ../../third_party/v8/builtins/array-sort.tq:1564:5
    int31_t t3438 = 2;
    TNode<Smi> t3439 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3438)));
    TNode<Smi> t3440 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_n), implicit_cast<TNode<Smi>>(t3439)));
    USE(implicit_cast<TNode<Smi>>(t3440));
    TNode<Smi> t3441 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>(p_pendingRuns), implicit_cast<TNode<Smi>>(t3440)));
    USE(implicit_cast<TNode<Smi>>(t3441));
    TNode<Smi> runLengthNMM_1123_impl;
    auto runLengthNMM_1123 = &runLengthNMM_1123_impl;
    USE(runLengthNMM_1123);
    *runLengthNMM_1123 = implicit_cast<TNode<Smi>>(t3441);
    // ../../third_party/v8/builtins/array-sort.tq:1566:5
    TNode<Smi> t3442 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*runLengthNM_1122)), implicit_cast<TNode<Smi>>((*runLengthN_1121))));
    USE(implicit_cast<TNode<Smi>>(t3442));
    TNode<BoolT> t3443 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*runLengthNMM_1123)), implicit_cast<TNode<Smi>>(t3442)));
    USE(implicit_cast<TNode<BoolT>>(t3443));
    *_return_498 = implicit_cast<TNode<BoolT>>(t3443);
    Goto(label_macro_end_1701);
  }
  BIND(label_macro_end_1701);
  return implicit_cast<TNode<BoolT>>((*_return_498).value());
}

void ArrayBuiltinsFromDSLAssembler::MergeCollapse(TNode<Context> p_context, TNode<FixedArray> p_sortState, Label* label_Bailout_1069) {
  Label label_macro_end_1702_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1702 = &label_macro_end_1702_impl;
  USE(label_macro_end_1702);
  // ../../third_party/v8/builtins/array-sort.tq:1579:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:1580:5
    TNode<Object> t3444 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsIdx())));
    TNode<FixedArray> t3445 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(t3444)));
    USE(implicit_cast<TNode<FixedArray>>(t3445));
    TNode<FixedArray> pendingRuns_1124_impl;
    auto pendingRuns_1124 = &pendingRuns_1124_impl;
    USE(pendingRuns_1124);
    *pendingRuns_1124 = implicit_cast<TNode<FixedArray>>(t3445);
    // ../../third_party/v8/builtins/array-sort.tq:1584:5
    {
      Label label__True_1070_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1070 = &label__True_1070_impl;
      USE(label__True_1070);
      Label label__False_1071_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1071 = &label__False_1071_impl;
      USE(label__False_1071);
      Label label_header_1125_1703_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1125_1703 = &label_header_1125_1703_impl;
      USE(label_header_1125_1703);
      Goto(label_header_1125_1703);
      BIND(label_header_1125_1703);
      TNode<Smi> t3446 = UncheckedCast<Smi>(GetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState)));
      USE(implicit_cast<TNode<Smi>>(t3446));
      int31_t t3447 = 1;
      TNode<Smi> t3448 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3447)));
      TNode<BoolT> t3449 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>(t3446), implicit_cast<TNode<Smi>>(t3448)));
      USE(implicit_cast<TNode<BoolT>>(t3449));
      Branch(implicit_cast<TNode<BoolT>>(t3449), label__True_1070, label__False_1071);
      if (label__True_1070->is_used())
      {
        BIND(label__True_1070);
        // ../../third_party/v8/builtins/array-sort.tq:1584:47
        {
          // ../../third_party/v8/builtins/array-sort.tq:1585:7
          TNode<Smi> t3450 = UncheckedCast<Smi>(GetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t3450));
          int31_t t3451 = 2;
          TNode<Smi> t3452 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3451)));
          TNode<Smi> t3453 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3450), implicit_cast<TNode<Smi>>(t3452)));
          USE(implicit_cast<TNode<Smi>>(t3453));
          TVARIABLE(Smi, n_499_impl);
          auto n_499 = &n_499_impl;
          USE(n_499);
          *n_499 = implicit_cast<TNode<Smi>>(t3453);
          // ../../third_party/v8/builtins/array-sort.tq:1587:7
          {
            Label label__True_1072_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1072 = &label__True_1072_impl;
            USE(label__True_1072);
            Label label__False_1073_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1073 = &label__False_1073_impl;
            USE(label__False_1073);
            Label label_if_done_label_1126_1704_impl(this, {n_499}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1126_1704 = &label_if_done_label_1126_1704_impl;
            USE(label_if_done_label_1126_1704);
            Label label__False_1074_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1074 = &label__False_1074_impl;
            USE(label__False_1074);
            int31_t t3454 = 1;
            TNode<Smi> t3455 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3454)));
            TNode<Smi> t3456 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*n_499).value()), implicit_cast<TNode<Smi>>(t3455)));
            USE(implicit_cast<TNode<Smi>>(t3456));
            TNode<BoolT> t3457 = UncheckedCast<BoolT>(RunInvariantEstablished(implicit_cast<TNode<FixedArray>>((*pendingRuns_1124)), implicit_cast<TNode<Smi>>(t3456)));
            USE(implicit_cast<TNode<BoolT>>(t3457));
            TNode<BoolT> t3458 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t3457)));
            USE(implicit_cast<TNode<BoolT>>(t3458));
            GotoIf(implicit_cast<TNode<BoolT>>(t3458), label__True_1072);
            TNode<BoolT> t3459 = UncheckedCast<BoolT>(RunInvariantEstablished(implicit_cast<TNode<FixedArray>>((*pendingRuns_1124)), implicit_cast<TNode<Smi>>((*n_499).value())));
            USE(implicit_cast<TNode<BoolT>>(t3459));
            TNode<BoolT> t3460 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t3459)));
            USE(implicit_cast<TNode<BoolT>>(t3460));
Branch(implicit_cast<TNode<BoolT>>(t3460), label__True_1072, label__False_1073);
            if (label__True_1072->is_used())
            {
              BIND(label__True_1072);
              // ../../third_party/v8/builtins/array-sort.tq:1588:53
              {
                // ../../third_party/v8/builtins/array-sort.tq:1589:9
                {
                  Label label__True_1075_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_1075 = &label__True_1075_impl;
                  USE(label__True_1075);
                  Label label__False_1076_impl(this, {n_499}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1076 = &label__False_1076_impl;
                  USE(label__False_1076);
                  int31_t t3461 = 1;
                  TNode<Smi> t3462 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3461)));
                  TNode<Smi> t3463 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*n_499).value()), implicit_cast<TNode<Smi>>(t3462)));
                  USE(implicit_cast<TNode<Smi>>(t3463));
                  TNode<Smi> t3464 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1124)), implicit_cast<TNode<Smi>>(t3463)));
                  USE(implicit_cast<TNode<Smi>>(t3464));
                  int31_t t3465 = 1;
                  TNode<Smi> t3466 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3465)));
                  TNode<Smi> t3467 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*n_499).value()), implicit_cast<TNode<Smi>>(t3466)));
                  USE(implicit_cast<TNode<Smi>>(t3467));
                  TNode<Smi> t3468 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1124)), implicit_cast<TNode<Smi>>(t3467)));
                  USE(implicit_cast<TNode<Smi>>(t3468));
                  TNode<BoolT> t3469 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>(t3464), implicit_cast<TNode<Smi>>(t3468)));
                  USE(implicit_cast<TNode<BoolT>>(t3469));
                  Branch(implicit_cast<TNode<BoolT>>(t3469), label__True_1075, label__False_1076);
                  if (label__True_1075->is_used())
                  {
                    BIND(label__True_1075);
                    // ../../third_party/v8/builtins/array-sort.tq:1590:54
                    {
                      // ../../third_party/v8/builtins/array-sort.tq:1591:11
                      TNode<Smi> t3470 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                      TNode<Smi> t3471 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*n_499).value()), implicit_cast<TNode<Smi>>(t3470)));
                      *n_499 = implicit_cast<TNode<Smi>>(t3471);
                    }
                    Goto(label__False_1076);
                  }
                  BIND(label__False_1076);
                }
                // ../../third_party/v8/builtins/array-sort.tq:1594:9
                CallMergeAt(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*n_499).value()), label_Bailout_1069);
              }
              Goto(label_if_done_label_1126_1704);
            }
            if (label__False_1073->is_used())
            {
              BIND(label__False_1073);
              // ../../third_party/v8/builtins/array-sort.tq:1595:14
              {
                Label label__True_1077_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_1077 = &label__True_1077_impl;
                USE(label__True_1077);
                Label label__False_1078_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_1078 = &label__False_1078_impl;
                USE(label__False_1078);
                Label label_if_done_label_1127_1705_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_if_done_label_1127_1705 = &label_if_done_label_1127_1705_impl;
                USE(label_if_done_label_1127_1705);
                TNode<Smi> t3472 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1124)), implicit_cast<TNode<Smi>>((*n_499).value())));
                USE(implicit_cast<TNode<Smi>>(t3472));
                int31_t t3473 = 1;
                TNode<Smi> t3474 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3473)));
                TNode<Smi> t3475 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*n_499).value()), implicit_cast<TNode<Smi>>(t3474)));
                USE(implicit_cast<TNode<Smi>>(t3475));
                TNode<Smi> t3476 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_1124)), implicit_cast<TNode<Smi>>(t3475)));
                USE(implicit_cast<TNode<Smi>>(t3476));
                TNode<BoolT> t3477 = UncheckedCast<BoolT>(SmiLessThanOrEqual(implicit_cast<TNode<Smi>>(t3472), implicit_cast<TNode<Smi>>(t3476)));
                USE(implicit_cast<TNode<BoolT>>(t3477));
                Branch(implicit_cast<TNode<BoolT>>(t3477), label__True_1077, label__False_1078);
                if (label__True_1077->is_used())
                {
                  BIND(label__True_1077);
                  // ../../third_party/v8/builtins/array-sort.tq:1597:52
                  {
                    // ../../third_party/v8/builtins/array-sort.tq:1598:9
                    CallMergeAt(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*n_499).value()), label_Bailout_1069);
                  }
                  Goto(label_if_done_label_1127_1705);
                }
                if (label__False_1078->is_used())
                {
                  BIND(label__False_1078);
                  // ../../third_party/v8/builtins/array-sort.tq:1599:14
                  {
                    // ../../third_party/v8/builtins/array-sort.tq:1600:9
                    Goto(label__False_1071);
                  }
                }
                BIND(label_if_done_label_1127_1705);
              }
              Goto(label_if_done_label_1126_1704);
            }
            BIND(label_if_done_label_1126_1704);
          }
        }
        Goto(label_header_1125_1703);
      }
      BIND(label__False_1071);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::MergeForceCollapse(TNode<Context> p_context, TNode<FixedArray> p_sortState, Label* label_Bailout_1079) {
  Label label_macro_end_1706_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1706 = &label_macro_end_1706_impl;
  USE(label_macro_end_1706);
  // ../../third_party/v8/builtins/array-sort.tq:1608:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:1609:5
    TNode<Object> t3478 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsIdx())));
    TNode<FixedArray> t3479 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(t3478)));
    USE(implicit_cast<TNode<FixedArray>>(t3479));
    TVARIABLE(FixedArray, pendingRuns_500_impl);
    auto pendingRuns_500 = &pendingRuns_500_impl;
    USE(pendingRuns_500);
    *pendingRuns_500 = implicit_cast<TNode<FixedArray>>(t3479);
    // ../../third_party/v8/builtins/array-sort.tq:1613:5
    {
      Label label__True_1080_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1080 = &label__True_1080_impl;
      USE(label__True_1080);
      Label label__False_1081_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1081 = &label__False_1081_impl;
      USE(label__False_1081);
      Label label_header_1128_1707_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1128_1707 = &label_header_1128_1707_impl;
      USE(label_header_1128_1707);
      Goto(label_header_1128_1707);
      BIND(label_header_1128_1707);
      TNode<Smi> t3480 = UncheckedCast<Smi>(GetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState)));
      USE(implicit_cast<TNode<Smi>>(t3480));
      int31_t t3481 = 1;
      TNode<Smi> t3482 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3481)));
      TNode<BoolT> t3483 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>(t3480), implicit_cast<TNode<Smi>>(t3482)));
      USE(implicit_cast<TNode<BoolT>>(t3483));
      Branch(implicit_cast<TNode<BoolT>>(t3483), label__True_1080, label__False_1081);
      if (label__True_1080->is_used())
      {
        BIND(label__True_1080);
        // ../../third_party/v8/builtins/array-sort.tq:1613:47
        {
          // ../../third_party/v8/builtins/array-sort.tq:1614:7
          TNode<Smi> t3484 = UncheckedCast<Smi>(GetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState)));
          USE(implicit_cast<TNode<Smi>>(t3484));
          int31_t t3485 = 2;
          TNode<Smi> t3486 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3485)));
          TNode<Smi> t3487 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3484), implicit_cast<TNode<Smi>>(t3486)));
          USE(implicit_cast<TNode<Smi>>(t3487));
          TVARIABLE(Smi, n_501_impl);
          auto n_501 = &n_501_impl;
          USE(n_501);
          *n_501 = implicit_cast<TNode<Smi>>(t3487);
          // ../../third_party/v8/builtins/array-sort.tq:1616:7
          {
            Label label__True_1082_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1082 = &label__True_1082_impl;
            USE(label__True_1082);
            Label label__False_1083_impl(this, {n_501}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1083 = &label__False_1083_impl;
            USE(label__False_1083);
            Label label__True_1084_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1084 = &label__True_1084_impl;
            USE(label__True_1084);
            int31_t t3488 = 0;
            TNode<Smi> t3489 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3488)));
            TNode<BoolT> t3490 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*n_501).value()), implicit_cast<TNode<Smi>>(t3489)));
            USE(implicit_cast<TNode<BoolT>>(t3490));
            GotoIfNot(implicit_cast<TNode<BoolT>>(t3490), label__False_1083);
            int31_t t3491 = 1;
            TNode<Smi> t3492 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3491)));
            TNode<Smi> t3493 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*n_501).value()), implicit_cast<TNode<Smi>>(t3492)));
            USE(implicit_cast<TNode<Smi>>(t3493));
            TNode<Smi> t3494 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_500).value()), implicit_cast<TNode<Smi>>(t3493)));
            USE(implicit_cast<TNode<Smi>>(t3494));
            int31_t t3495 = 1;
            TNode<Smi> t3496 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3495)));
            TNode<Smi> t3497 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*n_501).value()), implicit_cast<TNode<Smi>>(t3496)));
            USE(implicit_cast<TNode<Smi>>(t3497));
            TNode<Smi> t3498 = UncheckedCast<Smi>(GetPendingRunLength(implicit_cast<TNode<FixedArray>>((*pendingRuns_500).value()), implicit_cast<TNode<Smi>>(t3497)));
            USE(implicit_cast<TNode<Smi>>(t3498));
            TNode<BoolT> t3499 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>(t3494), implicit_cast<TNode<Smi>>(t3498)));
            USE(implicit_cast<TNode<BoolT>>(t3499));
Branch(implicit_cast<TNode<BoolT>>(t3499), label__True_1082, label__False_1083);
            if (label__True_1082->is_used())
            {
              BIND(label__True_1082);
              // ../../third_party/v8/builtins/array-sort.tq:1618:56
              {
                // ../../third_party/v8/builtins/array-sort.tq:1619:9
                TNode<Smi> t3500 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3501 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*n_501).value()), implicit_cast<TNode<Smi>>(t3500)));
                *n_501 = implicit_cast<TNode<Smi>>(t3501);
              }
              Goto(label__False_1083);
            }
            BIND(label__False_1083);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1621:7
          CallMergeAt(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*n_501).value()), label_Bailout_1079);
        }
        Goto(label_header_1128_1707);
      }
      BIND(label__False_1081);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::InitializeSortState(TNode<FixedArray> p_sortState) {
  Label label_macro_end_1708_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1708 = &label_macro_end_1708_impl;
  USE(label_macro_end_1708);
  // ../../third_party/v8/builtins/array-sort.tq:1625:52
  {
    // ../../third_party/v8/builtins/array-sort.tq:1626:5
    TNode<Smi> t3502 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(kMinGallopWins())));
    USE(implicit_cast<TNode<Smi>>(t3502));
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kMinGallopIdx()), implicit_cast<TNode<Object>>(t3502));
    // ../../third_party/v8/builtins/array-sort.tq:1627:5
    int31_t t3503 = 0;
    TNode<Smi> t3504 = UncheckedCast<Smi>(SmiConstant(implicit_cast<int31_t>(t3503)));
    USE(implicit_cast<TNode<Smi>>(t3504));
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kTempArraySizeIdx()), implicit_cast<TNode<Object>>(t3504));
    // ../../third_party/v8/builtins/array-sort.tq:1629:5
    int31_t t3505 = 0;
    TNode<Smi> t3506 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3505)));
    SetPendingRunsSize(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>(t3506));
    // ../../third_party/v8/builtins/array-sort.tq:1630:5
    TNode<IntPtrT> t3507 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<int31_t>(kMaxMergePending())));
    USE(implicit_cast<TNode<IntPtrT>>(t3507));
    TNode<FixedArray> t3508 = UncheckedCast<FixedArray>(AllocateZeroedFixedArray(implicit_cast<TNode<IntPtrT>>(t3507)));
    USE(implicit_cast<TNode<FixedArray>>(t3508));
    TVARIABLE(FixedArray, pendingRuns_502_impl);
    auto pendingRuns_502 = &pendingRuns_502_impl;
    USE(pendingRuns_502);
    *pendingRuns_502 = implicit_cast<TNode<FixedArray>>(t3508);
    // ../../third_party/v8/builtins/array-sort.tq:1632:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kPendingRunsIdx()), implicit_cast<TNode<Object>>((*pendingRuns_502).value()));
  }
}

void ArrayBuiltinsFromDSLAssembler::InitializeSortStateAccessor25ATGenericElementsAccessor(TNode<FixedArray> p_sortState) {
  Label label_macro_end_1709_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1709 = &label_macro_end_1709_impl;
  USE(label_macro_end_1709);
  // ../../third_party/v8/builtins/array-sort.tq:1642:79
  {
    // ../../third_party/v8/builtins/array-sort.tq:1643:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx()), implicit_cast<TNode<Object>>(kGenericElementsAccessorId()));
    // ../../third_party/v8/builtins/array-sort.tq:1644:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kLoadFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad25ATGenericElementsAccessor).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1645:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kStoreFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kStore25ATGenericElementsAccessor).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1646:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kCanUseSameAccessorFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kCanUseSameAccessor25ATGenericElementsAccessor).code())));
  }
}

void ArrayBuiltinsFromDSLAssembler::ArrayTimSortImpl(TNode<Context> p_context, TNode<FixedArray> p_sortState, TNode<Smi> p_length, Label* label_Bailout_1085) {
  Label label_macro_end_1710_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1710 = &label_macro_end_1710_impl;
  USE(label_macro_end_1710);
  // ../../third_party/v8/builtins/array-sort.tq:1651:18
  {
    // ../../third_party/v8/builtins/array-sort.tq:1652:5
    InitializeSortState(implicit_cast<TNode<FixedArray>>(p_sortState));
    // ../../third_party/v8/builtins/array-sort.tq:1654:5
    {
      Label label__True_1086_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1086 = &label__True_1086_impl;
      USE(label__True_1086);
      Label label__False_1087_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1087 = &label__False_1087_impl;
      USE(label__False_1087);
      int31_t t3509 = 2;
      TNode<Smi> t3510 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3509)));
      TNode<BoolT> t3511 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(t3510)));
      USE(implicit_cast<TNode<BoolT>>(t3511));
      Branch(implicit_cast<TNode<BoolT>>(t3511), label__True_1086, label__False_1087);
      if (label__True_1086->is_used())
      {
        BIND(label__True_1086);
        // ../../third_party/v8/builtins/array-sort.tq:1654:21
        Goto(label_macro_end_1710);
      }
      BIND(label__False_1087);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1655:5
    TVARIABLE(Smi, remaining_503_impl);
    auto remaining_503 = &remaining_503_impl;
    USE(remaining_503);
    *remaining_503 = implicit_cast<TNode<Smi>>(p_length);
    // ../../third_party/v8/builtins/array-sort.tq:1659:5
    int31_t t3512 = 0;
    TVARIABLE(Smi, low_504_impl);
    auto low_504 = &low_504_impl;
    USE(low_504);
    TNode<Smi> t3513 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3512)));
    *low_504 = implicit_cast<TNode<Smi>>(t3513);
    // ../../third_party/v8/builtins/array-sort.tq:1660:5
    TNode<Smi> t3514 = UncheckedCast<Smi>(ComputeMinRunLength(implicit_cast<TNode<Smi>>((*remaining_503).value())));
    USE(implicit_cast<TNode<Smi>>(t3514));
    TNode<Smi> minRunLength_1129_impl;
    auto minRunLength_1129 = &minRunLength_1129_impl;
    USE(minRunLength_1129);
    *minRunLength_1129 = implicit_cast<TNode<Smi>>(t3514);
    // ../../third_party/v8/builtins/array-sort.tq:1661:5
    {
      Label label__True_1088_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1088 = &label__True_1088_impl;
      USE(label__True_1088);
      Label label__False_1089_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1089 = &label__False_1089_impl;
      USE(label__False_1089);
      Label label_header_1130_1711_impl(this, {low_504, remaining_503}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1130_1711 = &label_header_1130_1711_impl;
      USE(label_header_1130_1711);
      Goto(label_header_1130_1711);
      BIND(label_header_1130_1711);
      int31_t t3515 = 0;
      TNode<Smi> t3516 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3515)));
      TNode<BoolT> t3517 = UncheckedCast<BoolT>(SmiNotEqual(implicit_cast<TNode<Smi>>((*remaining_503).value()), implicit_cast<TNode<Smi>>(t3516)));
      USE(implicit_cast<TNode<BoolT>>(t3517));
      Branch(implicit_cast<TNode<BoolT>>(t3517), label__True_1088, label__False_1089);
      if (label__True_1088->is_used())
      {
        BIND(label__True_1088);
        // ../../third_party/v8/builtins/array-sort.tq:1661:28
        {
          // ../../third_party/v8/builtins/array-sort.tq:1662:7
          TNode<Smi> t3518 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>((*remaining_503).value())));
          USE(implicit_cast<TNode<Smi>>(t3518));
          TNode<Smi> t3519 = UncheckedCast<Smi>(CountAndMakeRun(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>(t3518), label_Bailout_1085));
          USE(implicit_cast<TNode<Smi>>(t3519));
          TVARIABLE(Smi, currentRunLength_505_impl);
          auto currentRunLength_505 = &currentRunLength_505_impl;
          USE(currentRunLength_505);
          *currentRunLength_505 = implicit_cast<TNode<Smi>>(t3519);
          // ../../third_party/v8/builtins/array-sort.tq:1667:7
          {
            Label label__True_1090_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1090 = &label__True_1090_impl;
            USE(label__True_1090);
            Label label__False_1091_impl(this, {currentRunLength_505}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1091 = &label__False_1091_impl;
            USE(label__False_1091);
            TNode<BoolT> t3520 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*currentRunLength_505).value()), implicit_cast<TNode<Smi>>((*minRunLength_1129))));
            USE(implicit_cast<TNode<BoolT>>(t3520));
            Branch(implicit_cast<TNode<BoolT>>(t3520), label__True_1090, label__False_1091);
            if (label__True_1090->is_used())
            {
              BIND(label__True_1090);
              // ../../third_party/v8/builtins/array-sort.tq:1667:44
              {
                // ../../third_party/v8/builtins/array-sort.tq:1668:9
                TNode<Smi> t3521 = UncheckedCast<Smi>(SmiMin(implicit_cast<TNode<Smi>>((*minRunLength_1129)), implicit_cast<TNode<Smi>>((*remaining_503).value())));
                USE(implicit_cast<TNode<Smi>>(t3521));
                TNode<Smi> forcedRunLength_1131_impl;
                auto forcedRunLength_1131 = &forcedRunLength_1131_impl;
                USE(forcedRunLength_1131);
                *forcedRunLength_1131 = implicit_cast<TNode<Smi>>(t3521);
                // ../../third_party/v8/builtins/array-sort.tq:1669:9
                TNode<Smi> t3522 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>((*currentRunLength_505).value())));
                USE(implicit_cast<TNode<Smi>>(t3522));
                TNode<Smi> t3523 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>((*forcedRunLength_1131))));
                USE(implicit_cast<TNode<Smi>>(t3523));
                TNode<Smi> t3524 = UncheckedCast<Smi>(CallBuiltin(Builtins::kBinaryInsertionSort, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>(t3522), implicit_cast<TNode<Smi>>(t3523)));
                USE(implicit_cast<TNode<Smi>>(t3524));
                // ../../third_party/v8/builtins/array-sort.tq:1672:9
                EnsureSuccess(implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_1085);
                // ../../third_party/v8/builtins/array-sort.tq:1673:9
                *currentRunLength_505 = implicit_cast<TNode<Smi>>((*forcedRunLength_1131));
              }
              Goto(label__False_1091);
            }
            BIND(label__False_1091);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1677:7
          PushRun(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>((*currentRunLength_505).value()));
          // ../../third_party/v8/builtins/array-sort.tq:1679:7
          MergeCollapse(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_1085);
          // ../../third_party/v8/builtins/array-sort.tq:1682:7
          TNode<Smi> t3525 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*low_504).value()), implicit_cast<TNode<Smi>>((*currentRunLength_505).value())));
          USE(implicit_cast<TNode<Smi>>(t3525));
          *low_504 = implicit_cast<TNode<Smi>>(t3525);
          // ../../third_party/v8/builtins/array-sort.tq:1683:7
          TNode<Smi> t3526 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*remaining_503).value()), implicit_cast<TNode<Smi>>((*currentRunLength_505).value())));
          USE(implicit_cast<TNode<Smi>>(t3526));
          *remaining_503 = implicit_cast<TNode<Smi>>(t3526);
        }
        Goto(label_header_1130_1711);
      }
      BIND(label__False_1089);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1686:5
    MergeForceCollapse(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), label_Bailout_1085);
    // ../../third_party/v8/builtins/array-sort.tq:1687:5
    // ../../third_party/v8/builtins/array-sort.tq:1688:5
  }
  Goto(label_macro_end_1710);
  BIND(label_macro_end_1710);
}

TF_BUILTIN(ArrayTimSort, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<Smi> p_length = UncheckedCast<Smi>(Parameter(Descriptor::kLength));
  USE(p_length);
  // ../../third_party/v8/builtins/array-sort.tq:1694:69
  {
    // ../../third_party/v8/builtins/array-sort.tq:1695:5
    {
      Label label_try_done_1132_1712_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1132_1712 = &label_try_done_1132_1712_impl;
      USE(label_try_done_1132_1712);
      Label label_Slow_1092_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Slow_1092 = &label_Slow_1092_impl;
      USE(label_Slow_1092);
      Label label_try_begin_1133_1713_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1133_1713 = &label_try_begin_1133_1713_impl;
      USE(label_try_begin_1133_1713);
      Goto(label_try_begin_1133_1713);
      if (label_try_begin_1133_1713->is_used())
      {
        BIND(label_try_begin_1133_1713);
        // ../../third_party/v8/builtins/array-sort.tq:1695:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:1696:7
          ArrayTimSortImpl(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>(p_length), label_Slow_1092);
        }
        Goto(label_try_done_1132_1712);
      }
      if (label_Slow_1092->is_used())
      {
        BIND(label_Slow_1092);
        // ../../third_party/v8/builtins/array-sort.tq:1699:16
        {
          // ../../third_party/v8/builtins/array-sort.tq:1700:7
          {
            Label label__True_1093_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1093 = &label__True_1093_impl;
            USE(label__True_1093);
            Label label__False_1094_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1094 = &label__False_1094_impl;
            USE(label__False_1094);
            TNode<Object> t3527 = UncheckedCast<Object>(LoadFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx())));
            TNode<BoolT> t3528 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>(t3527), implicit_cast<TNode<Object>>(kGenericElementsAccessorId())));
            USE(implicit_cast<TNode<BoolT>>(t3528));
            Branch(implicit_cast<TNode<BoolT>>(t3528), label__True_1093, label__False_1094);
            if (label__True_1093->is_used())
            {
              BIND(label__True_1093);
              // ../../third_party/v8/builtins/array-sort.tq:1700:66
              {
                // ../../third_party/v8/builtins/array-sort.tq:1702:9
                Unreachable();
              }
            }
            BIND(label__False_1094);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1704:7
          StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kBailoutStatusIdx()), implicit_cast<TNode<Object>>(kSuccess()));
          // ../../third_party/v8/builtins/array-sort.tq:1706:7
          InitializeSortStateAccessor25ATGenericElementsAccessor(implicit_cast<TNode<FixedArray>>(p_sortState));
          // ../../third_party/v8/builtins/array-sort.tq:1707:7
          TNode<Object> t3529 = UncheckedCast<Object>(CallBuiltin(Builtins::kArrayTimSort, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<TNode<Smi>>(p_length)));
          USE(implicit_cast<TNode<Object>>(t3529));
        }
        Goto(label_try_done_1132_1712);
      }
      BIND(label_try_done_1132_1712);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1709:5
    Return(implicit_cast<TNode<Object>>(kSuccess()));
  }
}

TF_BUILTIN(ArrayPrototypeSort, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../third_party/v8/builtins/array-sort.tq:1728:65
  {
    // ../../third_party/v8/builtins/array-sort.tq:1731:5
    int31_t t3530 = 0;
    TNode<IntPtrT> t3531 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t3530)));
    TNode<Object> t3532 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t3531)));
    TNode<Object> comparefnObj_1134_impl;
    auto comparefnObj_1134 = &comparefnObj_1134_impl;
    USE(comparefnObj_1134);
    *comparefnObj_1134 = implicit_cast<TNode<Object>>(t3532);
    // ../../third_party/v8/builtins/array-sort.tq:1732:5
    {
      Label label__True_1095_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1095 = &label__True_1095_impl;
      USE(label__True_1095);
      Label label__False_1096_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1096 = &label__False_1096_impl;
      USE(label__False_1096);
      Label label__True_1097_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1097 = &label__True_1097_impl;
      USE(label__True_1097);
      TNode<BoolT> t3533 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>((*comparefnObj_1134)), implicit_cast<TNode<Object>>(Undefined())));
      USE(implicit_cast<TNode<BoolT>>(t3533));
      GotoIfNot(implicit_cast<TNode<BoolT>>(t3533), label__False_1096);
      TNode<BoolT> t3534 = UncheckedCast<BoolT>(TaggedIsCallable(implicit_cast<TNode<Object>>((*comparefnObj_1134))));
      USE(implicit_cast<TNode<BoolT>>(t3534));
      TNode<BoolT> t3535 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t3534)));
      USE(implicit_cast<TNode<BoolT>>(t3535));
Branch(implicit_cast<TNode<BoolT>>(t3535), label__True_1095, label__False_1096);
      if (label__True_1095->is_used())
      {
        BIND(label__True_1095);
        // ../../third_party/v8/builtins/array-sort.tq:1732:71
        {
          // ../../third_party/v8/builtins/array-sort.tq:1733:7
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kBadSortComparisonFunction), implicit_cast<TNode<Object>>((*comparefnObj_1134)));
        }
      }
      BIND(label__False_1096);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1737:5
    TNode<JSReceiver> t3536 = UncheckedCast<JSReceiver>(CallBuiltin(Builtins::kToObject, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSReceiver>>(t3536));
    TNode<JSReceiver> obj_1135_impl;
    auto obj_1135 = &obj_1135_impl;
    USE(obj_1135);
    *obj_1135 = implicit_cast<TNode<JSReceiver>>(t3536);
    // ../../third_party/v8/builtins/array-sort.tq:1738:5
    TNode<Map> t3537 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*obj_1135))));
    TVARIABLE(Map, map_506_impl);
    auto map_506 = &map_506_impl;
    USE(map_506);
    *map_506 = implicit_cast<TNode<Map>>(t3537);
    // ../../third_party/v8/builtins/array-sort.tq:1740:5
    TNode<FixedArray> t3538 = UncheckedCast<FixedArray>(AllocateZeroedFixedArray(implicit_cast<TNode<IntPtrT>>(kSortStateSize())));
    USE(implicit_cast<TNode<FixedArray>>(t3538));
    TNode<FixedArray> sortState_1136_impl;
    auto sortState_1136 = &sortState_1136_impl;
    USE(sortState_1136);
    *sortState_1136 = implicit_cast<TNode<FixedArray>>(t3538);
    // ../../third_party/v8/builtins/array-sort.tq:1742:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kReceiverIdx()), implicit_cast<TNode<Object>>((*obj_1135)));
    // ../../third_party/v8/builtins/array-sort.tq:1743:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kUserCmpFnIdx()), implicit_cast<TNode<Object>>((*comparefnObj_1134)));
    // ../../third_party/v8/builtins/array-sort.tq:1744:5
    auto t3539 = [=]() {
      return implicit_cast<TNode<Code>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kSortCompareUserFn).code()));
    };
    auto t3540 = [=]() {
      return implicit_cast<TNode<Code>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kSortCompareDefault).code()));
    };
    TVARIABLE(Code, t3541_1137_impl);
    auto t3541_1137 = &t3541_1137_impl;
    USE(t3541_1137);
    {
      Label label__True_1098_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1098 = &label__True_1098_impl;
      USE(label__True_1098);
      Label label__False_1099_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1099 = &label__False_1099_impl;
      USE(label__False_1099);
      Label label__done_1138_1714_impl(this, {t3541_1137}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_1138_1714 = &label__done_1138_1714_impl;
      USE(label__done_1138_1714);
      TNode<BoolT> t3542 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>((*comparefnObj_1134)), implicit_cast<TNode<Object>>(Undefined())));
      USE(implicit_cast<TNode<BoolT>>(t3542));
      Branch(implicit_cast<TNode<BoolT>>(t3542), label__True_1098, label__False_1099);
      BIND(label__True_1098);
            *t3541_1137 = implicit_cast<TNode<Code>>(t3539());
      Goto(label__done_1138_1714);
      BIND(label__False_1099);
            *t3541_1137 = implicit_cast<TNode<Code>>(t3540());
      Goto(label__done_1138_1714);
      BIND(label__done_1138_1714);
    }
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kSortComparePtrIdx()), implicit_cast<TNode<Object>>((*t3541_1137).value()));
    // ../../third_party/v8/builtins/array-sort.tq:1746:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kInitialReceiverMapIdx()), implicit_cast<TNode<Object>>((*map_506).value()));
    // ../../third_party/v8/builtins/array-sort.tq:1747:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kBailoutStatusIdx()), implicit_cast<TNode<Object>>(kSuccess()));
    // ../../third_party/v8/builtins/array-sort.tq:1749:5
    {
      Label label_try_done_1139_1715_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1139_1715 = &label_try_done_1139_1715_impl;
      USE(label_try_done_1139_1715);
      Label label_Slow_1100_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_Slow_1100 = &label_Slow_1100_impl;
      USE(label_Slow_1100);
      Label label_try_begin_1140_1716_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1140_1716 = &label_try_begin_1140_1716_impl;
      USE(label_try_begin_1140_1716);
      Goto(label_try_begin_1140_1716);
      if (label_try_begin_1140_1716->is_used())
      {
        BIND(label_try_begin_1140_1716);
        // ../../third_party/v8/builtins/array-sort.tq:1749:9
        {
          // ../../third_party/v8/builtins/array-sort.tq:1750:7
          TNode<JSArray> t3543 = UncheckedCast<JSArray>(Cast9ATJSArray(implicit_cast<TNode<HeapObject>>((*obj_1135)), label_Slow_1100));
          USE(implicit_cast<TNode<JSArray>>(t3543));
          TNode<JSArray> a_1141_impl;
          auto a_1141 = &a_1141_impl;
          USE(a_1141);
          *a_1141 = implicit_cast<TNode<JSArray>>(t3543);
          // ../../third_party/v8/builtins/array-sort.tq:1751:7
          TNode<Int32T> t3544 = UncheckedCast<Int32T>(LoadMapElementsKind(implicit_cast<TNode<Map>>((*map_506).value())));
          TNode<Int32T> elementsKind_1142_impl;
          auto elementsKind_1142 = &elementsKind_1142_impl;
          USE(elementsKind_1142);
          *elementsKind_1142 = implicit_cast<TNode<Int32T>>(t3544);
          // ../../third_party/v8/builtins/array-sort.tq:1752:7
          {
            Label label__True_1101_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1101 = &label__True_1101_impl;
            USE(label__True_1101);
            Label label__False_1102_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1102 = &label__False_1102_impl;
            USE(label__False_1102);
            TNode<BoolT> t3545 = UncheckedCast<BoolT>(IsFastElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_1142))));
            USE(implicit_cast<TNode<BoolT>>(t3545));
            TNode<BoolT> t3546 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t3545)));
            USE(implicit_cast<TNode<BoolT>>(t3546));
            Branch(implicit_cast<TNode<BoolT>>(t3546), label__True_1101, label__False_1102);
            if (label__True_1101->is_used())
            {
              BIND(label__True_1101);
              // ../../third_party/v8/builtins/array-sort.tq:1752:46
              Goto(label_Slow_1100);
            }
            BIND(label__False_1102);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1755:7
          TNode<Smi> t3547 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*a_1141))));
          TNode<Smi> len_1143_impl;
          auto len_1143 = &len_1143_impl;
          USE(len_1143);
          *len_1143 = implicit_cast<TNode<Smi>>(t3547);
          // ../../third_party/v8/builtins/array-sort.tq:1756:7
          {
            Label label__True_1103_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1103 = &label__True_1103_impl;
            USE(label__True_1103);
            Label label__False_1104_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1104 = &label__False_1104_impl;
            USE(label__False_1104);
            int31_t t3548 = 2;
            TNode<Smi> t3549 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3548)));
            TNode<BoolT> t3550 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*len_1143)), implicit_cast<TNode<Smi>>(t3549)));
            USE(implicit_cast<TNode<BoolT>>(t3550));
            Branch(implicit_cast<TNode<BoolT>>(t3550), label__True_1103, label__False_1104);
            if (label__True_1103->is_used())
            {
              BIND(label__True_1103);
              // ../../third_party/v8/builtins/array-sort.tq:1756:20
              arguments->PopAndReturn(implicit_cast<TNode<Object>>(p_receiver));
            }
            BIND(label__False_1104);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1760:7
          TNode<Smi> t3551 = UncheckedCast<Smi>(CallRuntime(Runtime::kPrepareElementsForSort, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*obj_1135)), implicit_cast<TNode<Number>>((*len_1143))));
          USE(implicit_cast<TNode<Smi>>(t3551));
          TNode<Smi> nofNonUndefined_1144_impl;
          auto nofNonUndefined_1144 = &nofNonUndefined_1144_impl;
          USE(nofNonUndefined_1144);
          *nofNonUndefined_1144 = implicit_cast<TNode<Smi>>(t3551);
          // ../../third_party/v8/builtins/array-sort.tq:1761:7
          // ../../third_party/v8/builtins/array-sort.tq:1763:7
          StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kInitialReceiverLengthIdx()), implicit_cast<TNode<Object>>((*len_1143)));
          // ../../third_party/v8/builtins/array-sort.tq:1765:7
          {
            Label label__True_1105_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1105 = &label__True_1105_impl;
            USE(label__True_1105);
            Label label__False_1106_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1106 = &label__False_1106_impl;
            USE(label__False_1106);
            Label label_if_done_label_1145_1717_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1145_1717 = &label_if_done_label_1145_1717_impl;
            USE(label_if_done_label_1145_1717);
            TNode<BoolT> t3552 = UncheckedCast<BoolT>(IsDoubleElementsKind(implicit_cast<TNode<Int32T>>((*elementsKind_1142))));
            USE(implicit_cast<TNode<BoolT>>(t3552));
            Branch(implicit_cast<TNode<BoolT>>(t3552), label__True_1105, label__False_1106);
            if (label__True_1105->is_used())
            {
              BIND(label__True_1105);
              // ../../third_party/v8/builtins/array-sort.tq:1765:47
              {
                // ../../third_party/v8/builtins/array-sort.tq:1766:9
                InitializeSortStateAccessor20ATFastDoubleElements(implicit_cast<TNode<FixedArray>>((*sortState_1136)));
              }
              Goto(label_if_done_label_1145_1717);
            }
            if (label__False_1106->is_used())
            {
              BIND(label__False_1106);
              // ../../third_party/v8/builtins/array-sort.tq:1767:14
              {
                Label label__True_1107_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_1107 = &label__True_1107_impl;
                USE(label__True_1107);
                Label label__False_1108_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_1108 = &label__False_1108_impl;
                USE(label__False_1108);
                Label label_if_done_label_1146_1718_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_if_done_label_1146_1718 = &label_if_done_label_1146_1718_impl;
                USE(label_if_done_label_1146_1718);
                TNode<Int32T> t3553 = UncheckedCast<Int32T>(FromConstexpr14ATElementsKind(implicit_cast<ElementsKind>(PACKED_SMI_ELEMENTS)));
                TNode<BoolT> t3554 = UncheckedCast<BoolT>(ElementsKindEqual(implicit_cast<TNode<Int32T>>((*elementsKind_1142)), implicit_cast<TNode<Int32T>>(t3553)));
                USE(implicit_cast<TNode<BoolT>>(t3554));
                Branch(implicit_cast<TNode<BoolT>>(t3554), label__True_1107, label__False_1108);
                if (label__True_1107->is_used())
                {
                  BIND(label__True_1107);
                  // ../../third_party/v8/builtins/array-sort.tq:1767:55
                  {
                    // ../../third_party/v8/builtins/array-sort.tq:1768:9
                    InitializeSortStateAccessor23ATFastPackedSmiElements(implicit_cast<TNode<FixedArray>>((*sortState_1136)));
                  }
                  Goto(label_if_done_label_1146_1718);
                }
                if (label__False_1108->is_used())
                {
                  BIND(label__False_1108);
                  // ../../third_party/v8/builtins/array-sort.tq:1769:14
                  {
                    // ../../third_party/v8/builtins/array-sort.tq:1770:9
                    InitializeSortStateAccessor25ATFastSmiOrObjectElements(implicit_cast<TNode<FixedArray>>((*sortState_1136)));
                  }
                  Goto(label_if_done_label_1146_1718);
                }
                BIND(label_if_done_label_1146_1718);
              }
              Goto(label_if_done_label_1145_1717);
            }
            BIND(label_if_done_label_1145_1717);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1772:7
          TNode<Object> t3555 = UncheckedCast<Object>(CallBuiltin(Builtins::kArrayTimSort, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<TNode<Smi>>((*nofNonUndefined_1144))));
          USE(implicit_cast<TNode<Object>>(t3555));
        }
        Goto(label_try_done_1139_1715);
      }
      if (label_Slow_1100->is_used())
      {
        BIND(label_Slow_1100);
        // ../../third_party/v8/builtins/array-sort.tq:1774:16
        {
          // ../../third_party/v8/builtins/array-sort.tq:1776:7
          TNode<Number> t3556 = UncheckedCast<Number>(GetLengthProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*obj_1135))));
          USE(implicit_cast<TNode<Number>>(t3556));
          TNode<Number> len_1147_impl;
          auto len_1147 = &len_1147_impl;
          USE(len_1147);
          *len_1147 = implicit_cast<TNode<Number>>(t3556);
          // ../../third_party/v8/builtins/array-sort.tq:1778:7
          {
            Label label__True_1109_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1109 = &label__True_1109_impl;
            USE(label__True_1109);
            Label label__False_1110_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1110 = &label__False_1110_impl;
            USE(label__False_1110);
            int31_t t3557 = 2;
            TNode<Number> t3558 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t3557)));
            BranchIfNumberLessThan(implicit_cast<TNode<Number>>((*len_1147)), implicit_cast<TNode<Number>>(t3558), label__True_1109, label__False_1110);
            if (label__True_1109->is_used())
            {
              BIND(label__True_1109);
              // ../../third_party/v8/builtins/array-sort.tq:1778:20
              arguments->PopAndReturn(implicit_cast<TNode<Object>>(p_receiver));
            }
            BIND(label__False_1110);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1779:7
          TNode<Smi> t3559 = UncheckedCast<Smi>(CallRuntime(Runtime::kPrepareElementsForSort, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>((*obj_1135)), implicit_cast<TNode<Number>>((*len_1147))));
          USE(implicit_cast<TNode<Smi>>(t3559));
          TNode<Smi> nofNonUndefined_1148_impl;
          auto nofNonUndefined_1148 = &nofNonUndefined_1148_impl;
          USE(nofNonUndefined_1148);
          *nofNonUndefined_1148 = implicit_cast<TNode<Smi>>(t3559);
          // ../../third_party/v8/builtins/array-sort.tq:1781:7
          StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<int31_t>(kInitialReceiverLengthIdx()), implicit_cast<TNode<Object>>((*len_1147)));
          // ../../third_party/v8/builtins/array-sort.tq:1785:7
          TNode<Map> t3560 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*obj_1135))));
          *map_506 = implicit_cast<TNode<Map>>(t3560);
          // ../../third_party/v8/builtins/array-sort.tq:1787:7
          {
            Label label__True_1111_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1111 = &label__True_1111_impl;
            USE(label__True_1111);
            Label label__False_1112_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1112 = &label__False_1112_impl;
            USE(label__False_1112);
            Label label_if_done_label_1149_1719_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_if_done_label_1149_1719 = &label_if_done_label_1149_1719_impl;
            USE(label_if_done_label_1149_1719);
            Label label__True_1113_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1113 = &label__True_1113_impl;
            USE(label__True_1113);
            Label label__True_1114_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1114 = &label__True_1114_impl;
            USE(label__True_1114);
            TNode<Int32T> t3561 = UncheckedCast<Int32T>(LoadMapElementsKind(implicit_cast<TNode<Map>>((*map_506).value())));
            TNode<Int32T> t3562 = UncheckedCast<Int32T>(FromConstexpr14ATElementsKind(implicit_cast<ElementsKind>(DICTIONARY_ELEMENTS)));
            TNode<BoolT> t3563 = UncheckedCast<BoolT>(ElementsKindEqual(implicit_cast<TNode<Int32T>>(t3561), implicit_cast<TNode<Int32T>>(t3562)));
            USE(implicit_cast<TNode<BoolT>>(t3563));
            GotoIfNot(implicit_cast<TNode<BoolT>>(t3563), label__False_1112);
            TNode<BoolT> t3564 = UncheckedCast<BoolT>(IsExtensibleMap(implicit_cast<TNode<Map>>((*map_506).value())));
            USE(implicit_cast<TNode<BoolT>>(t3564));
Branch(implicit_cast<TNode<BoolT>>(t3564), label__True_1113, label__False_1112);
            BIND(label__True_1113);
            TNode<Int32T> t3565 = UncheckedCast<Int32T>(LoadMapInstanceType(implicit_cast<TNode<Map>>((*map_506).value())));
            TNode<BoolT> t3566 = UncheckedCast<BoolT>(IsCustomElementsReceiverInstanceType(implicit_cast<TNode<Int32T>>(t3565)));
            USE(implicit_cast<TNode<BoolT>>(t3566));
            TNode<BoolT> t3567 = UncheckedCast<BoolT>(Word32BinaryNot(implicit_cast<TNode<BoolT>>(t3566)));
            USE(implicit_cast<TNode<BoolT>>(t3567));
Branch(implicit_cast<TNode<BoolT>>(t3567), label__True_1111, label__False_1112);
            if (label__True_1111->is_used())
            {
              BIND(label__True_1111);
              // ../../third_party/v8/builtins/array-sort.tq:1788:69
              {
                // ../../third_party/v8/builtins/array-sort.tq:1789:9
                InitializeSortStateAccessor20ATDictionaryElements(implicit_cast<TNode<FixedArray>>((*sortState_1136)));
              }
              Goto(label_if_done_label_1149_1719);
            }
            if (label__False_1112->is_used())
            {
              BIND(label__False_1112);
              // ../../third_party/v8/builtins/array-sort.tq:1790:14
              {
                // ../../third_party/v8/builtins/array-sort.tq:1791:9
                InitializeSortStateAccessor25ATGenericElementsAccessor(implicit_cast<TNode<FixedArray>>((*sortState_1136)));
              }
              Goto(label_if_done_label_1149_1719);
            }
            BIND(label_if_done_label_1149_1719);
          }
          // ../../third_party/v8/builtins/array-sort.tq:1793:7
          TNode<Object> t3568 = UncheckedCast<Object>(CallBuiltin(Builtins::kArrayTimSort, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<FixedArray>>((*sortState_1136)), implicit_cast<TNode<Smi>>((*nofNonUndefined_1148))));
          USE(implicit_cast<TNode<Object>>(t3568));
        }
        Goto(label_try_done_1139_1715);
      }
      BIND(label_try_done_1139_1715);
    }
    // ../../third_party/v8/builtins/array-sort.tq:1796:5
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(p_receiver));
  }
}

void ArrayBuiltinsFromDSLAssembler::VisitAllElements18ATFixedDoubleArray(TNode<Context> p_context, TNode<JSArray> p_a, TNode<Smi> p_len, TNode<JSReceiver> p_callbackfn, TNode<Object> p_thisArg, Label* label_Bailout_1125, TVariable<Smi>* Bailout0_518) {
  Label label_macro_end_1725_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1725 = &label_macro_end_1725_impl;
  USE(label_macro_end_1725);
  // ../../src/builtins/array-foreach.tq:78:27
  {
    // ../../src/builtins/array-foreach.tq:79:5
    int31_t t3576 = 0;
    TVARIABLE(Smi, k_519_impl);
    auto k_519 = &k_519_impl;
    USE(k_519);
    TNode<Smi> t3577 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3576)));
    *k_519 = implicit_cast<TNode<Smi>>(t3577);
    // ../../src/builtins/array-foreach.tq:80:5
    TNode<Map> t3578 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>(p_a)));
    TNode<Map> map_1150_impl;
    auto map_1150 = &map_1150_impl;
    USE(map_1150);
    *map_1150 = implicit_cast<TNode<Map>>(t3578);
    // ../../src/builtins/array-foreach.tq:82:5
    {
      Label label_try_done_1151_1726_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1151_1726 = &label_try_done_1151_1726_impl;
      USE(label_try_done_1151_1726);
      Label label_Slow_1126_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label_Slow_1126 = &label_Slow_1126_impl;
      USE(label_Slow_1126);
      Label label_try_begin_1152_1727_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1152_1727 = &label_try_begin_1152_1727_impl;
      USE(label_try_begin_1152_1727);
      Goto(label_try_begin_1152_1727);
      if (label_try_begin_1152_1727->is_used())
      {
        BIND(label_try_begin_1152_1727);
        // ../../src/builtins/array-foreach.tq:82:9
        {
          // ../../src/builtins/array-foreach.tq:84:7
          Label label__True_1127_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_1127 = &label__True_1127_impl;
          USE(label__True_1127);
          Label label__False_1128_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_1128 = &label__False_1128_impl;
          USE(label__False_1128);
          Label label_header_1153_1728_impl(this, {k_519}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_header_1153_1728 = &label_header_1153_1728_impl;
          USE(label_header_1153_1728);
          Goto(label_header_1153_1728);
          BIND(label_header_1153_1728);
          Label label_action_1154_1729_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_action_1154_1729 = &label_action_1154_1729_impl;
          USE(label_action_1154_1729);
          TNode<BoolT> t3579 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*k_519).value()), implicit_cast<TNode<Smi>>(p_len)));
          USE(implicit_cast<TNode<BoolT>>(t3579));
          Branch(implicit_cast<TNode<BoolT>>(t3579), label__True_1127, label__False_1128);
          if (label__True_1127->is_used())
          {
            BIND(label__True_1127);
            // ../../src/builtins/array-foreach.tq:84:34
            {
              // ../../src/builtins/array-foreach.tq:86:9
              {
                Label label__True_1129_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_1129 = &label__True_1129_impl;
                USE(label__True_1129);
                Label label__False_1130_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_1130 = &label__False_1130_impl;
                USE(label__False_1130);
                TNode<Map> t3580 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>(p_a)));
                TNode<BoolT> t3581 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>((*map_1150)), implicit_cast<TNode<Object>>(t3580)));
                USE(implicit_cast<TNode<BoolT>>(t3581));
                Branch(implicit_cast<TNode<BoolT>>(t3581), label__True_1129, label__False_1130);
                if (label__True_1129->is_used())
                {
                  BIND(label__True_1129);
                  // ../../src/builtins/array-foreach.tq:86:27
                  Goto(label_Slow_1126);
                }
                BIND(label__False_1130);
              }
              // ../../src/builtins/array-foreach.tq:88:9
              {
                Label label__True_1131_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_1131 = &label__True_1131_impl;
                USE(label__True_1131);
                Label label__False_1132_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_1132 = &label__False_1132_impl;
                USE(label__False_1132);
                TNode<Number> t3582 = UncheckedCast<Number>(LoadJSArrayLength(implicit_cast<TNode<JSArray>>(p_a)));
                BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*k_519).value()), implicit_cast<TNode<Number>>(t3582), label__True_1131, label__False_1132);
                if (label__True_1131->is_used())
                {
                  BIND(label__True_1131);
                  // ../../src/builtins/array-foreach.tq:88:28
                  Goto(label_Slow_1126);
                }
                BIND(label__False_1132);
              }
              // ../../src/builtins/array-foreach.tq:90:9
              {
                Label label_try_done_1155_1730_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_try_done_1155_1730 = &label_try_done_1155_1730_impl;
                USE(label_try_done_1155_1730);
                Label label_FoundHole_1133_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_FoundHole_1133 = &label_FoundHole_1133_impl;
                USE(label_FoundHole_1133);
                Label label_try_begin_1156_1731_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_try_begin_1156_1731 = &label_try_begin_1156_1731_impl;
                USE(label_try_begin_1156_1731);
                Goto(label_try_begin_1156_1731);
                if (label_try_begin_1156_1731->is_used())
                {
                  BIND(label_try_begin_1156_1731);
                  // ../../src/builtins/array-foreach.tq:90:13
                  {
                    // ../../src/builtins/array-foreach.tq:91:11
                    TNode<Object> t3583 = UncheckedCast<Object>(LoadElementNoHole18ATFixedDoubleArray(implicit_cast<TNode<JSArray>>(p_a), implicit_cast<TNode<Smi>>((*k_519).value()), label_FoundHole_1133));
                    USE(implicit_cast<TNode<Object>>(t3583));
                    TNode<Object> value_1157_impl;
                    auto value_1157 = &value_1157_impl;
                    USE(value_1157);
                    *value_1157 = implicit_cast<TNode<Object>>(t3583);
                    // ../../src/builtins/array-foreach.tq:93:11
                    TNode<Object> t3584 = UncheckedCast<Object>(Call(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_callbackfn), implicit_cast<TNode<Object>>(p_thisArg), implicit_cast<TNode<Object>>((*value_1157)), implicit_cast<TNode<Object>>((*k_519).value()), implicit_cast<TNode<Object>>(p_a)));
                    USE(implicit_cast<TNode<Object>>(t3584));
                  }
                  Goto(label_try_done_1155_1730);
                }
                if (label_FoundHole_1133->is_used())
                {
                  BIND(label_FoundHole_1133);
                  // ../../src/builtins/array-foreach.tq:95:25
                  {
                    // ../../src/builtins/array-foreach.tq:100:11
                    {
                      Label label__True_1134_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label__True_1134 = &label__True_1134_impl;
                      USE(label__True_1134);
                      Label label__False_1135_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label__False_1135 = &label__False_1135_impl;
                      USE(label__False_1135);
                      TNode<BoolT> t3585 = UncheckedCast<BoolT>(IsNoElementsProtectorCellInvalid());
                      USE(implicit_cast<TNode<BoolT>>(t3585));
                      Branch(implicit_cast<TNode<BoolT>>(t3585), label__True_1134, label__False_1135);
                      if (label__True_1134->is_used())
                      {
                        BIND(label__True_1134);
                        // ../../src/builtins/array-foreach.tq:100:51
                        *Bailout0_518 = implicit_cast<TNode<Smi>>((*k_519).value());
                        Goto(label_Bailout_1125);
                      }
                      BIND(label__False_1135);
                    }
                  }
                  Goto(label_try_done_1155_1730);
                }
                BIND(label_try_done_1155_1730);
              }
            }
            Goto(label_action_1154_1729);
          }
          {
            BIND(label_action_1154_1729);
            int31_t t3586 = 1;
            TNode<Smi> t3587 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3586)));
            TNode<Smi> t3588 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_519).value()), implicit_cast<TNode<Smi>>(t3587)));
            USE(implicit_cast<TNode<Smi>>(t3588));
            *k_519 = implicit_cast<TNode<Smi>>(t3588);
            Goto(label_header_1153_1728);
          }
          BIND(label__False_1128);
        }
        Goto(label_try_done_1151_1726);
      }
      if (label_Slow_1126->is_used())
      {
        BIND(label_Slow_1126);
        // ../../src/builtins/array-foreach.tq:104:16
        {
          // ../../src/builtins/array-foreach.tq:105:7
          *Bailout0_518 = implicit_cast<TNode<Smi>>((*k_519).value());
          Goto(label_Bailout_1125);
        }
      }
      BIND(label_try_done_1151_1726);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::VisitAllElements12ATFixedArray(TNode<Context> p_context, TNode<JSArray> p_a, TNode<Smi> p_len, TNode<JSReceiver> p_callbackfn, TNode<Object> p_thisArg, Label* label_Bailout_1136, TVariable<Smi>* Bailout0_520) {
  Label label_macro_end_1732_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1732 = &label_macro_end_1732_impl;
  USE(label_macro_end_1732);
  // ../../src/builtins/array-foreach.tq:78:27
  {
    // ../../src/builtins/array-foreach.tq:79:5
    int31_t t3589 = 0;
    TVARIABLE(Smi, k_521_impl);
    auto k_521 = &k_521_impl;
    USE(k_521);
    TNode<Smi> t3590 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3589)));
    *k_521 = implicit_cast<TNode<Smi>>(t3590);
    // ../../src/builtins/array-foreach.tq:80:5
    TNode<Map> t3591 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>(p_a)));
    TNode<Map> map_1158_impl;
    auto map_1158 = &map_1158_impl;
    USE(map_1158);
    *map_1158 = implicit_cast<TNode<Map>>(t3591);
    // ../../src/builtins/array-foreach.tq:82:5
    {
      Label label_try_done_1159_1733_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_1159_1733 = &label_try_done_1159_1733_impl;
      USE(label_try_done_1159_1733);
      Label label_Slow_1137_impl(this, compiler::CodeAssemblerLabel::kDeferred);
      Label* label_Slow_1137 = &label_Slow_1137_impl;
      USE(label_Slow_1137);
      Label label_try_begin_1160_1734_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_1160_1734 = &label_try_begin_1160_1734_impl;
      USE(label_try_begin_1160_1734);
      Goto(label_try_begin_1160_1734);
      if (label_try_begin_1160_1734->is_used())
      {
        BIND(label_try_begin_1160_1734);
        // ../../src/builtins/array-foreach.tq:82:9
        {
          // ../../src/builtins/array-foreach.tq:84:7
          Label label__True_1138_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__True_1138 = &label__True_1138_impl;
          USE(label__True_1138);
          Label label__False_1139_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label__False_1139 = &label__False_1139_impl;
          USE(label__False_1139);
          Label label_header_1161_1735_impl(this, {k_521}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_header_1161_1735 = &label_header_1161_1735_impl;
          USE(label_header_1161_1735);
          Goto(label_header_1161_1735);
          BIND(label_header_1161_1735);
          Label label_action_1162_1736_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_action_1162_1736 = &label_action_1162_1736_impl;
          USE(label_action_1162_1736);
          TNode<BoolT> t3592 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*k_521).value()), implicit_cast<TNode<Smi>>(p_len)));
          USE(implicit_cast<TNode<BoolT>>(t3592));
          Branch(implicit_cast<TNode<BoolT>>(t3592), label__True_1138, label__False_1139);
          if (label__True_1138->is_used())
          {
            BIND(label__True_1138);
            // ../../src/builtins/array-foreach.tq:84:34
            {
              // ../../src/builtins/array-foreach.tq:86:9
              {
                Label label__True_1140_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_1140 = &label__True_1140_impl;
                USE(label__True_1140);
                Label label__False_1141_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_1141 = &label__False_1141_impl;
                USE(label__False_1141);
                TNode<Map> t3593 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>(p_a)));
                TNode<BoolT> t3594 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>((*map_1158)), implicit_cast<TNode<Object>>(t3593)));
                USE(implicit_cast<TNode<BoolT>>(t3594));
                Branch(implicit_cast<TNode<BoolT>>(t3594), label__True_1140, label__False_1141);
                if (label__True_1140->is_used())
                {
                  BIND(label__True_1140);
                  // ../../src/builtins/array-foreach.tq:86:27
                  Goto(label_Slow_1137);
                }
                BIND(label__False_1141);
              }
              // ../../src/builtins/array-foreach.tq:88:9
              {
                Label label__True_1142_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__True_1142 = &label__True_1142_impl;
                USE(label__True_1142);
                Label label__False_1143_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_1143 = &label__False_1143_impl;
                USE(label__False_1143);
                TNode<Number> t3595 = UncheckedCast<Number>(LoadJSArrayLength(implicit_cast<TNode<JSArray>>(p_a)));
                BranchIfNumberGreaterThanOrEqual(implicit_cast<TNode<Number>>((*k_521).value()), implicit_cast<TNode<Number>>(t3595), label__True_1142, label__False_1143);
                if (label__True_1142->is_used())
                {
                  BIND(label__True_1142);
                  // ../../src/builtins/array-foreach.tq:88:28
                  Goto(label_Slow_1137);
                }
                BIND(label__False_1143);
              }
              // ../../src/builtins/array-foreach.tq:90:9
              {
                Label label_try_done_1163_1737_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_try_done_1163_1737 = &label_try_done_1163_1737_impl;
                USE(label_try_done_1163_1737);
                Label label_FoundHole_1144_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_FoundHole_1144 = &label_FoundHole_1144_impl;
                USE(label_FoundHole_1144);
                Label label_try_begin_1164_1738_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label_try_begin_1164_1738 = &label_try_begin_1164_1738_impl;
                USE(label_try_begin_1164_1738);
                Goto(label_try_begin_1164_1738);
                if (label_try_begin_1164_1738->is_used())
                {
                  BIND(label_try_begin_1164_1738);
                  // ../../src/builtins/array-foreach.tq:90:13
                  {
                    // ../../src/builtins/array-foreach.tq:91:11
                    TNode<Object> t3596 = UncheckedCast<Object>(LoadElementNoHole12ATFixedArray(implicit_cast<TNode<JSArray>>(p_a), implicit_cast<TNode<Smi>>((*k_521).value()), label_FoundHole_1144));
                    USE(implicit_cast<TNode<Object>>(t3596));
                    TNode<Object> value_1165_impl;
                    auto value_1165 = &value_1165_impl;
                    USE(value_1165);
                    *value_1165 = implicit_cast<TNode<Object>>(t3596);
                    // ../../src/builtins/array-foreach.tq:93:11
                    TNode<Object> t3597 = UncheckedCast<Object>(Call(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<JSReceiver>>(p_callbackfn), implicit_cast<TNode<Object>>(p_thisArg), implicit_cast<TNode<Object>>((*value_1165)), implicit_cast<TNode<Object>>((*k_521).value()), implicit_cast<TNode<Object>>(p_a)));
                    USE(implicit_cast<TNode<Object>>(t3597));
                  }
                  Goto(label_try_done_1163_1737);
                }
                if (label_FoundHole_1144->is_used())
                {
                  BIND(label_FoundHole_1144);
                  // ../../src/builtins/array-foreach.tq:95:25
                  {
                    // ../../src/builtins/array-foreach.tq:100:11
                    {
                      Label label__True_1145_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label__True_1145 = &label__True_1145_impl;
                      USE(label__True_1145);
                      Label label__False_1146_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                      Label* label__False_1146 = &label__False_1146_impl;
                      USE(label__False_1146);
                      TNode<BoolT> t3598 = UncheckedCast<BoolT>(IsNoElementsProtectorCellInvalid());
                      USE(implicit_cast<TNode<BoolT>>(t3598));
                      Branch(implicit_cast<TNode<BoolT>>(t3598), label__True_1145, label__False_1146);
                      if (label__True_1145->is_used())
                      {
                        BIND(label__True_1145);
                        // ../../src/builtins/array-foreach.tq:100:51
                        *Bailout0_520 = implicit_cast<TNode<Smi>>((*k_521).value());
                        Goto(label_Bailout_1136);
                      }
                      BIND(label__False_1146);
                    }
                  }
                  Goto(label_try_done_1163_1737);
                }
                BIND(label_try_done_1163_1737);
              }
            }
            Goto(label_action_1162_1736);
          }
          {
            BIND(label_action_1162_1736);
            int31_t t3599 = 1;
            TNode<Smi> t3600 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3599)));
            TNode<Smi> t3601 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_521).value()), implicit_cast<TNode<Smi>>(t3600)));
            USE(implicit_cast<TNode<Smi>>(t3601));
            *k_521 = implicit_cast<TNode<Smi>>(t3601);
            Goto(label_header_1161_1735);
          }
          BIND(label__False_1139);
        }
        Goto(label_try_done_1159_1733);
      }
      if (label_Slow_1137->is_used())
      {
        BIND(label_Slow_1137);
        // ../../src/builtins/array-foreach.tq:104:16
        {
          // ../../src/builtins/array-foreach.tq:105:7
          *Bailout0_520 = implicit_cast<TNode<Smi>>((*k_521).value());
          Goto(label_Bailout_1136);
        }
      }
      BIND(label_try_done_1159_1733);
    }
  }
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::FastArrayLastIndexOf12ATFixedArray(TNode<Context> p_context, TNode<JSArray> p_array, TNode<Smi> p_length, TNode<Smi> p_from, TNode<Object> p_searchElement) {
  TVARIABLE(Smi, _return_522_impl);
  auto _return_522 = &_return_522_impl;
  USE(_return_522);
  Label label_macro_end_1739_impl(this, {_return_522}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1739 = &label_macro_end_1739_impl;
  USE(label_macro_end_1739);
  // ../../src/builtins/array-lastindexof.tq:29:35
  {
    // ../../src/builtins/array-lastindexof.tq:30:5
    TNode<FixedArrayBase> t3602 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>(p_array)));
    TNode<FixedArrayBase> elements_1166_impl;
    auto elements_1166 = &elements_1166_impl;
    USE(elements_1166);
    *elements_1166 = implicit_cast<TNode<FixedArrayBase>>(t3602);
    // ../../src/builtins/array-lastindexof.tq:31:5
    TVARIABLE(Smi, k_523_impl);
    auto k_523 = &k_523_impl;
    USE(k_523);
    *k_523 = implicit_cast<TNode<Smi>>(p_from);
    // ../../src/builtins/array-lastindexof.tq:32:5
    {
      Label label__True_1147_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1147 = &label__True_1147_impl;
      USE(label__True_1147);
      Label label__False_1148_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1148 = &label__False_1148_impl;
      USE(label__False_1148);
      Label label_header_1167_1740_impl(this, {k_523}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1167_1740 = &label_header_1167_1740_impl;
      USE(label_header_1167_1740);
      Goto(label_header_1167_1740);
      BIND(label_header_1167_1740);
      int31_t t3603 = 0;
      TNode<Smi> t3604 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3603)));
      TNode<BoolT> t3605 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*k_523).value()), implicit_cast<TNode<Smi>>(t3604)));
      USE(implicit_cast<TNode<BoolT>>(t3605));
      Branch(implicit_cast<TNode<BoolT>>(t3605), label__True_1147, label__False_1148);
      if (label__True_1147->is_used())
      {
        BIND(label__True_1147);
        // ../../src/builtins/array-lastindexof.tq:32:20
        {
          // ../../src/builtins/array-lastindexof.tq:33:7
          {
            Label label_try_done_1168_1741_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_try_done_1168_1741 = &label_try_done_1168_1741_impl;
            USE(label_try_done_1168_1741);
            Label label_Hole_1149_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_Hole_1149 = &label_Hole_1149_impl;
            USE(label_Hole_1149);
            Label label_try_begin_1169_1742_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_try_begin_1169_1742 = &label_try_begin_1169_1742_impl;
            USE(label_try_begin_1169_1742);
            Goto(label_try_begin_1169_1742);
            if (label_try_begin_1169_1742->is_used())
            {
              BIND(label_try_begin_1169_1742);
              // ../../src/builtins/array-lastindexof.tq:33:11
              {
                // ../../src/builtins/array-lastindexof.tq:34:9
                TNode<Object> t3606 = UncheckedCast<Object>(LoadWithHoleCheck12ATFixedArray(implicit_cast<TNode<FixedArrayBase>>((*elements_1166)), implicit_cast<TNode<Smi>>((*k_523).value()), label_Hole_1149));
                USE(implicit_cast<TNode<Object>>(t3606));
                TNode<Object> element_1170_impl;
                auto element_1170 = &element_1170_impl;
                USE(element_1170);
                *element_1170 = implicit_cast<TNode<Object>>(t3606);
                // ../../src/builtins/array-lastindexof.tq:37:9
                TNode<Oddball> t3607 = UncheckedCast<Oddball>(StrictEqual(implicit_cast<TNode<Object>>(p_searchElement), implicit_cast<TNode<Object>>((*element_1170))));
                USE(implicit_cast<TNode<Oddball>>(t3607));
                TNode<Oddball> same_1171_impl;
                auto same_1171 = &same_1171_impl;
                USE(same_1171);
                *same_1171 = implicit_cast<TNode<Oddball>>(t3607);
                // ../../src/builtins/array-lastindexof.tq:38:9
                {
                  Label label__True_1150_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_1150 = &label__True_1150_impl;
                  USE(label__True_1150);
                  Label label__False_1151_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1151 = &label__False_1151_impl;
                  USE(label__False_1151);
                  TNode<BoolT> t3608 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*same_1171)), implicit_cast<TNode<Object>>(True())));
                  USE(implicit_cast<TNode<BoolT>>(t3608));
                  Branch(implicit_cast<TNode<BoolT>>(t3608), label__True_1150, label__False_1151);
                  if (label__True_1150->is_used())
                  {
                    BIND(label__True_1150);
                    // ../../src/builtins/array-lastindexof.tq:38:27
                    {
                      // ../../src/builtins/array-lastindexof.tq:39:11
                      // ../../src/builtins/array-lastindexof.tq:40:11
                      *_return_522 = implicit_cast<TNode<Smi>>((*k_523).value());
                      Goto(label_macro_end_1739);
                    }
                  }
                  BIND(label__False_1151);
                }
              }
              Goto(label_try_done_1168_1741);
            }
            if (label_Hole_1149->is_used())
            {
              BIND(label_Hole_1149);
              // ../../src/builtins/array-lastindexof.tq:43:18
              {
              }
              Goto(label_try_done_1168_1741);
            }
            BIND(label_try_done_1168_1741);
          }
          // ../../src/builtins/array-lastindexof.tq:45:7
          TNode<Smi> t3609 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3610 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*k_523).value()), implicit_cast<TNode<Smi>>(t3609)));
          *k_523 = implicit_cast<TNode<Smi>>(t3610);
        }
        Goto(label_header_1167_1740);
      }
      BIND(label__False_1148);
    }
    // ../../src/builtins/array-lastindexof.tq:48:5
    // ../../src/builtins/array-lastindexof.tq:49:5
    int31_t t3611 = -1;
    TNode<Smi> t3612 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3611)));
    *_return_522 = implicit_cast<TNode<Smi>>(t3612);
    Goto(label_macro_end_1739);
  }
  BIND(label_macro_end_1739);
  return implicit_cast<TNode<Smi>>((*_return_522).value());
}

compiler::TNode<Smi> ArrayBuiltinsFromDSLAssembler::FastArrayLastIndexOf18ATFixedDoubleArray(TNode<Context> p_context, TNode<JSArray> p_array, TNode<Smi> p_length, TNode<Smi> p_from, TNode<Object> p_searchElement) {
  TVARIABLE(Smi, _return_524_impl);
  auto _return_524 = &_return_524_impl;
  USE(_return_524);
  Label label_macro_end_1743_impl(this, {_return_524}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1743 = &label_macro_end_1743_impl;
  USE(label_macro_end_1743);
  // ../../src/builtins/array-lastindexof.tq:29:35
  {
    // ../../src/builtins/array-lastindexof.tq:30:5
    TNode<FixedArrayBase> t3613 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>(p_array)));
    TNode<FixedArrayBase> elements_1172_impl;
    auto elements_1172 = &elements_1172_impl;
    USE(elements_1172);
    *elements_1172 = implicit_cast<TNode<FixedArrayBase>>(t3613);
    // ../../src/builtins/array-lastindexof.tq:31:5
    TVARIABLE(Smi, k_525_impl);
    auto k_525 = &k_525_impl;
    USE(k_525);
    *k_525 = implicit_cast<TNode<Smi>>(p_from);
    // ../../src/builtins/array-lastindexof.tq:32:5
    {
      Label label__True_1152_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1152 = &label__True_1152_impl;
      USE(label__True_1152);
      Label label__False_1153_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1153 = &label__False_1153_impl;
      USE(label__False_1153);
      Label label_header_1173_1744_impl(this, {k_525}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1173_1744 = &label_header_1173_1744_impl;
      USE(label_header_1173_1744);
      Goto(label_header_1173_1744);
      BIND(label_header_1173_1744);
      int31_t t3614 = 0;
      TNode<Smi> t3615 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3614)));
      TNode<BoolT> t3616 = UncheckedCast<BoolT>(SmiGreaterThanOrEqual(implicit_cast<TNode<Smi>>((*k_525).value()), implicit_cast<TNode<Smi>>(t3615)));
      USE(implicit_cast<TNode<BoolT>>(t3616));
      Branch(implicit_cast<TNode<BoolT>>(t3616), label__True_1152, label__False_1153);
      if (label__True_1152->is_used())
      {
        BIND(label__True_1152);
        // ../../src/builtins/array-lastindexof.tq:32:20
        {
          // ../../src/builtins/array-lastindexof.tq:33:7
          {
            Label label_try_done_1174_1745_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_try_done_1174_1745 = &label_try_done_1174_1745_impl;
            USE(label_try_done_1174_1745);
            Label label_Hole_1154_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_Hole_1154 = &label_Hole_1154_impl;
            USE(label_Hole_1154);
            Label label_try_begin_1175_1746_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_try_begin_1175_1746 = &label_try_begin_1175_1746_impl;
            USE(label_try_begin_1175_1746);
            Goto(label_try_begin_1175_1746);
            if (label_try_begin_1175_1746->is_used())
            {
              BIND(label_try_begin_1175_1746);
              // ../../src/builtins/array-lastindexof.tq:33:11
              {
                // ../../src/builtins/array-lastindexof.tq:34:9
                TNode<Object> t3617 = UncheckedCast<Object>(LoadWithHoleCheck18ATFixedDoubleArray(implicit_cast<TNode<FixedArrayBase>>((*elements_1172)), implicit_cast<TNode<Smi>>((*k_525).value()), label_Hole_1154));
                USE(implicit_cast<TNode<Object>>(t3617));
                TNode<Object> element_1176_impl;
                auto element_1176 = &element_1176_impl;
                USE(element_1176);
                *element_1176 = implicit_cast<TNode<Object>>(t3617);
                // ../../src/builtins/array-lastindexof.tq:37:9
                TNode<Oddball> t3618 = UncheckedCast<Oddball>(StrictEqual(implicit_cast<TNode<Object>>(p_searchElement), implicit_cast<TNode<Object>>((*element_1176))));
                USE(implicit_cast<TNode<Oddball>>(t3618));
                TNode<Oddball> same_1177_impl;
                auto same_1177 = &same_1177_impl;
                USE(same_1177);
                *same_1177 = implicit_cast<TNode<Oddball>>(t3618);
                // ../../src/builtins/array-lastindexof.tq:38:9
                {
                  Label label__True_1155_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_1155 = &label__True_1155_impl;
                  USE(label__True_1155);
                  Label label__False_1156_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_1156 = &label__False_1156_impl;
                  USE(label__False_1156);
                  TNode<BoolT> t3619 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*same_1177)), implicit_cast<TNode<Object>>(True())));
                  USE(implicit_cast<TNode<BoolT>>(t3619));
                  Branch(implicit_cast<TNode<BoolT>>(t3619), label__True_1155, label__False_1156);
                  if (label__True_1155->is_used())
                  {
                    BIND(label__True_1155);
                    // ../../src/builtins/array-lastindexof.tq:38:27
                    {
                      // ../../src/builtins/array-lastindexof.tq:39:11
                      // ../../src/builtins/array-lastindexof.tq:40:11
                      *_return_524 = implicit_cast<TNode<Smi>>((*k_525).value());
                      Goto(label_macro_end_1743);
                    }
                  }
                  BIND(label__False_1156);
                }
              }
              Goto(label_try_done_1174_1745);
            }
            if (label_Hole_1154->is_used())
            {
              BIND(label_Hole_1154);
              // ../../src/builtins/array-lastindexof.tq:43:18
              {
              }
              Goto(label_try_done_1174_1745);
            }
            BIND(label_try_done_1174_1745);
          }
          // ../../src/builtins/array-lastindexof.tq:45:7
          TNode<Smi> t3620 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3621 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*k_525).value()), implicit_cast<TNode<Smi>>(t3620)));
          *k_525 = implicit_cast<TNode<Smi>>(t3621);
        }
        Goto(label_header_1173_1744);
      }
      BIND(label__False_1153);
    }
    // ../../src/builtins/array-lastindexof.tq:48:5
    // ../../src/builtins/array-lastindexof.tq:49:5
    int31_t t3622 = -1;
    TNode<Smi> t3623 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3622)));
    *_return_524 = implicit_cast<TNode<Smi>>(t3623);
    Goto(label_macro_end_1743);
  }
  BIND(label_macro_end_1743);
  return implicit_cast<TNode<Smi>>((*_return_524).value());
}

void ArrayBuiltinsFromDSLAssembler::FastPackedArrayReverse23ATFastPackedSmiElements5ATSmi(TNode<FixedArrayBase> p_elements, TNode<Smi> p_length) {
  Label label_macro_end_1747_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1747 = &label_macro_end_1747_impl;
  USE(label_macro_end_1747);
  // ../../src/builtins/array-reverse.tq:61:46
  {
    // ../../src/builtins/array-reverse.tq:62:5
    int31_t t3624 = 0;
    TVARIABLE(Smi, lower_526_impl);
    auto lower_526 = &lower_526_impl;
    USE(lower_526);
    TNode<Smi> t3625 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3624)));
    *lower_526 = implicit_cast<TNode<Smi>>(t3625);
    // ../../src/builtins/array-reverse.tq:63:5
    int31_t t3626 = 1;
    TNode<Smi> t3627 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3626)));
    TNode<Smi> t3628 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(t3627)));
    USE(implicit_cast<TNode<Smi>>(t3628));
    TVARIABLE(Smi, upper_527_impl);
    auto upper_527 = &upper_527_impl;
    USE(upper_527);
    *upper_527 = implicit_cast<TNode<Smi>>(t3628);
    // ../../src/builtins/array-reverse.tq:65:5
    {
      Label label__True_1157_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1157 = &label__True_1157_impl;
      USE(label__True_1157);
      Label label__False_1158_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1158 = &label__False_1158_impl;
      USE(label__False_1158);
      Label label_header_1178_1748_impl(this, {lower_526, upper_527}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1178_1748 = &label_header_1178_1748_impl;
      USE(label_header_1178_1748);
      Goto(label_header_1178_1748);
      BIND(label_header_1178_1748);
      TNode<BoolT> t3629 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*lower_526).value()), implicit_cast<TNode<Smi>>((*upper_527).value())));
      USE(implicit_cast<TNode<BoolT>>(t3629));
      Branch(implicit_cast<TNode<BoolT>>(t3629), label__True_1157, label__False_1158);
      if (label__True_1157->is_used())
      {
        BIND(label__True_1157);
        // ../../src/builtins/array-reverse.tq:65:27
        {
          // ../../src/builtins/array-reverse.tq:66:7
          TNode<Smi> t3630 = UncheckedCast<Smi>(LoadElement23ATFastPackedSmiElements5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*lower_526).value())));
          USE(implicit_cast<TNode<Smi>>(t3630));
          TNode<Smi> lowerValue_1179_impl;
          auto lowerValue_1179 = &lowerValue_1179_impl;
          USE(lowerValue_1179);
          *lowerValue_1179 = implicit_cast<TNode<Smi>>(t3630);
          // ../../src/builtins/array-reverse.tq:67:7
          TNode<Smi> t3631 = UncheckedCast<Smi>(LoadElement23ATFastPackedSmiElements5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*upper_527).value())));
          USE(implicit_cast<TNode<Smi>>(t3631));
          TNode<Smi> upperValue_1180_impl;
          auto upperValue_1180 = &upperValue_1180_impl;
          USE(upperValue_1180);
          *upperValue_1180 = implicit_cast<TNode<Smi>>(t3631);
          // ../../src/builtins/array-reverse.tq:68:7
          StoreElement23ATFastPackedSmiElements5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*lower_526).value()), implicit_cast<TNode<Smi>>((*upperValue_1180)));
          // ../../src/builtins/array-reverse.tq:69:7
          StoreElement23ATFastPackedSmiElements5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*upper_527).value()), implicit_cast<TNode<Smi>>((*lowerValue_1179)));
          // ../../src/builtins/array-reverse.tq:70:7
          TNode<Smi> t3632 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3633 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lower_526).value()), implicit_cast<TNode<Smi>>(t3632)));
          *lower_526 = implicit_cast<TNode<Smi>>(t3633);
          // ../../src/builtins/array-reverse.tq:71:7
          TNode<Smi> t3634 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3635 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*upper_527).value()), implicit_cast<TNode<Smi>>(t3634)));
          *upper_527 = implicit_cast<TNode<Smi>>(t3635);
        }
        Goto(label_header_1178_1748);
      }
      BIND(label__False_1158);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::FastPackedArrayReverse26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(TNode<FixedArrayBase> p_elements, TNode<Smi> p_length) {
  Label label_macro_end_1749_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1749 = &label_macro_end_1749_impl;
  USE(label_macro_end_1749);
  // ../../src/builtins/array-reverse.tq:61:46
  {
    // ../../src/builtins/array-reverse.tq:62:5
    int31_t t3636 = 0;
    TVARIABLE(Smi, lower_528_impl);
    auto lower_528 = &lower_528_impl;
    USE(lower_528);
    TNode<Smi> t3637 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3636)));
    *lower_528 = implicit_cast<TNode<Smi>>(t3637);
    // ../../src/builtins/array-reverse.tq:63:5
    int31_t t3638 = 1;
    TNode<Smi> t3639 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3638)));
    TNode<Smi> t3640 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(t3639)));
    USE(implicit_cast<TNode<Smi>>(t3640));
    TVARIABLE(Smi, upper_529_impl);
    auto upper_529 = &upper_529_impl;
    USE(upper_529);
    *upper_529 = implicit_cast<TNode<Smi>>(t3640);
    // ../../src/builtins/array-reverse.tq:65:5
    {
      Label label__True_1159_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1159 = &label__True_1159_impl;
      USE(label__True_1159);
      Label label__False_1160_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1160 = &label__False_1160_impl;
      USE(label__False_1160);
      Label label_header_1181_1750_impl(this, {lower_528, upper_529}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1181_1750 = &label_header_1181_1750_impl;
      USE(label_header_1181_1750);
      Goto(label_header_1181_1750);
      BIND(label_header_1181_1750);
      TNode<BoolT> t3641 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*lower_528).value()), implicit_cast<TNode<Smi>>((*upper_529).value())));
      USE(implicit_cast<TNode<BoolT>>(t3641));
      Branch(implicit_cast<TNode<BoolT>>(t3641), label__True_1159, label__False_1160);
      if (label__True_1159->is_used())
      {
        BIND(label__True_1159);
        // ../../src/builtins/array-reverse.tq:65:27
        {
          // ../../src/builtins/array-reverse.tq:66:7
          TNode<Object> t3642 = UncheckedCast<Object>(LoadElement26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*lower_528).value())));
          USE(implicit_cast<TNode<Object>>(t3642));
          TNode<Object> lowerValue_1182_impl;
          auto lowerValue_1182 = &lowerValue_1182_impl;
          USE(lowerValue_1182);
          *lowerValue_1182 = implicit_cast<TNode<Object>>(t3642);
          // ../../src/builtins/array-reverse.tq:67:7
          TNode<Object> t3643 = UncheckedCast<Object>(LoadElement26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*upper_529).value())));
          USE(implicit_cast<TNode<Object>>(t3643));
          TNode<Object> upperValue_1183_impl;
          auto upperValue_1183 = &upperValue_1183_impl;
          USE(upperValue_1183);
          *upperValue_1183 = implicit_cast<TNode<Object>>(t3643);
          // ../../src/builtins/array-reverse.tq:68:7
          StoreElement26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*lower_528).value()), implicit_cast<TNode<Object>>((*upperValue_1183)));
          // ../../src/builtins/array-reverse.tq:69:7
          StoreElement26ATFastPackedObjectElements22UT12ATHeapObject5ATSmi(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*upper_529).value()), implicit_cast<TNode<Object>>((*lowerValue_1182)));
          // ../../src/builtins/array-reverse.tq:70:7
          TNode<Smi> t3644 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3645 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lower_528).value()), implicit_cast<TNode<Smi>>(t3644)));
          *lower_528 = implicit_cast<TNode<Smi>>(t3645);
          // ../../src/builtins/array-reverse.tq:71:7
          TNode<Smi> t3646 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3647 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*upper_529).value()), implicit_cast<TNode<Smi>>(t3646)));
          *upper_529 = implicit_cast<TNode<Smi>>(t3647);
        }
        Goto(label_header_1181_1750);
      }
      BIND(label__False_1160);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::FastPackedArrayReverse26ATFastPackedDoubleElements9ATfloat64(TNode<FixedArrayBase> p_elements, TNode<Smi> p_length) {
  Label label_macro_end_1751_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1751 = &label_macro_end_1751_impl;
  USE(label_macro_end_1751);
  // ../../src/builtins/array-reverse.tq:61:46
  {
    // ../../src/builtins/array-reverse.tq:62:5
    int31_t t3648 = 0;
    TVARIABLE(Smi, lower_530_impl);
    auto lower_530 = &lower_530_impl;
    USE(lower_530);
    TNode<Smi> t3649 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3648)));
    *lower_530 = implicit_cast<TNode<Smi>>(t3649);
    // ../../src/builtins/array-reverse.tq:63:5
    int31_t t3650 = 1;
    TNode<Smi> t3651 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3650)));
    TNode<Smi> t3652 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(t3651)));
    USE(implicit_cast<TNode<Smi>>(t3652));
    TVARIABLE(Smi, upper_531_impl);
    auto upper_531 = &upper_531_impl;
    USE(upper_531);
    *upper_531 = implicit_cast<TNode<Smi>>(t3652);
    // ../../src/builtins/array-reverse.tq:65:5
    {
      Label label__True_1161_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1161 = &label__True_1161_impl;
      USE(label__True_1161);
      Label label__False_1162_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1162 = &label__False_1162_impl;
      USE(label__False_1162);
      Label label_header_1184_1752_impl(this, {lower_530, upper_531}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1184_1752 = &label_header_1184_1752_impl;
      USE(label_header_1184_1752);
      Goto(label_header_1184_1752);
      BIND(label_header_1184_1752);
      TNode<BoolT> t3653 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*lower_530).value()), implicit_cast<TNode<Smi>>((*upper_531).value())));
      USE(implicit_cast<TNode<BoolT>>(t3653));
      Branch(implicit_cast<TNode<BoolT>>(t3653), label__True_1161, label__False_1162);
      if (label__True_1161->is_used())
      {
        BIND(label__True_1161);
        // ../../src/builtins/array-reverse.tq:65:27
        {
          // ../../src/builtins/array-reverse.tq:66:7
          TNode<Float64T> t3654 = UncheckedCast<Float64T>(LoadElement26ATFastPackedDoubleElements9ATfloat64(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*lower_530).value())));
          USE(implicit_cast<TNode<Float64T>>(t3654));
          TNode<Float64T> lowerValue_1185_impl;
          auto lowerValue_1185 = &lowerValue_1185_impl;
          USE(lowerValue_1185);
          *lowerValue_1185 = implicit_cast<TNode<Float64T>>(t3654);
          // ../../src/builtins/array-reverse.tq:67:7
          TNode<Float64T> t3655 = UncheckedCast<Float64T>(LoadElement26ATFastPackedDoubleElements9ATfloat64(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*upper_531).value())));
          USE(implicit_cast<TNode<Float64T>>(t3655));
          TNode<Float64T> upperValue_1186_impl;
          auto upperValue_1186 = &upperValue_1186_impl;
          USE(upperValue_1186);
          *upperValue_1186 = implicit_cast<TNode<Float64T>>(t3655);
          // ../../src/builtins/array-reverse.tq:68:7
          StoreElement26ATFastPackedDoubleElements9ATfloat64(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*lower_530).value()), implicit_cast<TNode<Float64T>>((*upperValue_1186)));
          // ../../src/builtins/array-reverse.tq:69:7
          StoreElement26ATFastPackedDoubleElements9ATfloat64(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>((*upper_531).value()), implicit_cast<TNode<Float64T>>((*lowerValue_1185)));
          // ../../src/builtins/array-reverse.tq:70:7
          TNode<Smi> t3656 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3657 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*lower_530).value()), implicit_cast<TNode<Smi>>(t3656)));
          *lower_530 = implicit_cast<TNode<Smi>>(t3657);
          // ../../src/builtins/array-reverse.tq:71:7
          TNode<Smi> t3658 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3659 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*upper_531).value()), implicit_cast<TNode<Smi>>(t3658)));
          *upper_531 = implicit_cast<TNode<Smi>>(t3659);
        }
        Goto(label_header_1184_1752);
      }
      BIND(label__False_1162);
    }
  }
}

void ArrayBuiltinsFromDSLAssembler::FastSplice12ATFixedArray22UT12ATHeapObject5ATSmi(CodeStubArguments* p_args, TNode<JSArray> p_a, TNode<Smi> p_length, TNode<Smi> p_newLength, TNode<Smi> p_lengthDelta, TNode<Smi> p_actualStart, TNode<Smi> p_insertCount, TNode<Smi> p_actualDeleteCount, Label* label_Bailout_1163) {
  Label label_macro_end_1753_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1753 = &label_macro_end_1753_impl;
  USE(label_macro_end_1753);
  // ../../src/builtins/array-splice.tq:31:22
  {
    // ../../src/builtins/array-splice.tq:32:5
    TNode<FixedArrayBase> t3660 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>(p_a)));
    TNode<FixedArrayBase> elements_1187_impl;
    auto elements_1187 = &elements_1187_impl;
    USE(elements_1187);
    *elements_1187 = implicit_cast<TNode<FixedArrayBase>>(t3660);
    // ../../src/builtins/array-splice.tq:33:5
    TNode<Map> t3661 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*elements_1187))));
    TNode<Map> elementsMap_1188_impl;
    auto elementsMap_1188 = &elementsMap_1188_impl;
    USE(elementsMap_1188);
    *elementsMap_1188 = implicit_cast<TNode<Map>>(t3661);
    // ../../src/builtins/array-splice.tq:37:5
    TVARIABLE(FixedArrayBase, newElements_535_impl);
    auto newElements_535 = &newElements_535_impl;
    USE(newElements_535);
    *newElements_535 = implicit_cast<TNode<FixedArrayBase>>((*elements_1187));
    // ../../src/builtins/array-splice.tq:38:5
    {
      Label label__True_1164_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1164 = &label__True_1164_impl;
      USE(label__True_1164);
      Label label__False_1165_impl(this, {newElements_535}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1165 = &label__False_1165_impl;
      USE(label__False_1165);
      Label label__False_1166_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1166 = &label__False_1166_impl;
      USE(label__False_1166);
      TNode<BoolT> t3662 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*elementsMap_1188)), implicit_cast<TNode<Object>>(kCOWMap())));
      USE(implicit_cast<TNode<BoolT>>(t3662));
      GotoIf(implicit_cast<TNode<BoolT>>(t3662), label__True_1164);
      int31_t t3663 = 0;
      TNode<Smi> t3664 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3663)));
      TNode<BoolT> t3665 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>(p_lengthDelta), implicit_cast<TNode<Smi>>(t3664)));
      USE(implicit_cast<TNode<BoolT>>(t3665));
Branch(implicit_cast<TNode<BoolT>>(t3665), label__True_1164, label__False_1165);
      if (label__True_1164->is_used())
      {
        BIND(label__True_1164);
        // ../../src/builtins/array-splice.tq:38:52
        {
          // ../../src/builtins/array-splice.tq:39:7
          int31_t t3666 = 0;
          TNode<Smi> t3667 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3666)));
          TNode<FixedArray> t3668 = UncheckedCast<FixedArray>(Extract12ATFixedArray(implicit_cast<TNode<FixedArrayBase>>((*elements_1187)), implicit_cast<TNode<Smi>>(t3667), implicit_cast<TNode<Smi>>(p_actualStart), implicit_cast<TNode<Smi>>(p_newLength)));
          USE(implicit_cast<TNode<FixedArray>>(t3668));
          *newElements_535 = implicit_cast<TNode<FixedArrayBase>>(t3668);
          // ../../src/builtins/array-splice.tq:41:7
          {
            Label label__True_1167_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1167 = &label__True_1167_impl;
            USE(label__True_1167);
            Label label__False_1168_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1168 = &label__False_1168_impl;
            USE(label__False_1168);
            TNode<BoolT> t3669 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*elementsMap_1188)), implicit_cast<TNode<Object>>(kCOWMap())));
            USE(implicit_cast<TNode<BoolT>>(t3669));
            Branch(implicit_cast<TNode<BoolT>>(t3669), label__True_1167, label__False_1168);
            if (label__True_1167->is_used())
            {
              BIND(label__True_1167);
              // ../../src/builtins/array-splice.tq:41:35
              {
                // ../../src/builtins/array-splice.tq:42:9
                StoreMap(implicit_cast<TNode<HeapObject>>((*newElements_535).value()), implicit_cast<TNode<Map>>((*elementsMap_1188)));
              }
              Goto(label__False_1168);
            }
            BIND(label__False_1168);
          }
          // ../../src/builtins/array-splice.tq:44:7
          StoreElements(implicit_cast<TNode<JSObject>>(p_a), implicit_cast<TNode<FixedArrayBase>>((*newElements_535).value()));
        }
        Goto(label__False_1165);
      }
      BIND(label__False_1165);
    }
    // ../../src/builtins/array-splice.tq:48:5
    TVARIABLE(Smi, k_536_impl);
    auto k_536 = &k_536_impl;
    USE(k_536);
    *k_536 = implicit_cast<TNode<Smi>>(p_actualStart);
    // ../../src/builtins/array-splice.tq:49:5
    {
      Label label__True_1169_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1169 = &label__True_1169_impl;
      USE(label__True_1169);
      Label label__False_1170_impl(this, {k_536}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1170 = &label__False_1170_impl;
      USE(label__False_1170);
      int31_t t3670 = 0;
      TNode<Smi> t3671 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3670)));
      TNode<BoolT> t3672 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>(p_insertCount), implicit_cast<TNode<Smi>>(t3671)));
      USE(implicit_cast<TNode<BoolT>>(t3672));
      Branch(implicit_cast<TNode<BoolT>>(t3672), label__True_1169, label__False_1170);
      if (label__True_1169->is_used())
      {
        BIND(label__True_1169);
        // ../../src/builtins/array-splice.tq:49:26
        {
          // ../../src/builtins/array-splice.tq:50:7
          TNode<FixedArray> t3673 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>((*newElements_535).value())));
          USE(implicit_cast<TNode<FixedArray>>(t3673));
          TNode<FixedArray> typedNewElements_1189_impl;
          auto typedNewElements_1189 = &typedNewElements_1189_impl;
          USE(typedNewElements_1189);
          *typedNewElements_1189 = implicit_cast<TNode<FixedArray>>(t3673);
          // ../../src/builtins/array-splice.tq:52:7
          int31_t t3674 = 2;
          TNode<IntPtrT> t3675 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_args)));
          Label label_body_1190_1754_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_body_1190_1754 = &label_body_1190_1754_impl;
          USE(label_body_1190_1754);
          Label label_increment_1191_1755_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_increment_1191_1755 = &label_increment_1191_1755_impl;
          USE(label_increment_1191_1755);
          Label label_exit_1192_1756_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_exit_1192_1756 = &label_exit_1192_1756_impl;
          USE(label_exit_1192_1756);
          TVARIABLE(IntPtrT, _for_index_t3676_1193_impl);
          auto _for_index_t3676_1193 = &_for_index_t3676_1193_impl;
          USE(_for_index_t3676_1193);
          TNode<IntPtrT> t3677 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t3674)));
          *_for_index_t3676_1193 = implicit_cast<TNode<IntPtrT>>(t3677);
          Label label_header_1194_1757_impl(this, {_for_index_t3676_1193, k_536}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_header_1194_1757 = &label_header_1194_1757_impl;
          USE(label_header_1194_1757);
          Goto(label_header_1194_1757);
          BIND(label_header_1194_1757);
          TNode<BoolT> t3678 = UncheckedCast<BoolT>(IntPtrLessThan(implicit_cast<TNode<IntPtrT>>((*_for_index_t3676_1193).value()), implicit_cast<TNode<IntPtrT>>(t3675)));
          Branch(implicit_cast<TNode<BoolT>>(t3678), label_body_1190_1754, label_exit_1192_1756);
          BIND(label_body_1190_1754);
          TNode<Object> t3679 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(p_args), implicit_cast<TNode<IntPtrT>>((*_for_index_t3676_1193).value())));
          TVARIABLE(Object, e_537_impl);
          auto e_537 = &e_537_impl;
          USE(e_537);
          *e_537 = implicit_cast<TNode<Object>>(t3679);
          // ../../src/builtins/array-splice.tq:52:41
          {
            // ../../src/builtins/array-splice.tq:55:9
            TNode<Smi> t3680 = implicit_cast<TNode<Smi>>((*k_536).value());
            USE(t3680);
            TNode<Smi> t3681 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
            TNode<Smi> t3682 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_536).value()), implicit_cast<TNode<Smi>>(t3681)));
            *k_536 = implicit_cast<TNode<Smi>>(t3682);
            TNode<Object> t3683 = UncheckedCast<Object>(UnsafeCast22UT12ATHeapObject5ATSmi(implicit_cast<TNode<Object>>((*e_537).value())));
            USE(implicit_cast<TNode<Object>>(t3683));
            StoreFixedArrayElementSmi(implicit_cast<TNode<FixedArray>>((*typedNewElements_1189)), implicit_cast<TNode<Smi>>(t3680), implicit_cast<TNode<Object>>(t3683));
          }
          Goto(label_increment_1191_1755);
          BIND(label_increment_1191_1755);
          TNode<IntPtrT> t3684 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(1)));
          TNode<IntPtrT> t3685 = UncheckedCast<IntPtrT>(IntPtrAdd(implicit_cast<TNode<IntPtrT>>((*_for_index_t3676_1193).value()), implicit_cast<TNode<IntPtrT>>(t3684)));
          *_for_index_t3676_1193 = implicit_cast<TNode<IntPtrT>>(t3685);
          Goto(label_header_1194_1757);
          BIND(label_exit_1192_1756);
        }
        Goto(label__False_1170);
      }
      BIND(label__False_1170);
    }
    // ../../src/builtins/array-splice.tq:60:5
    TNode<Smi> t3686 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(p_actualStart)));
    USE(implicit_cast<TNode<Smi>>(t3686));
    TNode<Smi> t3687 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3686), implicit_cast<TNode<Smi>>(p_actualDeleteCount)));
    USE(implicit_cast<TNode<Smi>>(t3687));
    TVARIABLE(Smi, count_538_impl);
    auto count_538 = &count_538_impl;
    USE(count_538);
    *count_538 = implicit_cast<TNode<Smi>>(t3687);
    // ../../src/builtins/array-splice.tq:61:5
    {
      Label label__True_1171_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1171 = &label__True_1171_impl;
      USE(label__True_1171);
      Label label__False_1172_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1172 = &label__False_1172_impl;
      USE(label__False_1172);
      Label label_header_1195_1758_impl(this, {count_538, k_536}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1195_1758 = &label_header_1195_1758_impl;
      USE(label_header_1195_1758);
      Goto(label_header_1195_1758);
      BIND(label_header_1195_1758);
      int31_t t3688 = 0;
      TNode<Smi> t3689 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3688)));
      TNode<BoolT> t3690 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*count_538).value()), implicit_cast<TNode<Smi>>(t3689)));
      USE(implicit_cast<TNode<BoolT>>(t3690));
      Branch(implicit_cast<TNode<BoolT>>(t3690), label__True_1171, label__False_1172);
      if (label__True_1171->is_used())
      {
        BIND(label__True_1171);
        // ../../src/builtins/array-splice.tq:61:23
        {
          // ../../src/builtins/array-splice.tq:62:7
          TNode<FixedArray> t3691 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>((*elements_1187))));
          USE(implicit_cast<TNode<FixedArray>>(t3691));
          TNode<FixedArray> typedElements_1196_impl;
          auto typedElements_1196 = &typedElements_1196_impl;
          USE(typedElements_1196);
          *typedElements_1196 = implicit_cast<TNode<FixedArray>>(t3691);
          // ../../src/builtins/array-splice.tq:64:7
          TNode<FixedArray> t3692 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>((*newElements_535).value())));
          USE(implicit_cast<TNode<FixedArray>>(t3692));
          TNode<FixedArray> typedNewElements_1197_impl;
          auto typedNewElements_1197 = &typedNewElements_1197_impl;
          USE(typedNewElements_1197);
          *typedNewElements_1197 = implicit_cast<TNode<FixedArray>>(t3692);
          // ../../src/builtins/array-splice.tq:66:7
          TNode<Smi> t3693 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*k_536).value()), implicit_cast<TNode<Smi>>(p_lengthDelta)));
          USE(implicit_cast<TNode<Smi>>(t3693));
          CopyArrayElement(implicit_cast<TNode<FixedArray>>((*typedElements_1196)), implicit_cast<TNode<FixedArray>>((*typedNewElements_1197)), implicit_cast<TNode<Smi>>(t3693), implicit_cast<TNode<Smi>>((*k_536).value()));
          // ../../src/builtins/array-splice.tq:67:7
          TNode<Smi> t3694 = implicit_cast<TNode<Smi>>((*k_536).value());
          USE(t3694);
          TNode<Smi> t3695 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3696 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_536).value()), implicit_cast<TNode<Smi>>(t3695)));
          *k_536 = implicit_cast<TNode<Smi>>(t3696);
          // ../../src/builtins/array-splice.tq:68:7
          TNode<Smi> t3697 = implicit_cast<TNode<Smi>>((*count_538).value());
          USE(t3697);
          TNode<Smi> t3698 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3699 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*count_538).value()), implicit_cast<TNode<Smi>>(t3698)));
          *count_538 = implicit_cast<TNode<Smi>>(t3699);
        }
        Goto(label_header_1195_1758);
      }
      BIND(label__False_1172);
    }
    // ../../src/builtins/array-splice.tq:74:5
    {
      Label label__True_1173_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1173 = &label__True_1173_impl;
      USE(label__True_1173);
      Label label__False_1174_impl(this, {k_536}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1174 = &label__False_1174_impl;
      USE(label__False_1174);
      TNode<BoolT> t3700 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*elements_1187)), implicit_cast<TNode<Object>>((*newElements_535).value())));
      USE(implicit_cast<TNode<BoolT>>(t3700));
      Branch(implicit_cast<TNode<BoolT>>(t3700), label__True_1173, label__False_1174);
      if (label__True_1173->is_used())
      {
        BIND(label__True_1173);
        // ../../src/builtins/array-splice.tq:74:34
        {
          // ../../src/builtins/array-splice.tq:75:7
          TNode<FixedArray> t3701 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>((*newElements_535).value())));
          USE(implicit_cast<TNode<FixedArray>>(t3701));
          TNode<FixedArray> typedNewElements_1198_impl;
          auto typedNewElements_1198 = &typedNewElements_1198_impl;
          USE(typedNewElements_1198);
          *typedNewElements_1198 = implicit_cast<TNode<FixedArray>>(t3701);
          // ../../src/builtins/array-splice.tq:77:7
          TNode<Smi> t3702 = UncheckedCast<Smi>(LoadFixedArrayBaseLength(implicit_cast<TNode<FixedArrayBase>>((*elements_1187))));
          TNode<Smi> limit_1199_impl;
          auto limit_1199 = &limit_1199_impl;
          USE(limit_1199);
          *limit_1199 = implicit_cast<TNode<Smi>>(t3702);
          // ../../src/builtins/array-splice.tq:78:7
          {
            Label label__True_1175_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1175 = &label__True_1175_impl;
            USE(label__True_1175);
            Label label__False_1176_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1176 = &label__False_1176_impl;
            USE(label__False_1176);
            Label label_header_1200_1759_impl(this, {k_536}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1200_1759 = &label_header_1200_1759_impl;
            USE(label_header_1200_1759);
            Goto(label_header_1200_1759);
            BIND(label_header_1200_1759);
            TNode<BoolT> t3703 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*k_536).value()), implicit_cast<TNode<Smi>>((*limit_1199))));
            USE(implicit_cast<TNode<BoolT>>(t3703));
            Branch(implicit_cast<TNode<BoolT>>(t3703), label__True_1175, label__False_1176);
            if (label__True_1175->is_used())
            {
              BIND(label__True_1175);
              // ../../src/builtins/array-splice.tq:78:25
              {
                // ../../src/builtins/array-splice.tq:79:9
                StoreArrayHole(implicit_cast<TNode<FixedArray>>((*typedNewElements_1198)), implicit_cast<TNode<Smi>>((*k_536).value()));
                // ../../src/builtins/array-splice.tq:80:9
                TNode<Smi> t3704 = implicit_cast<TNode<Smi>>((*k_536).value());
                USE(t3704);
                TNode<Smi> t3705 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3706 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_536).value()), implicit_cast<TNode<Smi>>(t3705)));
                *k_536 = implicit_cast<TNode<Smi>>(t3706);
              }
              Goto(label_header_1200_1759);
            }
            BIND(label__False_1176);
          }
        }
        Goto(label__False_1174);
      }
      BIND(label__False_1174);
    }
    // ../../src/builtins/array-splice.tq:85:5
    StoreJSArrayLength(implicit_cast<TNode<JSArray>>(p_a), implicit_cast<TNode<Smi>>(p_newLength));
  }
}

void ArrayBuiltinsFromDSLAssembler::FastSplice18ATFixedDoubleArray22UT12ATHeapNumber5ATSmi(CodeStubArguments* p_args, TNode<JSArray> p_a, TNode<Smi> p_length, TNode<Smi> p_newLength, TNode<Smi> p_lengthDelta, TNode<Smi> p_actualStart, TNode<Smi> p_insertCount, TNode<Smi> p_actualDeleteCount, Label* label_Bailout_1177) {
  Label label_macro_end_1760_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1760 = &label_macro_end_1760_impl;
  USE(label_macro_end_1760);
  // ../../src/builtins/array-splice.tq:31:22
  {
    // ../../src/builtins/array-splice.tq:32:5
    TNode<FixedArrayBase> t3707 = UncheckedCast<FixedArrayBase>(LoadElements(implicit_cast<TNode<JSObject>>(p_a)));
    TNode<FixedArrayBase> elements_1201_impl;
    auto elements_1201 = &elements_1201_impl;
    USE(elements_1201);
    *elements_1201 = implicit_cast<TNode<FixedArrayBase>>(t3707);
    // ../../src/builtins/array-splice.tq:33:5
    TNode<Map> t3708 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*elements_1201))));
    TNode<Map> elementsMap_1202_impl;
    auto elementsMap_1202 = &elementsMap_1202_impl;
    USE(elementsMap_1202);
    *elementsMap_1202 = implicit_cast<TNode<Map>>(t3708);
    // ../../src/builtins/array-splice.tq:37:5
    TVARIABLE(FixedArrayBase, newElements_539_impl);
    auto newElements_539 = &newElements_539_impl;
    USE(newElements_539);
    *newElements_539 = implicit_cast<TNode<FixedArrayBase>>((*elements_1201));
    // ../../src/builtins/array-splice.tq:38:5
    {
      Label label__True_1178_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1178 = &label__True_1178_impl;
      USE(label__True_1178);
      Label label__False_1179_impl(this, {newElements_539}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1179 = &label__False_1179_impl;
      USE(label__False_1179);
      Label label__False_1180_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1180 = &label__False_1180_impl;
      USE(label__False_1180);
      TNode<BoolT> t3709 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*elementsMap_1202)), implicit_cast<TNode<Object>>(kCOWMap())));
      USE(implicit_cast<TNode<BoolT>>(t3709));
      GotoIf(implicit_cast<TNode<BoolT>>(t3709), label__True_1178);
      int31_t t3710 = 0;
      TNode<Smi> t3711 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3710)));
      TNode<BoolT> t3712 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>(p_lengthDelta), implicit_cast<TNode<Smi>>(t3711)));
      USE(implicit_cast<TNode<BoolT>>(t3712));
Branch(implicit_cast<TNode<BoolT>>(t3712), label__True_1178, label__False_1179);
      if (label__True_1178->is_used())
      {
        BIND(label__True_1178);
        // ../../src/builtins/array-splice.tq:38:52
        {
          // ../../src/builtins/array-splice.tq:39:7
          int31_t t3713 = 0;
          TNode<Smi> t3714 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3713)));
          TNode<FixedDoubleArray> t3715 = UncheckedCast<FixedDoubleArray>(Extract18ATFixedDoubleArray(implicit_cast<TNode<FixedArrayBase>>((*elements_1201)), implicit_cast<TNode<Smi>>(t3714), implicit_cast<TNode<Smi>>(p_actualStart), implicit_cast<TNode<Smi>>(p_newLength)));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t3715));
          *newElements_539 = implicit_cast<TNode<FixedArrayBase>>(t3715);
          // ../../src/builtins/array-splice.tq:41:7
          {
            Label label__True_1181_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1181 = &label__True_1181_impl;
            USE(label__True_1181);
            Label label__False_1182_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1182 = &label__False_1182_impl;
            USE(label__False_1182);
            TNode<BoolT> t3716 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*elementsMap_1202)), implicit_cast<TNode<Object>>(kCOWMap())));
            USE(implicit_cast<TNode<BoolT>>(t3716));
            Branch(implicit_cast<TNode<BoolT>>(t3716), label__True_1181, label__False_1182);
            if (label__True_1181->is_used())
            {
              BIND(label__True_1181);
              // ../../src/builtins/array-splice.tq:41:35
              {
                // ../../src/builtins/array-splice.tq:42:9
                StoreMap(implicit_cast<TNode<HeapObject>>((*newElements_539).value()), implicit_cast<TNode<Map>>((*elementsMap_1202)));
              }
              Goto(label__False_1182);
            }
            BIND(label__False_1182);
          }
          // ../../src/builtins/array-splice.tq:44:7
          StoreElements(implicit_cast<TNode<JSObject>>(p_a), implicit_cast<TNode<FixedArrayBase>>((*newElements_539).value()));
        }
        Goto(label__False_1179);
      }
      BIND(label__False_1179);
    }
    // ../../src/builtins/array-splice.tq:48:5
    TVARIABLE(Smi, k_540_impl);
    auto k_540 = &k_540_impl;
    USE(k_540);
    *k_540 = implicit_cast<TNode<Smi>>(p_actualStart);
    // ../../src/builtins/array-splice.tq:49:5
    {
      Label label__True_1183_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1183 = &label__True_1183_impl;
      USE(label__True_1183);
      Label label__False_1184_impl(this, {k_540}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1184 = &label__False_1184_impl;
      USE(label__False_1184);
      int31_t t3717 = 0;
      TNode<Smi> t3718 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3717)));
      TNode<BoolT> t3719 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>(p_insertCount), implicit_cast<TNode<Smi>>(t3718)));
      USE(implicit_cast<TNode<BoolT>>(t3719));
      Branch(implicit_cast<TNode<BoolT>>(t3719), label__True_1183, label__False_1184);
      if (label__True_1183->is_used())
      {
        BIND(label__True_1183);
        // ../../src/builtins/array-splice.tq:49:26
        {
          // ../../src/builtins/array-splice.tq:50:7
          TNode<FixedDoubleArray> t3720 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>((*newElements_539).value())));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t3720));
          TNode<FixedDoubleArray> typedNewElements_1203_impl;
          auto typedNewElements_1203 = &typedNewElements_1203_impl;
          USE(typedNewElements_1203);
          *typedNewElements_1203 = implicit_cast<TNode<FixedDoubleArray>>(t3720);
          // ../../src/builtins/array-splice.tq:52:7
          int31_t t3721 = 2;
          TNode<IntPtrT> t3722 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(p_args)));
          Label label_body_1204_1761_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_body_1204_1761 = &label_body_1204_1761_impl;
          USE(label_body_1204_1761);
          Label label_increment_1205_1762_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_increment_1205_1762 = &label_increment_1205_1762_impl;
          USE(label_increment_1205_1762);
          Label label_exit_1206_1763_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_exit_1206_1763 = &label_exit_1206_1763_impl;
          USE(label_exit_1206_1763);
          TVARIABLE(IntPtrT, _for_index_t3723_1207_impl);
          auto _for_index_t3723_1207 = &_for_index_t3723_1207_impl;
          USE(_for_index_t3723_1207);
          TNode<IntPtrT> t3724 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t3721)));
          *_for_index_t3723_1207 = implicit_cast<TNode<IntPtrT>>(t3724);
          Label label_header_1208_1764_impl(this, {_for_index_t3723_1207, k_540}, compiler::CodeAssemblerLabel::kNonDeferred);
          Label* label_header_1208_1764 = &label_header_1208_1764_impl;
          USE(label_header_1208_1764);
          Goto(label_header_1208_1764);
          BIND(label_header_1208_1764);
          TNode<BoolT> t3725 = UncheckedCast<BoolT>(IntPtrLessThan(implicit_cast<TNode<IntPtrT>>((*_for_index_t3723_1207).value()), implicit_cast<TNode<IntPtrT>>(t3722)));
          Branch(implicit_cast<TNode<BoolT>>(t3725), label_body_1204_1761, label_exit_1206_1763);
          BIND(label_body_1204_1761);
          TNode<Object> t3726 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(p_args), implicit_cast<TNode<IntPtrT>>((*_for_index_t3723_1207).value())));
          TVARIABLE(Object, e_541_impl);
          auto e_541 = &e_541_impl;
          USE(e_541);
          *e_541 = implicit_cast<TNode<Object>>(t3726);
          // ../../src/builtins/array-splice.tq:52:41
          {
            // ../../src/builtins/array-splice.tq:55:9
            TNode<Smi> t3727 = implicit_cast<TNode<Smi>>((*k_540).value());
            USE(t3727);
            TNode<Smi> t3728 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
            TNode<Smi> t3729 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_540).value()), implicit_cast<TNode<Smi>>(t3728)));
            *k_540 = implicit_cast<TNode<Smi>>(t3729);
            TNode<Number> t3730 = UncheckedCast<Number>(UnsafeCast22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Object>>((*e_541).value())));
            USE(implicit_cast<TNode<Number>>(t3730));
            StoreFixedDoubleArrayNumber(implicit_cast<TNode<FixedDoubleArray>>((*typedNewElements_1203)), implicit_cast<TNode<Smi>>(t3727), implicit_cast<TNode<Number>>(t3730));
          }
          Goto(label_increment_1205_1762);
          BIND(label_increment_1205_1762);
          TNode<IntPtrT> t3731 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(1)));
          TNode<IntPtrT> t3732 = UncheckedCast<IntPtrT>(IntPtrAdd(implicit_cast<TNode<IntPtrT>>((*_for_index_t3723_1207).value()), implicit_cast<TNode<IntPtrT>>(t3731)));
          *_for_index_t3723_1207 = implicit_cast<TNode<IntPtrT>>(t3732);
          Goto(label_header_1208_1764);
          BIND(label_exit_1206_1763);
        }
        Goto(label__False_1184);
      }
      BIND(label__False_1184);
    }
    // ../../src/builtins/array-splice.tq:60:5
    TNode<Smi> t3733 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(p_length), implicit_cast<TNode<Smi>>(p_actualStart)));
    USE(implicit_cast<TNode<Smi>>(t3733));
    TNode<Smi> t3734 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>(t3733), implicit_cast<TNode<Smi>>(p_actualDeleteCount)));
    USE(implicit_cast<TNode<Smi>>(t3734));
    TVARIABLE(Smi, count_542_impl);
    auto count_542 = &count_542_impl;
    USE(count_542);
    *count_542 = implicit_cast<TNode<Smi>>(t3734);
    // ../../src/builtins/array-splice.tq:61:5
    {
      Label label__True_1185_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1185 = &label__True_1185_impl;
      USE(label__True_1185);
      Label label__False_1186_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1186 = &label__False_1186_impl;
      USE(label__False_1186);
      Label label_header_1209_1765_impl(this, {count_542, k_540}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_header_1209_1765 = &label_header_1209_1765_impl;
      USE(label_header_1209_1765);
      Goto(label_header_1209_1765);
      BIND(label_header_1209_1765);
      int31_t t3735 = 0;
      TNode<Smi> t3736 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(t3735)));
      TNode<BoolT> t3737 = UncheckedCast<BoolT>(SmiGreaterThan(implicit_cast<TNode<Smi>>((*count_542).value()), implicit_cast<TNode<Smi>>(t3736)));
      USE(implicit_cast<TNode<BoolT>>(t3737));
      Branch(implicit_cast<TNode<BoolT>>(t3737), label__True_1185, label__False_1186);
      if (label__True_1185->is_used())
      {
        BIND(label__True_1185);
        // ../../src/builtins/array-splice.tq:61:23
        {
          // ../../src/builtins/array-splice.tq:62:7
          TNode<FixedDoubleArray> t3738 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>((*elements_1201))));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t3738));
          TNode<FixedDoubleArray> typedElements_1210_impl;
          auto typedElements_1210 = &typedElements_1210_impl;
          USE(typedElements_1210);
          *typedElements_1210 = implicit_cast<TNode<FixedDoubleArray>>(t3738);
          // ../../src/builtins/array-splice.tq:64:7
          TNode<FixedDoubleArray> t3739 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>((*newElements_539).value())));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t3739));
          TNode<FixedDoubleArray> typedNewElements_1211_impl;
          auto typedNewElements_1211 = &typedNewElements_1211_impl;
          USE(typedNewElements_1211);
          *typedNewElements_1211 = implicit_cast<TNode<FixedDoubleArray>>(t3739);
          // ../../src/builtins/array-splice.tq:66:7
          TNode<Smi> t3740 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*k_540).value()), implicit_cast<TNode<Smi>>(p_lengthDelta)));
          USE(implicit_cast<TNode<Smi>>(t3740));
          CopyArrayElement(implicit_cast<TNode<FixedDoubleArray>>((*typedElements_1210)), implicit_cast<TNode<FixedDoubleArray>>((*typedNewElements_1211)), implicit_cast<TNode<Smi>>(t3740), implicit_cast<TNode<Smi>>((*k_540).value()));
          // ../../src/builtins/array-splice.tq:67:7
          TNode<Smi> t3741 = implicit_cast<TNode<Smi>>((*k_540).value());
          USE(t3741);
          TNode<Smi> t3742 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3743 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_540).value()), implicit_cast<TNode<Smi>>(t3742)));
          *k_540 = implicit_cast<TNode<Smi>>(t3743);
          // ../../src/builtins/array-splice.tq:68:7
          TNode<Smi> t3744 = implicit_cast<TNode<Smi>>((*count_542).value());
          USE(t3744);
          TNode<Smi> t3745 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
          TNode<Smi> t3746 = UncheckedCast<Smi>(SmiSub(implicit_cast<TNode<Smi>>((*count_542).value()), implicit_cast<TNode<Smi>>(t3745)));
          *count_542 = implicit_cast<TNode<Smi>>(t3746);
        }
        Goto(label_header_1209_1765);
      }
      BIND(label__False_1186);
    }
    // ../../src/builtins/array-splice.tq:74:5
    {
      Label label__True_1187_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1187 = &label__True_1187_impl;
      USE(label__True_1187);
      Label label__False_1188_impl(this, {k_540}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1188 = &label__False_1188_impl;
      USE(label__False_1188);
      TNode<BoolT> t3747 = UncheckedCast<BoolT>(WordEqual(implicit_cast<TNode<Object>>((*elements_1201)), implicit_cast<TNode<Object>>((*newElements_539).value())));
      USE(implicit_cast<TNode<BoolT>>(t3747));
      Branch(implicit_cast<TNode<BoolT>>(t3747), label__True_1187, label__False_1188);
      if (label__True_1187->is_used())
      {
        BIND(label__True_1187);
        // ../../src/builtins/array-splice.tq:74:34
        {
          // ../../src/builtins/array-splice.tq:75:7
          TNode<FixedDoubleArray> t3748 = UncheckedCast<FixedDoubleArray>(UnsafeCast18ATFixedDoubleArray(implicit_cast<TNode<Object>>((*newElements_539).value())));
          USE(implicit_cast<TNode<FixedDoubleArray>>(t3748));
          TNode<FixedDoubleArray> typedNewElements_1212_impl;
          auto typedNewElements_1212 = &typedNewElements_1212_impl;
          USE(typedNewElements_1212);
          *typedNewElements_1212 = implicit_cast<TNode<FixedDoubleArray>>(t3748);
          // ../../src/builtins/array-splice.tq:77:7
          TNode<Smi> t3749 = UncheckedCast<Smi>(LoadFixedArrayBaseLength(implicit_cast<TNode<FixedArrayBase>>((*elements_1201))));
          TNode<Smi> limit_1213_impl;
          auto limit_1213 = &limit_1213_impl;
          USE(limit_1213);
          *limit_1213 = implicit_cast<TNode<Smi>>(t3749);
          // ../../src/builtins/array-splice.tq:78:7
          {
            Label label__True_1189_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_1189 = &label__True_1189_impl;
            USE(label__True_1189);
            Label label__False_1190_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_1190 = &label__False_1190_impl;
            USE(label__False_1190);
            Label label_header_1214_1766_impl(this, {k_540}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label_header_1214_1766 = &label_header_1214_1766_impl;
            USE(label_header_1214_1766);
            Goto(label_header_1214_1766);
            BIND(label_header_1214_1766);
            TNode<BoolT> t3750 = UncheckedCast<BoolT>(SmiLessThan(implicit_cast<TNode<Smi>>((*k_540).value()), implicit_cast<TNode<Smi>>((*limit_1213))));
            USE(implicit_cast<TNode<BoolT>>(t3750));
            Branch(implicit_cast<TNode<BoolT>>(t3750), label__True_1189, label__False_1190);
            if (label__True_1189->is_used())
            {
              BIND(label__True_1189);
              // ../../src/builtins/array-splice.tq:78:25
              {
                // ../../src/builtins/array-splice.tq:79:9
                StoreArrayHole(implicit_cast<TNode<FixedDoubleArray>>((*typedNewElements_1212)), implicit_cast<TNode<Smi>>((*k_540).value()));
                // ../../src/builtins/array-splice.tq:80:9
                TNode<Smi> t3751 = implicit_cast<TNode<Smi>>((*k_540).value());
                USE(t3751);
                TNode<Smi> t3752 = UncheckedCast<Smi>(FromConstexpr5ATSmi(implicit_cast<int31_t>(1)));
                TNode<Smi> t3753 = UncheckedCast<Smi>(SmiAdd(implicit_cast<TNode<Smi>>((*k_540).value()), implicit_cast<TNode<Smi>>(t3752)));
                *k_540 = implicit_cast<TNode<Smi>>(t3753);
              }
              Goto(label_header_1214_1766);
            }
            BIND(label__False_1190);
          }
        }
        Goto(label__False_1188);
      }
      BIND(label__False_1188);
    }
    // ../../src/builtins/array-splice.tq:85:5
    StoreJSArrayLength(implicit_cast<TNode<JSArray>>(p_a), implicit_cast<TNode<Smi>>(p_newLength));
  }
}

TF_BUILTIN(Load25ATGenericElementsAccessor, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  // ../../third_party/v8/builtins/array-sort.tq:129:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:130:5
    TNode<Object> t3833 = UncheckedCast<Object>(GetProperty(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_elements), implicit_cast<TNode<Object>>(p_index)));
    USE(implicit_cast<TNode<Object>>(t3833));
    Return(implicit_cast<TNode<Object>>(t3833));
  }
}

TF_BUILTIN(Store25ATGenericElementsAccessor, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<FixedArray> p_sortState = UncheckedCast<FixedArray>(Parameter(Descriptor::kSortState));
  USE(p_sortState);
  TNode<HeapObject> p_elements = UncheckedCast<HeapObject>(Parameter(Descriptor::kElements));
  USE(p_elements);
  TNode<Smi> p_index = UncheckedCast<Smi>(Parameter(Descriptor::kIndex));
  USE(p_index);
  TNode<Object> p_value = UncheckedCast<Object>(Parameter(Descriptor::kValue));
  USE(p_value);
  // ../../third_party/v8/builtins/array-sort.tq:198:27
  {
    // ../../third_party/v8/builtins/array-sort.tq:199:5
    CallBuiltin(Builtins::kSetProperty, implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_elements), implicit_cast<TNode<Object>>(p_index), implicit_cast<TNode<Object>>(p_value));
    // ../../third_party/v8/builtins/array-sort.tq:200:5
    Return(implicit_cast<TNode<Smi>>(kSuccess()));
  }
}

void ArrayBuiltinsFromDSLAssembler::InitializeSortStateAccessor20ATFastDoubleElements(TNode<FixedArray> p_sortState) {
  Label label_macro_end_1778_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1778 = &label_macro_end_1778_impl;
  USE(label_macro_end_1778);
  // ../../third_party/v8/builtins/array-sort.tq:1635:76
  {
    // ../../third_party/v8/builtins/array-sort.tq:1636:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx()), implicit_cast<TNode<Object>>(kFastElementsAccessorId()));
    // ../../third_party/v8/builtins/array-sort.tq:1637:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kLoadFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad20ATFastDoubleElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1638:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kStoreFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kStore20ATFastDoubleElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1639:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kCanUseSameAccessorFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kCanUseSameAccessor20ATFastDoubleElements).code())));
  }
}

void ArrayBuiltinsFromDSLAssembler::InitializeSortStateAccessor23ATFastPackedSmiElements(TNode<FixedArray> p_sortState) {
  Label label_macro_end_1779_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1779 = &label_macro_end_1779_impl;
  USE(label_macro_end_1779);
  // ../../third_party/v8/builtins/array-sort.tq:1635:76
  {
    // ../../third_party/v8/builtins/array-sort.tq:1636:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx()), implicit_cast<TNode<Object>>(kFastElementsAccessorId()));
    // ../../third_party/v8/builtins/array-sort.tq:1637:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kLoadFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad23ATFastPackedSmiElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1638:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kStoreFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kStore23ATFastPackedSmiElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1639:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kCanUseSameAccessorFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kCanUseSameAccessor23ATFastPackedSmiElements).code())));
  }
}

void ArrayBuiltinsFromDSLAssembler::InitializeSortStateAccessor25ATFastSmiOrObjectElements(TNode<FixedArray> p_sortState) {
  Label label_macro_end_1780_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1780 = &label_macro_end_1780_impl;
  USE(label_macro_end_1780);
  // ../../third_party/v8/builtins/array-sort.tq:1635:76
  {
    // ../../third_party/v8/builtins/array-sort.tq:1636:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx()), implicit_cast<TNode<Object>>(kFastElementsAccessorId()));
    // ../../third_party/v8/builtins/array-sort.tq:1637:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kLoadFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad25ATFastSmiOrObjectElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1638:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kStoreFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kStore25ATFastSmiOrObjectElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1639:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kCanUseSameAccessorFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kCanUseSameAccessor25ATFastSmiOrObjectElements).code())));
  }
}

void ArrayBuiltinsFromDSLAssembler::InitializeSortStateAccessor20ATDictionaryElements(TNode<FixedArray> p_sortState) {
  Label label_macro_end_1781_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1781 = &label_macro_end_1781_impl;
  USE(label_macro_end_1781);
  // ../../third_party/v8/builtins/array-sort.tq:1635:76
  {
    // ../../third_party/v8/builtins/array-sort.tq:1636:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kAccessorIdx()), implicit_cast<TNode<Object>>(kFastElementsAccessorId()));
    // ../../third_party/v8/builtins/array-sort.tq:1637:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kLoadFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kLoad20ATDictionaryElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1638:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kStoreFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kStore20ATDictionaryElements).code())));
    // ../../third_party/v8/builtins/array-sort.tq:1639:5
    StoreFixedArrayElement(implicit_cast<TNode<FixedArray>>(p_sortState), implicit_cast<int31_t>(kCanUseSameAccessorFnIdx()), implicit_cast<TNode<Object>>(HeapConstant(Builtins::CallableFor(isolate(), Builtins::kCanUseSameAccessor20ATDictionaryElements).code())));
  }
}

compiler::TNode<FixedArray> ArrayBuiltinsFromDSLAssembler::Extract12ATFixedArray(TNode<FixedArrayBase> p_elements, TNode<Smi> p_first, TNode<Smi> p_count, TNode<Smi> p_capacity) {
  TVARIABLE(FixedArray, _return_555_impl);
  auto _return_555 = &_return_555_impl;
  USE(_return_555);
  Label label_macro_end_1782_impl(this, {_return_555}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1782 = &label_macro_end_1782_impl;
  USE(label_macro_end_1782);
  // ../../src/builtins/array-splice.tq:12:38
  {
    // ../../src/builtins/array-splice.tq:13:5
    TNode<FixedArrayBase> t3834 = UncheckedCast<FixedArrayBase>(ExtractFixedArray(implicit_cast<TNode<FixedArrayBase>>(p_elements), implicit_cast<TNode<Smi>>(p_first), implicit_cast<TNode<Smi>>(p_count), implicit_cast<TNode<Smi>>(p_capacity)));
    USE(implicit_cast<TNode<FixedArrayBase>>(t3834));
    TNode<FixedArray> t3835 = UncheckedCast<FixedArray>(UnsafeCast12ATFixedArray(implicit_cast<TNode<Object>>(t3834)));
    USE(implicit_cast<TNode<FixedArray>>(t3835));
    *_return_555 = implicit_cast<TNode<FixedArray>>(t3835);
    Goto(label_macro_end_1782);
  }
  BIND(label_macro_end_1782);
  return implicit_cast<TNode<FixedArray>>((*_return_555).value());
}

TF_BUILTIN(CanUseSameAccessor20ATFastDoubleElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<JSReceiver> p_receiver = UncheckedCast<JSReceiver>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_initialReceiverMap = UncheckedCast<Object>(Parameter(Descriptor::kInitialReceiverMap));
  USE(p_initialReceiverMap);
  TNode<Number> p_initialReceiverLength = UncheckedCast<Number>(Parameter(Descriptor::kInitialReceiverLength));
  USE(p_initialReceiverLength);
  // ../../third_party/v8/builtins/array-sort.tq:327:47
  {
    // ../../third_party/v8/builtins/array-sort.tq:328:5
    // ../../third_party/v8/builtins/array-sort.tq:330:5
    TNode<JSArray> t3836 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSArray>>(t3836));
    TVARIABLE(JSArray, a_556_impl);
    auto a_556 = &a_556_impl;
    USE(a_556);
    *a_556 = implicit_cast<TNode<JSArray>>(t3836);
    // ../../third_party/v8/builtins/array-sort.tq:331:5
    {
      Label label__True_1195_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1195 = &label__True_1195_impl;
      USE(label__True_1195);
      Label label__False_1196_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1196 = &label__False_1196_impl;
      USE(label__False_1196);
      TNode<Map> t3837 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*a_556).value())));
      TNode<BoolT> t3838 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>(t3837), implicit_cast<TNode<Object>>(p_initialReceiverMap)));
      USE(implicit_cast<TNode<BoolT>>(t3838));
      Branch(implicit_cast<TNode<BoolT>>(t3838), label__True_1195, label__False_1196);
      if (label__True_1195->is_used())
      {
        BIND(label__True_1195);
        // ../../third_party/v8/builtins/array-sort.tq:331:38
        Return(implicit_cast<TNode<Oddball>>(False()));
      }
      BIND(label__False_1196);
    }
    // ../../third_party/v8/builtins/array-sort.tq:333:5
    // ../../third_party/v8/builtins/array-sort.tq:334:5
    TNode<Smi> t3839 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(p_initialReceiverLength)));
    USE(implicit_cast<TNode<Smi>>(t3839));
    TVARIABLE(Smi, originalLength_557_impl);
    auto originalLength_557 = &originalLength_557_impl;
    USE(originalLength_557);
    *originalLength_557 = implicit_cast<TNode<Smi>>(t3839);
    // ../../third_party/v8/builtins/array-sort.tq:335:5
    {
      Label label__True_1197_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1197 = &label__True_1197_impl;
      USE(label__True_1197);
      Label label__False_1198_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1198 = &label__False_1198_impl;
      USE(label__False_1198);
      TNode<Smi> t3840 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*a_556).value())));
      TNode<BoolT> t3841 = UncheckedCast<BoolT>(SmiNotEqual(implicit_cast<TNode<Smi>>(t3840), implicit_cast<TNode<Smi>>((*originalLength_557).value())));
      USE(implicit_cast<TNode<BoolT>>(t3841));
      Branch(implicit_cast<TNode<BoolT>>(t3841), label__True_1197, label__False_1198);
      if (label__True_1197->is_used())
      {
        BIND(label__True_1197);
        // ../../third_party/v8/builtins/array-sort.tq:335:42
        Return(implicit_cast<TNode<Oddball>>(False()));
      }
      BIND(label__False_1198);
    }
    // ../../third_party/v8/builtins/array-sort.tq:337:5
    Return(implicit_cast<TNode<Oddball>>(True()));
  }
}

TF_BUILTIN(CanUseSameAccessor23ATFastPackedSmiElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<JSReceiver> p_receiver = UncheckedCast<JSReceiver>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_initialReceiverMap = UncheckedCast<Object>(Parameter(Descriptor::kInitialReceiverMap));
  USE(p_initialReceiverMap);
  TNode<Number> p_initialReceiverLength = UncheckedCast<Number>(Parameter(Descriptor::kInitialReceiverLength));
  USE(p_initialReceiverLength);
  // ../../third_party/v8/builtins/array-sort.tq:327:47
  {
    // ../../third_party/v8/builtins/array-sort.tq:328:5
    // ../../third_party/v8/builtins/array-sort.tq:330:5
    TNode<JSArray> t3842 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSArray>>(t3842));
    TVARIABLE(JSArray, a_558_impl);
    auto a_558 = &a_558_impl;
    USE(a_558);
    *a_558 = implicit_cast<TNode<JSArray>>(t3842);
    // ../../third_party/v8/builtins/array-sort.tq:331:5
    {
      Label label__True_1199_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1199 = &label__True_1199_impl;
      USE(label__True_1199);
      Label label__False_1200_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1200 = &label__False_1200_impl;
      USE(label__False_1200);
      TNode<Map> t3843 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*a_558).value())));
      TNode<BoolT> t3844 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>(t3843), implicit_cast<TNode<Object>>(p_initialReceiverMap)));
      USE(implicit_cast<TNode<BoolT>>(t3844));
      Branch(implicit_cast<TNode<BoolT>>(t3844), label__True_1199, label__False_1200);
      if (label__True_1199->is_used())
      {
        BIND(label__True_1199);
        // ../../third_party/v8/builtins/array-sort.tq:331:38
        Return(implicit_cast<TNode<Oddball>>(False()));
      }
      BIND(label__False_1200);
    }
    // ../../third_party/v8/builtins/array-sort.tq:333:5
    // ../../third_party/v8/builtins/array-sort.tq:334:5
    TNode<Smi> t3845 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(p_initialReceiverLength)));
    USE(implicit_cast<TNode<Smi>>(t3845));
    TVARIABLE(Smi, originalLength_559_impl);
    auto originalLength_559 = &originalLength_559_impl;
    USE(originalLength_559);
    *originalLength_559 = implicit_cast<TNode<Smi>>(t3845);
    // ../../third_party/v8/builtins/array-sort.tq:335:5
    {
      Label label__True_1201_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1201 = &label__True_1201_impl;
      USE(label__True_1201);
      Label label__False_1202_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1202 = &label__False_1202_impl;
      USE(label__False_1202);
      TNode<Smi> t3846 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*a_558).value())));
      TNode<BoolT> t3847 = UncheckedCast<BoolT>(SmiNotEqual(implicit_cast<TNode<Smi>>(t3846), implicit_cast<TNode<Smi>>((*originalLength_559).value())));
      USE(implicit_cast<TNode<BoolT>>(t3847));
      Branch(implicit_cast<TNode<BoolT>>(t3847), label__True_1201, label__False_1202);
      if (label__True_1201->is_used())
      {
        BIND(label__True_1201);
        // ../../third_party/v8/builtins/array-sort.tq:335:42
        Return(implicit_cast<TNode<Oddball>>(False()));
      }
      BIND(label__False_1202);
    }
    // ../../third_party/v8/builtins/array-sort.tq:337:5
    Return(implicit_cast<TNode<Oddball>>(True()));
  }
}

TF_BUILTIN(CanUseSameAccessor25ATFastSmiOrObjectElements, ArrayBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  TNode<JSReceiver> p_receiver = UncheckedCast<JSReceiver>(Parameter(Descriptor::kReceiver));
  USE(p_receiver);
  TNode<Object> p_initialReceiverMap = UncheckedCast<Object>(Parameter(Descriptor::kInitialReceiverMap));
  USE(p_initialReceiverMap);
  TNode<Number> p_initialReceiverLength = UncheckedCast<Number>(Parameter(Descriptor::kInitialReceiverLength));
  USE(p_initialReceiverLength);
  // ../../third_party/v8/builtins/array-sort.tq:327:47
  {
    // ../../third_party/v8/builtins/array-sort.tq:328:5
    // ../../third_party/v8/builtins/array-sort.tq:330:5
    TNode<JSArray> t3848 = UncheckedCast<JSArray>(UnsafeCast9ATJSArray(implicit_cast<TNode<Object>>(p_receiver)));
    USE(implicit_cast<TNode<JSArray>>(t3848));
    TVARIABLE(JSArray, a_560_impl);
    auto a_560 = &a_560_impl;
    USE(a_560);
    *a_560 = implicit_cast<TNode<JSArray>>(t3848);
    // ../../third_party/v8/builtins/array-sort.tq:331:5
    {
      Label label__True_1203_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1203 = &label__True_1203_impl;
      USE(label__True_1203);
      Label label__False_1204_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1204 = &label__False_1204_impl;
      USE(label__False_1204);
      TNode<Map> t3849 = UncheckedCast<Map>(LoadMap(implicit_cast<TNode<HeapObject>>((*a_560).value())));
      TNode<BoolT> t3850 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<Object>>(t3849), implicit_cast<TNode<Object>>(p_initialReceiverMap)));
      USE(implicit_cast<TNode<BoolT>>(t3850));
      Branch(implicit_cast<TNode<BoolT>>(t3850), label__True_1203, label__False_1204);
      if (label__True_1203->is_used())
      {
        BIND(label__True_1203);
        // ../../third_party/v8/builtins/array-sort.tq:331:38
        Return(implicit_cast<TNode<Oddball>>(False()));
      }
      BIND(label__False_1204);
    }
    // ../../third_party/v8/builtins/array-sort.tq:333:5
    // ../../third_party/v8/builtins/array-sort.tq:334:5
    TNode<Smi> t3851 = UncheckedCast<Smi>(UnsafeCast5ATSmi(implicit_cast<TNode<Object>>(p_initialReceiverLength)));
    USE(implicit_cast<TNode<Smi>>(t3851));
    TVARIABLE(Smi, originalLength_561_impl);
    auto originalLength_561 = &originalLength_561_impl;
    USE(originalLength_561);
    *originalLength_561 = implicit_cast<TNode<Smi>>(t3851);
    // ../../third_party/v8/builtins/array-sort.tq:335:5
    {
      Label label__True_1205_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_1205 = &label__True_1205_impl;
      USE(label__True_1205);
      Label label__False_1206_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_1206 = &label__False_1206_impl;
      USE(label__False_1206);
      TNode<Smi> t3852 = UncheckedCast<Smi>(LoadFastJSArrayLength(implicit_cast<TNode<JSArray>>((*a_560).value())));
      TNode<BoolT> t3853 = UncheckedCast<BoolT>(SmiNotEqual(implicit_cast<TNode<Smi>>(t3852), implicit_cast<TNode<Smi>>((*originalLength_561).value())));
      USE(implicit_cast<TNode<BoolT>>(t3853));
      Branch(implicit_cast<TNode<BoolT>>(t3853), label__True_1205, label__False_1206);
      if (label__True_1205->is_used())
      {
        BIND(label__True_1205);
        // ../../third_party/v8/builtins/array-sort.tq:335:42
        Return(implicit_cast<TNode<Oddball>>(False()));
      }
      BIND(label__False_1206);
    }
    // ../../third_party/v8/builtins/array-sort.tq:337:5
    Return(implicit_cast<TNode<Oddball>>(True()));
  }
}

}  // namespace internal
}  // namespace v8

