#include "src/builtins/builtins-data-view-gen.h"
#include "src/builtins/builtins-utils-gen.h"
#include "src/builtins/builtins.h"
#include "src/code-factory.h"
#include "src/elements-kind.h"
#include "src/heap/factory-inl.h"
#include "src/objects.h"
#include "src/objects/bigint.h"
#include "builtins-data-view-from-dsl-gen.h"

namespace v8 {
namespace internal {

using Node = compiler::Node;

compiler::TNode<String> DataViewBuiltinsFromDSLAssembler::MakeDataViewGetterNameString(ElementsKind p_kind) {
  TVARIABLE(String, _return_156_impl);
  auto _return_156 = &_return_156_impl;
  USE(_return_156);
  Label label_macro_end_1430_impl(this, {_return_156}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1430 = &label_macro_end_1430_impl;
  USE(label_macro_end_1430);
  // ../../src/builtins/data-view.tq:15:76
  {
    // ../../src/builtins/data-view.tq:16:5
    {
      bool t743 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT8_ELEMENTS));
      USE(implicit_cast<bool>(t743));
      if ((implicit_cast<bool>(t743))) {
        // ../../src/builtins/data-view.tq:16:43
        {
          // ../../src/builtins/data-view.tq:17:7
          const char* t744 = "DataView.prototype.getUint8";
          TNode<String> t745 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t744)));
          *_return_156 = implicit_cast<TNode<String>>(t745);
          Goto(label_macro_end_1430);
        }
      } else {
        // ../../src/builtins/data-view.tq:18:12
        {
          bool t746 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT8_ELEMENTS));
          USE(implicit_cast<bool>(t746));
          if ((implicit_cast<bool>(t746))) {
            // ../../src/builtins/data-view.tq:18:49
            {
              // ../../src/builtins/data-view.tq:19:7
              const char* t747 = "DataView.prototype.getInt8";
              TNode<String> t748 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t747)));
              *_return_156 = implicit_cast<TNode<String>>(t748);
              Goto(label_macro_end_1430);
            }
          } else {
            // ../../src/builtins/data-view.tq:20:12
            {
              bool t749 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT16_ELEMENTS));
              USE(implicit_cast<bool>(t749));
              if ((implicit_cast<bool>(t749))) {
                // ../../src/builtins/data-view.tq:20:51
                {
                  // ../../src/builtins/data-view.tq:21:7
                  const char* t750 = "DataView.prototype.getUint16";
                  TNode<String> t751 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t750)));
                  *_return_156 = implicit_cast<TNode<String>>(t751);
                  Goto(label_macro_end_1430);
                }
              } else {
                // ../../src/builtins/data-view.tq:22:12
                {
                  bool t752 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT16_ELEMENTS));
                  USE(implicit_cast<bool>(t752));
                  if ((implicit_cast<bool>(t752))) {
                    // ../../src/builtins/data-view.tq:22:50
                    {
                      // ../../src/builtins/data-view.tq:23:7
                      const char* t753 = "DataView.prototype.getInt16";
                      TNode<String> t754 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t753)));
                      *_return_156 = implicit_cast<TNode<String>>(t754);
                      Goto(label_macro_end_1430);
                    }
                  } else {
                    // ../../src/builtins/data-view.tq:24:12
                    {
                      bool t755 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT32_ELEMENTS));
                      USE(implicit_cast<bool>(t755));
                      if ((implicit_cast<bool>(t755))) {
                        // ../../src/builtins/data-view.tq:24:51
                        {
                          // ../../src/builtins/data-view.tq:25:7
                          const char* t756 = "DataView.prototype.getUint32";
                          TNode<String> t757 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t756)));
                          *_return_156 = implicit_cast<TNode<String>>(t757);
                          Goto(label_macro_end_1430);
                        }
                      } else {
                        // ../../src/builtins/data-view.tq:26:12
                        {
                          bool t758 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT32_ELEMENTS));
                          USE(implicit_cast<bool>(t758));
                          if ((implicit_cast<bool>(t758))) {
                            // ../../src/builtins/data-view.tq:26:50
                            {
                              // ../../src/builtins/data-view.tq:27:7
                              const char* t759 = "DataView.prototype.getInt32";
                              TNode<String> t760 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t759)));
                              *_return_156 = implicit_cast<TNode<String>>(t760);
                              Goto(label_macro_end_1430);
                            }
                          } else {
                            // ../../src/builtins/data-view.tq:28:12
                            {
                              bool t761 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS));
                              USE(implicit_cast<bool>(t761));
                              if ((implicit_cast<bool>(t761))) {
                                // ../../src/builtins/data-view.tq:28:52
                                {
                                  // ../../src/builtins/data-view.tq:29:7
                                  const char* t762 = "DataView.prototype.getFloat32";
                                  TNode<String> t763 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t762)));
                                  *_return_156 = implicit_cast<TNode<String>>(t763);
                                  Goto(label_macro_end_1430);
                                }
                              } else {
                                // ../../src/builtins/data-view.tq:30:12
                                {
                                  bool t764 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT64_ELEMENTS));
                                  USE(implicit_cast<bool>(t764));
                                  if ((implicit_cast<bool>(t764))) {
                                    // ../../src/builtins/data-view.tq:30:52
                                    {
                                      // ../../src/builtins/data-view.tq:31:7
                                      const char* t765 = "DataView.prototype.getFloat64";
                                      TNode<String> t766 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t765)));
                                      *_return_156 = implicit_cast<TNode<String>>(t766);
                                      Goto(label_macro_end_1430);
                                    }
                                  } else {
                                    // ../../src/builtins/data-view.tq:32:12
                                    {
                                      bool t767 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS));
                                      USE(implicit_cast<bool>(t767));
                                      if ((implicit_cast<bool>(t767))) {
                                        // ../../src/builtins/data-view.tq:32:53
                                        {
                                          // ../../src/builtins/data-view.tq:33:7
                                          const char* t768 = "DataView.prototype.getBigInt64";
                                          TNode<String> t769 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t768)));
                                          *_return_156 = implicit_cast<TNode<String>>(t769);
                                          Goto(label_macro_end_1430);
                                        }
                                      } else {
                                        // ../../src/builtins/data-view.tq:34:12
                                        {
                                          bool t770 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS));
                                          USE(implicit_cast<bool>(t770));
                                          if ((implicit_cast<bool>(t770))) {
                                            // ../../src/builtins/data-view.tq:34:54
                                            {
                                              // ../../src/builtins/data-view.tq:35:7
                                              const char* t771 = "DataView.prototype.getBigUint64";
                                              TNode<String> t772 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t771)));
                                              *_return_156 = implicit_cast<TNode<String>>(t772);
                                              Goto(label_macro_end_1430);
                                            }
                                          } else {
                                            // ../../src/builtins/data-view.tq:36:12
                                            {
                                              // ../../src/builtins/data-view.tq:37:7
                                              Unreachable();
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  BIND(label_macro_end_1430);
  return implicit_cast<TNode<String>>((*_return_156).value());
}

compiler::TNode<String> DataViewBuiltinsFromDSLAssembler::MakeDataViewSetterNameString(ElementsKind p_kind) {
  TVARIABLE(String, _return_157_impl);
  auto _return_157 = &_return_157_impl;
  USE(_return_157);
  Label label_macro_end_1431_impl(this, {_return_157}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1431 = &label_macro_end_1431_impl;
  USE(label_macro_end_1431);
  // ../../src/builtins/data-view.tq:41:76
  {
    // ../../src/builtins/data-view.tq:42:5
    {
      bool t773 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT8_ELEMENTS));
      USE(implicit_cast<bool>(t773));
      if ((implicit_cast<bool>(t773))) {
        // ../../src/builtins/data-view.tq:42:43
        {
          // ../../src/builtins/data-view.tq:43:7
          const char* t774 = "DataView.prototype.setUint8";
          TNode<String> t775 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t774)));
          *_return_157 = implicit_cast<TNode<String>>(t775);
          Goto(label_macro_end_1431);
        }
      } else {
        // ../../src/builtins/data-view.tq:44:12
        {
          bool t776 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT8_ELEMENTS));
          USE(implicit_cast<bool>(t776));
          if ((implicit_cast<bool>(t776))) {
            // ../../src/builtins/data-view.tq:44:49
            {
              // ../../src/builtins/data-view.tq:45:7
              const char* t777 = "DataView.prototype.setInt8";
              TNode<String> t778 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t777)));
              *_return_157 = implicit_cast<TNode<String>>(t778);
              Goto(label_macro_end_1431);
            }
          } else {
            // ../../src/builtins/data-view.tq:46:12
            {
              bool t779 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT16_ELEMENTS));
              USE(implicit_cast<bool>(t779));
              if ((implicit_cast<bool>(t779))) {
                // ../../src/builtins/data-view.tq:46:51
                {
                  // ../../src/builtins/data-view.tq:47:7
                  const char* t780 = "DataView.prototype.setUint16";
                  TNode<String> t781 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t780)));
                  *_return_157 = implicit_cast<TNode<String>>(t781);
                  Goto(label_macro_end_1431);
                }
              } else {
                // ../../src/builtins/data-view.tq:48:12
                {
                  bool t782 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT16_ELEMENTS));
                  USE(implicit_cast<bool>(t782));
                  if ((implicit_cast<bool>(t782))) {
                    // ../../src/builtins/data-view.tq:48:50
                    {
                      // ../../src/builtins/data-view.tq:49:7
                      const char* t783 = "DataView.prototype.setInt16";
                      TNode<String> t784 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t783)));
                      *_return_157 = implicit_cast<TNode<String>>(t784);
                      Goto(label_macro_end_1431);
                    }
                  } else {
                    // ../../src/builtins/data-view.tq:50:12
                    {
                      bool t785 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT32_ELEMENTS));
                      USE(implicit_cast<bool>(t785));
                      if ((implicit_cast<bool>(t785))) {
                        // ../../src/builtins/data-view.tq:50:51
                        {
                          // ../../src/builtins/data-view.tq:51:7
                          const char* t786 = "DataView.prototype.setUint32";
                          TNode<String> t787 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t786)));
                          *_return_157 = implicit_cast<TNode<String>>(t787);
                          Goto(label_macro_end_1431);
                        }
                      } else {
                        // ../../src/builtins/data-view.tq:52:12
                        {
                          bool t788 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT32_ELEMENTS));
                          USE(implicit_cast<bool>(t788));
                          if ((implicit_cast<bool>(t788))) {
                            // ../../src/builtins/data-view.tq:52:50
                            {
                              // ../../src/builtins/data-view.tq:53:7
                              const char* t789 = "DataView.prototype.setInt32";
                              TNode<String> t790 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t789)));
                              *_return_157 = implicit_cast<TNode<String>>(t790);
                              Goto(label_macro_end_1431);
                            }
                          } else {
                            // ../../src/builtins/data-view.tq:54:12
                            {
                              bool t791 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS));
                              USE(implicit_cast<bool>(t791));
                              if ((implicit_cast<bool>(t791))) {
                                // ../../src/builtins/data-view.tq:54:52
                                {
                                  // ../../src/builtins/data-view.tq:55:7
                                  const char* t792 = "DataView.prototype.setFloat32";
                                  TNode<String> t793 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t792)));
                                  *_return_157 = implicit_cast<TNode<String>>(t793);
                                  Goto(label_macro_end_1431);
                                }
                              } else {
                                // ../../src/builtins/data-view.tq:56:12
                                {
                                  bool t794 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT64_ELEMENTS));
                                  USE(implicit_cast<bool>(t794));
                                  if ((implicit_cast<bool>(t794))) {
                                    // ../../src/builtins/data-view.tq:56:52
                                    {
                                      // ../../src/builtins/data-view.tq:57:7
                                      const char* t795 = "DataView.prototype.setFloat64";
                                      TNode<String> t796 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t795)));
                                      *_return_157 = implicit_cast<TNode<String>>(t796);
                                      Goto(label_macro_end_1431);
                                    }
                                  } else {
                                    // ../../src/builtins/data-view.tq:58:12
                                    {
                                      bool t797 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS));
                                      USE(implicit_cast<bool>(t797));
                                      if ((implicit_cast<bool>(t797))) {
                                        // ../../src/builtins/data-view.tq:58:53
                                        {
                                          // ../../src/builtins/data-view.tq:59:7
                                          const char* t798 = "DataView.prototype.setBigInt64";
                                          TNode<String> t799 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t798)));
                                          *_return_157 = implicit_cast<TNode<String>>(t799);
                                          Goto(label_macro_end_1431);
                                        }
                                      } else {
                                        // ../../src/builtins/data-view.tq:60:12
                                        {
                                          bool t800 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS));
                                          USE(implicit_cast<bool>(t800));
                                          if ((implicit_cast<bool>(t800))) {
                                            // ../../src/builtins/data-view.tq:60:54
                                            {
                                              // ../../src/builtins/data-view.tq:61:7
                                              const char* t801 = "DataView.prototype.setBigUint64";
                                              TNode<String> t802 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t801)));
                                              *_return_157 = implicit_cast<TNode<String>>(t802);
                                              Goto(label_macro_end_1431);
                                            }
                                          } else {
                                            // ../../src/builtins/data-view.tq:62:12
                                            {
                                              // ../../src/builtins/data-view.tq:63:7
                                              Unreachable();
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  BIND(label_macro_end_1431);
  return implicit_cast<TNode<String>>((*_return_157).value());
}

compiler::TNode<BoolT> DataViewBuiltinsFromDSLAssembler::WasNeutered(TNode<JSArrayBufferView> p_view) {
  TVARIABLE(BoolT, _return_158_impl);
  auto _return_158 = &_return_158_impl;
  USE(_return_158);
  Label label_macro_end_1432_impl(this, {_return_158}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1432 = &label_macro_end_1432_impl;
  USE(label_macro_end_1432);
  // ../../src/builtins/data-view.tq:67:52
  {
    // ../../src/builtins/data-view.tq:68:5
    TNode<JSArrayBuffer> t803 = UncheckedCast<JSArrayBuffer>(LoadJSArrayBufferViewBuffer(implicit_cast<TNode<JSArrayBufferView>>(p_view)));
    TNode<BoolT> t804 = UncheckedCast<BoolT>(IsDetachedBuffer(implicit_cast<TNode<JSArrayBuffer>>(t803)));
    USE(implicit_cast<TNode<BoolT>>(t804));
    *_return_158 = implicit_cast<TNode<BoolT>>(t804);
    Goto(label_macro_end_1432);
  }
  BIND(label_macro_end_1432);
  return implicit_cast<TNode<BoolT>>((*_return_158).value());
}

compiler::TNode<JSDataView> DataViewBuiltinsFromDSLAssembler::ValidateDataView(TNode<Context> p_context, TNode<Object> p_o, TNode<String> p_method) {
  TVARIABLE(JSDataView, _return_159_impl);
  auto _return_159 = &_return_159_impl;
  USE(_return_159);
  Label label_macro_end_1433_impl(this, {_return_159}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1433 = &label_macro_end_1433_impl;
  USE(label_macro_end_1433);
  // ../../src/builtins/data-view.tq:72:64
  {
    // ../../src/builtins/data-view.tq:73:5
    {
      Label label_try_done_794_1434_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_794_1434 = &label_try_done_794_1434_impl;
      USE(label_try_done_794_1434);
      Label label_CastError_311_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_CastError_311 = &label_CastError_311_impl;
      USE(label_CastError_311);
      Label label_try_begin_795_1435_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_795_1435 = &label_try_begin_795_1435_impl;
      USE(label_try_begin_795_1435);
      Goto(label_try_begin_795_1435);
      if (label_try_begin_795_1435->is_used())
      {
        BIND(label_try_begin_795_1435);
        // ../../src/builtins/data-view.tq:73:9
        {
          // ../../src/builtins/data-view.tq:74:7
          TNode<JSDataView> t805 = UncheckedCast<JSDataView>(Cast12ATJSDataView(implicit_cast<TNode<Object>>(p_o), label_CastError_311));
          USE(implicit_cast<TNode<JSDataView>>(t805));
          *_return_159 = implicit_cast<TNode<JSDataView>>(t805);
          Goto(label_macro_end_1433);
        }
      }
      if (label_CastError_311->is_used())
      {
        BIND(label_CastError_311);
        // ../../src/builtins/data-view.tq:76:21
        {
          // ../../src/builtins/data-view.tq:77:7
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kIncompatibleMethodReceiver), implicit_cast<TNode<Object>>(p_method));
        }
      }
    }
  }
  BIND(label_macro_end_1433);
  return implicit_cast<TNode<JSDataView>>((*_return_159).value());
}

TF_BUILTIN(DataViewPrototypeGetBuffer, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:83:72
  {
    // ../../src/builtins/data-view.tq:84:5
    const char* t806 = "get DataView.prototype.buffer";
    TNode<String> t807 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t806)));
    TNode<JSDataView> t808 = UncheckedCast<JSDataView>(ValidateDataView(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<String>>(t807)));
    USE(implicit_cast<TNode<JSDataView>>(t808));
    TVARIABLE(JSDataView, dataView_160_impl);
    auto dataView_160 = &dataView_160_impl;
    USE(dataView_160);
    *dataView_160 = implicit_cast<TNode<JSDataView>>(t808);
    // ../../src/builtins/data-view.tq:86:5
    TNode<JSArrayBuffer> t809 = UncheckedCast<JSArrayBuffer>(LoadJSArrayBufferViewBuffer(implicit_cast<TNode<JSArrayBufferView>>((*dataView_160).value())));
    arguments->PopAndReturn(implicit_cast<TNode<JSArrayBuffer>>(t809));
  }
}

TF_BUILTIN(DataViewPrototypeGetByteLength, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:91:65
  {
    // ../../src/builtins/data-view.tq:92:5
    const char* t810 = "get DataView.prototype.byte_length";
    TNode<String> t811 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t810)));
    TNode<JSDataView> t812 = UncheckedCast<JSDataView>(ValidateDataView(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<String>>(t811)));
    USE(implicit_cast<TNode<JSDataView>>(t812));
    TVARIABLE(JSDataView, dataView_161_impl);
    auto dataView_161 = &dataView_161_impl;
    USE(dataView_161);
    *dataView_161 = implicit_cast<TNode<JSDataView>>(t812);
    // ../../src/builtins/data-view.tq:94:5
    {
      Label label__True_312_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_312 = &label__True_312_impl;
      USE(label__True_312);
      Label label__False_313_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_313 = &label__False_313_impl;
      USE(label__False_313);
      TNode<BoolT> t813 = UncheckedCast<BoolT>(WasNeutered(implicit_cast<TNode<JSArrayBufferView>>((*dataView_161).value())));
      USE(implicit_cast<TNode<BoolT>>(t813));
      Branch(implicit_cast<TNode<BoolT>>(t813), label__True_312, label__False_313);
      if (label__True_312->is_used())
      {
        BIND(label__True_312);
        // ../../src/builtins/data-view.tq:94:32
        {
          // ../../src/builtins/data-view.tq:97:7
          int31_t t814 = 0;
          TNode<Number> t815 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t814)));
          arguments->PopAndReturn(implicit_cast<TNode<Number>>(t815));
        }
      }
      BIND(label__False_313);
    }
    // ../../src/builtins/data-view.tq:99:5
    TNode<UintPtrT> t816 = UncheckedCast<UintPtrT>(LoadJSArrayBufferViewByteLength(implicit_cast<TNode<JSArrayBufferView>>((*dataView_161).value())));
    TNode<Number> t817 = UncheckedCast<Number>(Convert22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<UintPtrT>>(t816)));
    USE(implicit_cast<TNode<Number>>(t817));
    arguments->PopAndReturn(implicit_cast<TNode<Number>>(t817));
  }
}

TF_BUILTIN(DataViewPrototypeGetByteOffset, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:104:65
  {
    // ../../src/builtins/data-view.tq:105:5
    const char* t818 = "get DataView.prototype.byte_offset";
    TNode<String> t819 = UncheckedCast<String>(FromConstexpr8ATString(implicit_cast<const char*>(t818)));
    TNode<JSDataView> t820 = UncheckedCast<JSDataView>(ValidateDataView(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<String>>(t819)));
    USE(implicit_cast<TNode<JSDataView>>(t820));
    TVARIABLE(JSDataView, dataView_162_impl);
    auto dataView_162 = &dataView_162_impl;
    USE(dataView_162);
    *dataView_162 = implicit_cast<TNode<JSDataView>>(t820);
    // ../../src/builtins/data-view.tq:107:5
    {
      Label label__True_314_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_314 = &label__True_314_impl;
      USE(label__True_314);
      Label label__False_315_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_315 = &label__False_315_impl;
      USE(label__False_315);
      TNode<BoolT> t821 = UncheckedCast<BoolT>(WasNeutered(implicit_cast<TNode<JSArrayBufferView>>((*dataView_162).value())));
      USE(implicit_cast<TNode<BoolT>>(t821));
      Branch(implicit_cast<TNode<BoolT>>(t821), label__True_314, label__False_315);
      if (label__True_314->is_used())
      {
        BIND(label__True_314);
        // ../../src/builtins/data-view.tq:107:32
        {
          // ../../src/builtins/data-view.tq:110:7
          int31_t t822 = 0;
          TNode<Number> t823 = UncheckedCast<Number>(FromConstexpr22UT12ATHeapNumber5ATSmi(implicit_cast<int31_t>(t822)));
          arguments->PopAndReturn(implicit_cast<TNode<Number>>(t823));
        }
      }
      BIND(label__False_315);
    }
    // ../../src/builtins/data-view.tq:112:5
    TNode<UintPtrT> t824 = UncheckedCast<UintPtrT>(LoadJSArrayBufferViewByteOffset(implicit_cast<TNode<JSArrayBufferView>>((*dataView_162).value())));
    TNode<Number> t825 = UncheckedCast<Number>(Convert22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<UintPtrT>>(t824)));
    USE(implicit_cast<TNode<Number>>(t825));
    arguments->PopAndReturn(implicit_cast<TNode<Number>>(t825));
  }
}

compiler::TNode<Smi> DataViewBuiltinsFromDSLAssembler::LoadDataView8(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, bool p_signed) {
  TVARIABLE(Smi, _return_163_impl);
  auto _return_163 = &_return_163_impl;
  USE(_return_163);
  Label label_macro_end_1436_impl(this, {_return_163}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1436 = &label_macro_end_1436_impl;
  USE(label_macro_end_1436);
  // ../../src/builtins/data-view.tq:126:76
  {
    // ../../src/builtins/data-view.tq:127:5
    {
      if ((implicit_cast<bool>(p_signed))) {
        // ../../src/builtins/data-view.tq:127:27
        {
          // ../../src/builtins/data-view.tq:128:7
          TNode<RawPtrT> t826 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
          TNode<Int32T> t827 = UncheckedCast<Int32T>(LoadInt8(implicit_cast<TNode<RawPtrT>>(t826), implicit_cast<TNode<UintPtrT>>(p_offset)));
          USE(implicit_cast<TNode<Int32T>>(t827));
          TNode<Smi> t828 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<Int32T>>(t827)));
          USE(implicit_cast<TNode<Smi>>(t828));
          *_return_163 = implicit_cast<TNode<Smi>>(t828);
          Goto(label_macro_end_1436);
        }
      } else {
        // ../../src/builtins/data-view.tq:129:12
        {
          // ../../src/builtins/data-view.tq:130:7
          TNode<RawPtrT> t829 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
          TNode<Uint32T> t830 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>(t829), implicit_cast<TNode<UintPtrT>>(p_offset)));
          USE(implicit_cast<TNode<Uint32T>>(t830));
          TNode<Smi> t831 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<Uint32T>>(t830)));
          USE(implicit_cast<TNode<Smi>>(t831));
          *_return_163 = implicit_cast<TNode<Smi>>(t831);
          Goto(label_macro_end_1436);
        }
      }
    }
  }
  BIND(label_macro_end_1436);
  return implicit_cast<TNode<Smi>>((*_return_163).value());
}

compiler::TNode<Number> DataViewBuiltinsFromDSLAssembler::LoadDataView16(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<BoolT> p_requestedLittleEndian, bool p_signed) {
  TVARIABLE(Number, _return_164_impl);
  auto _return_164 = &_return_164_impl;
  USE(_return_164);
  Label label_macro_end_1437_impl(this, {_return_164}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1437 = &label_macro_end_1437_impl;
  USE(label_macro_end_1437);
  // ../../src/builtins/data-view.tq:136:39
  {
    // ../../src/builtins/data-view.tq:137:5
    TNode<RawPtrT> t832 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_165_impl);
    auto dataPointer_165 = &dataPointer_165_impl;
    USE(dataPointer_165);
    *dataPointer_165 = implicit_cast<TNode<RawPtrT>>(t832);
    // ../../src/builtins/data-view.tq:139:5
    TVARIABLE(Int32T, b0_166_impl);
    auto b0_166 = &b0_166_impl;
    USE(b0_166);
    // ../../src/builtins/data-view.tq:140:5
    TVARIABLE(Int32T, b1_167_impl);
    auto b1_167 = &b1_167_impl;
    USE(b1_167);
    // ../../src/builtins/data-view.tq:141:5
    TVARIABLE(Int32T, result_168_impl);
    auto result_168 = &result_168_impl;
    USE(result_168);
    // ../../src/builtins/data-view.tq:144:5
    {
      Label label__True_318_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_318 = &label__True_318_impl;
      USE(label__True_318);
      Label label__False_319_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_319 = &label__False_319_impl;
      USE(label__False_319);
      Label label_if_done_label_796_1438_impl(this, {b0_166, b1_167, result_168}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_796_1438 = &label_if_done_label_796_1438_impl;
      USE(label_if_done_label_796_1438);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_318, label__False_319);
      if (label__True_318->is_used())
      {
        BIND(label__True_318);
        // ../../src/builtins/data-view.tq:144:32
        {
          // ../../src/builtins/data-view.tq:145:7
          TNode<Uint32T> t833 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_165).value()), implicit_cast<TNode<UintPtrT>>(p_offset)));
          USE(implicit_cast<TNode<Uint32T>>(t833));
          TNode<Int32T> t834 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>(t833)));
          USE(implicit_cast<TNode<Int32T>>(t834));
          *b0_166 = implicit_cast<TNode<Int32T>>(t834);
          // ../../src/builtins/data-view.tq:146:7
          int31_t t835 = 1;
          TNode<UintPtrT> t836 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t835)));
          TNode<UintPtrT> t837 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t836)));
          USE(implicit_cast<TNode<UintPtrT>>(t837));
          TNode<Int32T> t838 = UncheckedCast<Int32T>(LoadInt8(implicit_cast<TNode<RawPtrT>>((*dataPointer_165).value()), implicit_cast<TNode<UintPtrT>>(t837)));
          USE(implicit_cast<TNode<Int32T>>(t838));
          *b1_167 = implicit_cast<TNode<Int32T>>(t838);
          // ../../src/builtins/data-view.tq:147:7
          int31_t t839 = 8;
          TNode<Int32T> t840 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t839)));
          TNode<Int32T> t841 = UncheckedCast<Int32T>(Word32Shl(implicit_cast<TNode<Int32T>>((*b1_167).value()), implicit_cast<TNode<Int32T>>(t840)));
          USE(implicit_cast<TNode<Int32T>>(t841));
          TNode<Int32T> t842 = UncheckedCast<Int32T>(Int32Add(implicit_cast<TNode<Int32T>>(t841), implicit_cast<TNode<Int32T>>((*b0_166).value())));
          USE(implicit_cast<TNode<Int32T>>(t842));
          *result_168 = implicit_cast<TNode<Int32T>>(t842);
        }
        Goto(label_if_done_label_796_1438);
      }
      if (label__False_319->is_used())
      {
        BIND(label__False_319);
        // ../../src/builtins/data-view.tq:148:12
        {
          // ../../src/builtins/data-view.tq:149:7
          TNode<Int32T> t843 = UncheckedCast<Int32T>(LoadInt8(implicit_cast<TNode<RawPtrT>>((*dataPointer_165).value()), implicit_cast<TNode<UintPtrT>>(p_offset)));
          USE(implicit_cast<TNode<Int32T>>(t843));
          *b0_166 = implicit_cast<TNode<Int32T>>(t843);
          // ../../src/builtins/data-view.tq:150:7
          int31_t t844 = 1;
          TNode<UintPtrT> t845 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t844)));
          TNode<UintPtrT> t846 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t845)));
          USE(implicit_cast<TNode<UintPtrT>>(t846));
          TNode<Uint32T> t847 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_165).value()), implicit_cast<TNode<UintPtrT>>(t846)));
          USE(implicit_cast<TNode<Uint32T>>(t847));
          TNode<Int32T> t848 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>(t847)));
          USE(implicit_cast<TNode<Int32T>>(t848));
          *b1_167 = implicit_cast<TNode<Int32T>>(t848);
          // ../../src/builtins/data-view.tq:151:7
          int31_t t849 = 8;
          TNode<Int32T> t850 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t849)));
          TNode<Int32T> t851 = UncheckedCast<Int32T>(Word32Shl(implicit_cast<TNode<Int32T>>((*b0_166).value()), implicit_cast<TNode<Int32T>>(t850)));
          USE(implicit_cast<TNode<Int32T>>(t851));
          TNode<Int32T> t852 = UncheckedCast<Int32T>(Int32Add(implicit_cast<TNode<Int32T>>(t851), implicit_cast<TNode<Int32T>>((*b1_167).value())));
          USE(implicit_cast<TNode<Int32T>>(t852));
          *result_168 = implicit_cast<TNode<Int32T>>(t852);
        }
        Goto(label_if_done_label_796_1438);
      }
      BIND(label_if_done_label_796_1438);
    }
    // ../../src/builtins/data-view.tq:153:5
    {
      if ((implicit_cast<bool>(p_signed))) {
        // ../../src/builtins/data-view.tq:153:27
        {
          // ../../src/builtins/data-view.tq:154:7
          TNode<Smi> t853 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<Int32T>>((*result_168).value())));
          USE(implicit_cast<TNode<Smi>>(t853));
          *_return_164 = implicit_cast<TNode<Number>>(t853);
          Goto(label_macro_end_1437);
        }
      } else {
        // ../../src/builtins/data-view.tq:155:12
        {
          // ../../src/builtins/data-view.tq:157:7
          int31_t t854 = 0xFFFF;
          TNode<Int32T> t855 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t854)));
          TNode<Int32T> t856 = UncheckedCast<Int32T>(Word32And(implicit_cast<TNode<Int32T>>((*result_168).value()), implicit_cast<TNode<Int32T>>(t855)));
          USE(implicit_cast<TNode<Int32T>>(t856));
          TNode<Smi> t857 = UncheckedCast<Smi>(Convert5ATSmi(implicit_cast<TNode<Int32T>>(t856)));
          USE(implicit_cast<TNode<Smi>>(t857));
          *_return_164 = implicit_cast<TNode<Number>>(t857);
          Goto(label_macro_end_1437);
        }
      }
    }
  }
  BIND(label_macro_end_1437);
  return implicit_cast<TNode<Number>>((*_return_164).value());
}

compiler::TNode<Number> DataViewBuiltinsFromDSLAssembler::LoadDataView32(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<BoolT> p_requestedLittleEndian, ElementsKind p_kind) {
  TVARIABLE(Number, _return_169_impl);
  auto _return_169 = &_return_169_impl;
  USE(_return_169);
  Label label_macro_end_1439_impl(this, {_return_169}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1439 = &label_macro_end_1439_impl;
  USE(label_macro_end_1439);
  // ../../src/builtins/data-view.tq:163:45
  {
    // ../../src/builtins/data-view.tq:164:5
    TNode<RawPtrT> t858 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_170_impl);
    auto dataPointer_170 = &dataPointer_170_impl;
    USE(dataPointer_170);
    *dataPointer_170 = implicit_cast<TNode<RawPtrT>>(t858);
    // ../../src/builtins/data-view.tq:166:5
    TNode<Uint32T> t859 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_170).value()), implicit_cast<TNode<UintPtrT>>(p_offset)));
    USE(implicit_cast<TNode<Uint32T>>(t859));
    TVARIABLE(Uint32T, b0_171_impl);
    auto b0_171 = &b0_171_impl;
    USE(b0_171);
    *b0_171 = implicit_cast<TNode<Uint32T>>(t859);
    // ../../src/builtins/data-view.tq:167:5
    int31_t t860 = 1;
    TNode<UintPtrT> t861 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t860)));
    TNode<UintPtrT> t862 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t861)));
    USE(implicit_cast<TNode<UintPtrT>>(t862));
    TNode<Uint32T> t863 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_170).value()), implicit_cast<TNode<UintPtrT>>(t862)));
    USE(implicit_cast<TNode<Uint32T>>(t863));
    TVARIABLE(Uint32T, b1_172_impl);
    auto b1_172 = &b1_172_impl;
    USE(b1_172);
    *b1_172 = implicit_cast<TNode<Uint32T>>(t863);
    // ../../src/builtins/data-view.tq:168:5
    int31_t t864 = 2;
    TNode<UintPtrT> t865 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t864)));
    TNode<UintPtrT> t866 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t865)));
    USE(implicit_cast<TNode<UintPtrT>>(t866));
    TNode<Uint32T> t867 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_170).value()), implicit_cast<TNode<UintPtrT>>(t866)));
    USE(implicit_cast<TNode<Uint32T>>(t867));
    TVARIABLE(Uint32T, b2_173_impl);
    auto b2_173 = &b2_173_impl;
    USE(b2_173);
    *b2_173 = implicit_cast<TNode<Uint32T>>(t867);
    // ../../src/builtins/data-view.tq:169:5
    int31_t t868 = 3;
    TNode<UintPtrT> t869 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t868)));
    TNode<UintPtrT> t870 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t869)));
    USE(implicit_cast<TNode<UintPtrT>>(t870));
    TNode<Uint32T> t871 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_170).value()), implicit_cast<TNode<UintPtrT>>(t870)));
    USE(implicit_cast<TNode<Uint32T>>(t871));
    TVARIABLE(Uint32T, b3_174_impl);
    auto b3_174 = &b3_174_impl;
    USE(b3_174);
    *b3_174 = implicit_cast<TNode<Uint32T>>(t871);
    // ../../src/builtins/data-view.tq:170:5
    TVARIABLE(Uint32T, result_175_impl);
    auto result_175 = &result_175_impl;
    USE(result_175);
    // ../../src/builtins/data-view.tq:172:5
    {
      Label label__True_322_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_322 = &label__True_322_impl;
      USE(label__True_322);
      Label label__False_323_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_323 = &label__False_323_impl;
      USE(label__False_323);
      Label label_if_done_label_797_1440_impl(this, {result_175}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_797_1440 = &label_if_done_label_797_1440_impl;
      USE(label_if_done_label_797_1440);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_322, label__False_323);
      if (label__True_322->is_used())
      {
        BIND(label__True_322);
        // ../../src/builtins/data-view.tq:172:32
        {
          // ../../src/builtins/data-view.tq:173:7
          int31_t t872 = 24;
          TNode<Uint32T> t873 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t872)));
          TNode<Uint32T> t874 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b3_174).value()), implicit_cast<TNode<Uint32T>>(t873)));
          USE(implicit_cast<TNode<Uint32T>>(t874));
          int31_t t875 = 16;
          TNode<Uint32T> t876 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t875)));
          TNode<Uint32T> t877 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b2_173).value()), implicit_cast<TNode<Uint32T>>(t876)));
          USE(implicit_cast<TNode<Uint32T>>(t877));
          TNode<Uint32T> t878 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t874), implicit_cast<TNode<Uint32T>>(t877)));
          USE(implicit_cast<TNode<Uint32T>>(t878));
          int31_t t879 = 8;
          TNode<Uint32T> t880 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t879)));
          TNode<Uint32T> t881 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b1_172).value()), implicit_cast<TNode<Uint32T>>(t880)));
          USE(implicit_cast<TNode<Uint32T>>(t881));
          TNode<Uint32T> t882 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t878), implicit_cast<TNode<Uint32T>>(t881)));
          USE(implicit_cast<TNode<Uint32T>>(t882));
          TNode<Uint32T> t883 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t882), implicit_cast<TNode<Uint32T>>((*b0_171).value())));
          USE(implicit_cast<TNode<Uint32T>>(t883));
          *result_175 = implicit_cast<TNode<Uint32T>>(t883);
        }
        Goto(label_if_done_label_797_1440);
      }
      if (label__False_323->is_used())
      {
        BIND(label__False_323);
        // ../../src/builtins/data-view.tq:174:12
        {
          // ../../src/builtins/data-view.tq:175:7
          int31_t t884 = 24;
          TNode<Uint32T> t885 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t884)));
          TNode<Uint32T> t886 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b0_171).value()), implicit_cast<TNode<Uint32T>>(t885)));
          USE(implicit_cast<TNode<Uint32T>>(t886));
          int31_t t887 = 16;
          TNode<Uint32T> t888 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t887)));
          TNode<Uint32T> t889 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b1_172).value()), implicit_cast<TNode<Uint32T>>(t888)));
          USE(implicit_cast<TNode<Uint32T>>(t889));
          TNode<Uint32T> t890 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t886), implicit_cast<TNode<Uint32T>>(t889)));
          USE(implicit_cast<TNode<Uint32T>>(t890));
          int31_t t891 = 8;
          TNode<Uint32T> t892 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t891)));
          TNode<Uint32T> t893 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b2_173).value()), implicit_cast<TNode<Uint32T>>(t892)));
          USE(implicit_cast<TNode<Uint32T>>(t893));
          TNode<Uint32T> t894 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t890), implicit_cast<TNode<Uint32T>>(t893)));
          USE(implicit_cast<TNode<Uint32T>>(t894));
          TNode<Uint32T> t895 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t894), implicit_cast<TNode<Uint32T>>((*b3_174).value())));
          USE(implicit_cast<TNode<Uint32T>>(t895));
          *result_175 = implicit_cast<TNode<Uint32T>>(t895);
        }
        Goto(label_if_done_label_797_1440);
      }
      BIND(label_if_done_label_797_1440);
    }
    // ../../src/builtins/data-view.tq:178:5
    {
      bool t896 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT32_ELEMENTS));
      USE(implicit_cast<bool>(t896));
      if ((implicit_cast<bool>(t896))) {
        // ../../src/builtins/data-view.tq:178:43
        {
          // ../../src/builtins/data-view.tq:179:7
          TNode<Int32T> t897 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>((*result_175).value())));
          USE(implicit_cast<TNode<Int32T>>(t897));
          TNode<Number> t898 = UncheckedCast<Number>(Convert22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Int32T>>(t897)));
          USE(implicit_cast<TNode<Number>>(t898));
          *_return_169 = implicit_cast<TNode<Number>>(t898);
          Goto(label_macro_end_1439);
        }
      } else {
        // ../../src/builtins/data-view.tq:180:12
        {
          bool t899 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT32_ELEMENTS));
          USE(implicit_cast<bool>(t899));
          if ((implicit_cast<bool>(t899))) {
            // ../../src/builtins/data-view.tq:180:51
            {
              // ../../src/builtins/data-view.tq:181:7
              TNode<Number> t900 = UncheckedCast<Number>(Convert22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Uint32T>>((*result_175).value())));
              USE(implicit_cast<TNode<Number>>(t900));
              *_return_169 = implicit_cast<TNode<Number>>(t900);
              Goto(label_macro_end_1439);
            }
          } else {
            // ../../src/builtins/data-view.tq:182:12
            {
              bool t901 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS));
              USE(implicit_cast<bool>(t901));
              if ((implicit_cast<bool>(t901))) {
                // ../../src/builtins/data-view.tq:182:52
                {
                  // ../../src/builtins/data-view.tq:183:7
                  TNode<Float32T> t902 = UncheckedCast<Float32T>(BitcastInt32ToFloat32(implicit_cast<TNode<Uint32T>>((*result_175).value())));
                  USE(implicit_cast<TNode<Float32T>>(t902));
                  TNode<Float64T> t903 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<TNode<Float32T>>(t902)));
                  USE(implicit_cast<TNode<Float64T>>(t903));
                  TVARIABLE(Float64T, floatRes_176_impl);
                  auto floatRes_176 = &floatRes_176_impl;
                  USE(floatRes_176);
                  *floatRes_176 = implicit_cast<TNode<Float64T>>(t903);
                  // ../../src/builtins/data-view.tq:184:7
                  TNode<Number> t904 = UncheckedCast<Number>(Convert22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Float64T>>((*floatRes_176).value())));
                  USE(implicit_cast<TNode<Number>>(t904));
                  *_return_169 = implicit_cast<TNode<Number>>(t904);
                  Goto(label_macro_end_1439);
                }
              } else {
                // ../../src/builtins/data-view.tq:185:12
                {
                  // ../../src/builtins/data-view.tq:186:7
                  Unreachable();
                }
              }
            }
          }
        }
      }
    }
  }
  BIND(label_macro_end_1439);
  return implicit_cast<TNode<Number>>((*_return_169).value());
}

compiler::TNode<Number> DataViewBuiltinsFromDSLAssembler::LoadDataViewFloat64(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<BoolT> p_requestedLittleEndian) {
  TVARIABLE(Number, _return_177_impl);
  auto _return_177 = &_return_177_impl;
  USE(_return_177);
  Label label_macro_end_1441_impl(this, {_return_177}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1441 = &label_macro_end_1441_impl;
  USE(label_macro_end_1441);
  // ../../src/builtins/data-view.tq:192:44
  {
    // ../../src/builtins/data-view.tq:193:5
    TNode<RawPtrT> t905 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_178_impl);
    auto dataPointer_178 = &dataPointer_178_impl;
    USE(dataPointer_178);
    *dataPointer_178 = implicit_cast<TNode<RawPtrT>>(t905);
    // ../../src/builtins/data-view.tq:195:5
    TNode<Uint32T> t906 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(p_offset)));
    USE(implicit_cast<TNode<Uint32T>>(t906));
    TVARIABLE(Uint32T, b0_179_impl);
    auto b0_179 = &b0_179_impl;
    USE(b0_179);
    *b0_179 = implicit_cast<TNode<Uint32T>>(t906);
    // ../../src/builtins/data-view.tq:196:5
    int31_t t907 = 1;
    TNode<UintPtrT> t908 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t907)));
    TNode<UintPtrT> t909 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t908)));
    USE(implicit_cast<TNode<UintPtrT>>(t909));
    TNode<Uint32T> t910 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t909)));
    USE(implicit_cast<TNode<Uint32T>>(t910));
    TVARIABLE(Uint32T, b1_180_impl);
    auto b1_180 = &b1_180_impl;
    USE(b1_180);
    *b1_180 = implicit_cast<TNode<Uint32T>>(t910);
    // ../../src/builtins/data-view.tq:197:5
    int31_t t911 = 2;
    TNode<UintPtrT> t912 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t911)));
    TNode<UintPtrT> t913 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t912)));
    USE(implicit_cast<TNode<UintPtrT>>(t913));
    TNode<Uint32T> t914 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t913)));
    USE(implicit_cast<TNode<Uint32T>>(t914));
    TVARIABLE(Uint32T, b2_181_impl);
    auto b2_181 = &b2_181_impl;
    USE(b2_181);
    *b2_181 = implicit_cast<TNode<Uint32T>>(t914);
    // ../../src/builtins/data-view.tq:198:5
    int31_t t915 = 3;
    TNode<UintPtrT> t916 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t915)));
    TNode<UintPtrT> t917 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t916)));
    USE(implicit_cast<TNode<UintPtrT>>(t917));
    TNode<Uint32T> t918 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t917)));
    USE(implicit_cast<TNode<Uint32T>>(t918));
    TVARIABLE(Uint32T, b3_182_impl);
    auto b3_182 = &b3_182_impl;
    USE(b3_182);
    *b3_182 = implicit_cast<TNode<Uint32T>>(t918);
    // ../../src/builtins/data-view.tq:199:5
    int31_t t919 = 4;
    TNode<UintPtrT> t920 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t919)));
    TNode<UintPtrT> t921 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t920)));
    USE(implicit_cast<TNode<UintPtrT>>(t921));
    TNode<Uint32T> t922 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t921)));
    USE(implicit_cast<TNode<Uint32T>>(t922));
    TVARIABLE(Uint32T, b4_183_impl);
    auto b4_183 = &b4_183_impl;
    USE(b4_183);
    *b4_183 = implicit_cast<TNode<Uint32T>>(t922);
    // ../../src/builtins/data-view.tq:200:5
    int31_t t923 = 5;
    TNode<UintPtrT> t924 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t923)));
    TNode<UintPtrT> t925 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t924)));
    USE(implicit_cast<TNode<UintPtrT>>(t925));
    TNode<Uint32T> t926 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t925)));
    USE(implicit_cast<TNode<Uint32T>>(t926));
    TVARIABLE(Uint32T, b5_184_impl);
    auto b5_184 = &b5_184_impl;
    USE(b5_184);
    *b5_184 = implicit_cast<TNode<Uint32T>>(t926);
    // ../../src/builtins/data-view.tq:201:5
    int31_t t927 = 6;
    TNode<UintPtrT> t928 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t927)));
    TNode<UintPtrT> t929 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t928)));
    USE(implicit_cast<TNode<UintPtrT>>(t929));
    TNode<Uint32T> t930 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t929)));
    USE(implicit_cast<TNode<Uint32T>>(t930));
    TVARIABLE(Uint32T, b6_185_impl);
    auto b6_185 = &b6_185_impl;
    USE(b6_185);
    *b6_185 = implicit_cast<TNode<Uint32T>>(t930);
    // ../../src/builtins/data-view.tq:202:5
    int31_t t931 = 7;
    TNode<UintPtrT> t932 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t931)));
    TNode<UintPtrT> t933 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t932)));
    USE(implicit_cast<TNode<UintPtrT>>(t933));
    TNode<Uint32T> t934 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_178).value()), implicit_cast<TNode<UintPtrT>>(t933)));
    USE(implicit_cast<TNode<Uint32T>>(t934));
    TVARIABLE(Uint32T, b7_186_impl);
    auto b7_186 = &b7_186_impl;
    USE(b7_186);
    *b7_186 = implicit_cast<TNode<Uint32T>>(t934);
    // ../../src/builtins/data-view.tq:203:5
    TVARIABLE(Uint32T, lowWord_187_impl);
    auto lowWord_187 = &lowWord_187_impl;
    USE(lowWord_187);
    // ../../src/builtins/data-view.tq:204:5
    TVARIABLE(Uint32T, highWord_188_impl);
    auto highWord_188 = &highWord_188_impl;
    USE(highWord_188);
    // ../../src/builtins/data-view.tq:206:5
    {
      Label label__True_330_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_330 = &label__True_330_impl;
      USE(label__True_330);
      Label label__False_331_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_331 = &label__False_331_impl;
      USE(label__False_331);
      Label label_if_done_label_798_1442_impl(this, {highWord_188, lowWord_187}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_798_1442 = &label_if_done_label_798_1442_impl;
      USE(label_if_done_label_798_1442);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_330, label__False_331);
      if (label__True_330->is_used())
      {
        BIND(label__True_330);
        // ../../src/builtins/data-view.tq:206:32
        {
          // ../../src/builtins/data-view.tq:207:7
          int31_t t935 = 24;
          TNode<Uint32T> t936 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t935)));
          TNode<Uint32T> t937 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b3_182).value()), implicit_cast<TNode<Uint32T>>(t936)));
          USE(implicit_cast<TNode<Uint32T>>(t937));
          int31_t t938 = 16;
          TNode<Uint32T> t939 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t938)));
          TNode<Uint32T> t940 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b2_181).value()), implicit_cast<TNode<Uint32T>>(t939)));
          USE(implicit_cast<TNode<Uint32T>>(t940));
          TNode<Uint32T> t941 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t937), implicit_cast<TNode<Uint32T>>(t940)));
          USE(implicit_cast<TNode<Uint32T>>(t941));
          int31_t t942 = 8;
          TNode<Uint32T> t943 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t942)));
          TNode<Uint32T> t944 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b1_180).value()), implicit_cast<TNode<Uint32T>>(t943)));
          USE(implicit_cast<TNode<Uint32T>>(t944));
          TNode<Uint32T> t945 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t941), implicit_cast<TNode<Uint32T>>(t944)));
          USE(implicit_cast<TNode<Uint32T>>(t945));
          TNode<Uint32T> t946 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t945), implicit_cast<TNode<Uint32T>>((*b0_179).value())));
          USE(implicit_cast<TNode<Uint32T>>(t946));
          *lowWord_187 = implicit_cast<TNode<Uint32T>>(t946);
          // ../../src/builtins/data-view.tq:208:7
          int31_t t947 = 24;
          TNode<Uint32T> t948 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t947)));
          TNode<Uint32T> t949 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b7_186).value()), implicit_cast<TNode<Uint32T>>(t948)));
          USE(implicit_cast<TNode<Uint32T>>(t949));
          int31_t t950 = 16;
          TNode<Uint32T> t951 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t950)));
          TNode<Uint32T> t952 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b6_185).value()), implicit_cast<TNode<Uint32T>>(t951)));
          USE(implicit_cast<TNode<Uint32T>>(t952));
          TNode<Uint32T> t953 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t949), implicit_cast<TNode<Uint32T>>(t952)));
          USE(implicit_cast<TNode<Uint32T>>(t953));
          int31_t t954 = 8;
          TNode<Uint32T> t955 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t954)));
          TNode<Uint32T> t956 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b5_184).value()), implicit_cast<TNode<Uint32T>>(t955)));
          USE(implicit_cast<TNode<Uint32T>>(t956));
          TNode<Uint32T> t957 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t953), implicit_cast<TNode<Uint32T>>(t956)));
          USE(implicit_cast<TNode<Uint32T>>(t957));
          TNode<Uint32T> t958 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t957), implicit_cast<TNode<Uint32T>>((*b4_183).value())));
          USE(implicit_cast<TNode<Uint32T>>(t958));
          *highWord_188 = implicit_cast<TNode<Uint32T>>(t958);
        }
        Goto(label_if_done_label_798_1442);
      }
      if (label__False_331->is_used())
      {
        BIND(label__False_331);
        // ../../src/builtins/data-view.tq:209:12
        {
          // ../../src/builtins/data-view.tq:210:7
          int31_t t959 = 24;
          TNode<Uint32T> t960 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t959)));
          TNode<Uint32T> t961 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b0_179).value()), implicit_cast<TNode<Uint32T>>(t960)));
          USE(implicit_cast<TNode<Uint32T>>(t961));
          int31_t t962 = 16;
          TNode<Uint32T> t963 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t962)));
          TNode<Uint32T> t964 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b1_180).value()), implicit_cast<TNode<Uint32T>>(t963)));
          USE(implicit_cast<TNode<Uint32T>>(t964));
          TNode<Uint32T> t965 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t961), implicit_cast<TNode<Uint32T>>(t964)));
          USE(implicit_cast<TNode<Uint32T>>(t965));
          int31_t t966 = 8;
          TNode<Uint32T> t967 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t966)));
          TNode<Uint32T> t968 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b2_181).value()), implicit_cast<TNode<Uint32T>>(t967)));
          USE(implicit_cast<TNode<Uint32T>>(t968));
          TNode<Uint32T> t969 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t965), implicit_cast<TNode<Uint32T>>(t968)));
          USE(implicit_cast<TNode<Uint32T>>(t969));
          TNode<Uint32T> t970 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t969), implicit_cast<TNode<Uint32T>>((*b3_182).value())));
          USE(implicit_cast<TNode<Uint32T>>(t970));
          *highWord_188 = implicit_cast<TNode<Uint32T>>(t970);
          // ../../src/builtins/data-view.tq:211:7
          int31_t t971 = 24;
          TNode<Uint32T> t972 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t971)));
          TNode<Uint32T> t973 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b4_183).value()), implicit_cast<TNode<Uint32T>>(t972)));
          USE(implicit_cast<TNode<Uint32T>>(t973));
          int31_t t974 = 16;
          TNode<Uint32T> t975 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t974)));
          TNode<Uint32T> t976 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b5_184).value()), implicit_cast<TNode<Uint32T>>(t975)));
          USE(implicit_cast<TNode<Uint32T>>(t976));
          TNode<Uint32T> t977 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t973), implicit_cast<TNode<Uint32T>>(t976)));
          USE(implicit_cast<TNode<Uint32T>>(t977));
          int31_t t978 = 8;
          TNode<Uint32T> t979 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t978)));
          TNode<Uint32T> t980 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b6_185).value()), implicit_cast<TNode<Uint32T>>(t979)));
          USE(implicit_cast<TNode<Uint32T>>(t980));
          TNode<Uint32T> t981 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t977), implicit_cast<TNode<Uint32T>>(t980)));
          USE(implicit_cast<TNode<Uint32T>>(t981));
          TNode<Uint32T> t982 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t981), implicit_cast<TNode<Uint32T>>((*b7_186).value())));
          USE(implicit_cast<TNode<Uint32T>>(t982));
          *lowWord_187 = implicit_cast<TNode<Uint32T>>(t982);
        }
        Goto(label_if_done_label_798_1442);
      }
      BIND(label_if_done_label_798_1442);
    }
    // ../../src/builtins/data-view.tq:214:5
    int31_t t983 = 0;
    TVARIABLE(Float64T, result_189_impl);
    auto result_189 = &result_189_impl;
    USE(result_189);
    TNode<Float64T> t984 = UncheckedCast<Float64T>(FromConstexpr9ATfloat64(implicit_cast<int31_t>(t983)));
    *result_189 = implicit_cast<TNode<Float64T>>(t984);
    // ../../src/builtins/data-view.tq:215:5
    TNode<Float64T> t985 = UncheckedCast<Float64T>(Float64InsertLowWord32(implicit_cast<TNode<Float64T>>((*result_189).value()), implicit_cast<TNode<Uint32T>>((*lowWord_187).value())));
    USE(implicit_cast<TNode<Float64T>>(t985));
    *result_189 = implicit_cast<TNode<Float64T>>(t985);
    // ../../src/builtins/data-view.tq:216:5
    TNode<Float64T> t986 = UncheckedCast<Float64T>(Float64InsertHighWord32(implicit_cast<TNode<Float64T>>((*result_189).value()), implicit_cast<TNode<Uint32T>>((*highWord_188).value())));
    USE(implicit_cast<TNode<Float64T>>(t986));
    *result_189 = implicit_cast<TNode<Float64T>>(t986);
    // ../../src/builtins/data-view.tq:218:5
    TNode<Number> t987 = UncheckedCast<Number>(Convert22UT12ATHeapNumber5ATSmi(implicit_cast<TNode<Float64T>>((*result_189).value())));
    USE(implicit_cast<TNode<Number>>(t987));
    *_return_177 = implicit_cast<TNode<Number>>(t987);
    Goto(label_macro_end_1441);
  }
  BIND(label_macro_end_1441);
  return implicit_cast<TNode<Number>>((*_return_177).value());
}

bool DataViewBuiltinsFromDSLAssembler::kPositiveBigInt() {
  return implicit_cast<bool>(false);
}

bool DataViewBuiltinsFromDSLAssembler::kNegativeBigInt() {
  return implicit_cast<bool>(true);
}

int31_t DataViewBuiltinsFromDSLAssembler::kZeroDigitBigInt() {
  int31_t t988 = 0;
  return implicit_cast<int31_t>(t988);
}

int31_t DataViewBuiltinsFromDSLAssembler::kOneDigitBigInt() {
  int31_t t989 = 1;
  return implicit_cast<int31_t>(t989);
}

int31_t DataViewBuiltinsFromDSLAssembler::kTwoDigitBigInt() {
  int31_t t990 = 2;
  return implicit_cast<int31_t>(t990);
}

compiler::TNode<BigInt> DataViewBuiltinsFromDSLAssembler::CreateEmptyBigInt(TNode<BoolT> p_isPositive, int31_t p_length) {
  TVARIABLE(BigInt, _return_190_impl);
  auto _return_190 = &_return_190_impl;
  USE(_return_190);
  Label label_macro_end_1443_impl(this, {_return_190}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1443 = &label_macro_end_1443_impl;
  USE(label_macro_end_1443);
  // ../../src/builtins/data-view.tq:233:78
  {
    // ../../src/builtins/data-view.tq:235:5
    TNode<IntPtrT> t991 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(p_length)));
    TNode<BigInt> t992 = UncheckedCast<BigInt>(AllocateBigInt(implicit_cast<TNode<IntPtrT>>(t991)));
    USE(implicit_cast<TNode<BigInt>>(t992));
    TVARIABLE(BigInt, result_191_impl);
    auto result_191 = &result_191_impl;
    USE(result_191);
    *result_191 = implicit_cast<TNode<BigInt>>(t992);
    // ../../src/builtins/data-view.tq:238:5
    {
      Label label__True_332_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_332 = &label__True_332_impl;
      USE(label__True_332);
      Label label__False_333_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_333 = &label__False_333_impl;
      USE(label__False_333);
      Label label_if_done_label_799_1444_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_799_1444 = &label_if_done_label_799_1444_impl;
      USE(label_if_done_label_799_1444);
      Branch(implicit_cast<TNode<BoolT>>(p_isPositive), label__True_332, label__False_333);
      if (label__True_332->is_used())
      {
        BIND(label__True_332);
        // ../../src/builtins/data-view.tq:238:21
        {
          // ../../src/builtins/data-view.tq:239:7
          TNode<IntPtrT> t993 = UncheckedCast<IntPtrT>(DataViewEncodeBigIntBits(implicit_cast<bool>(kPositiveBigInt()), implicit_cast<int31_t>(p_length)));
          USE(implicit_cast<TNode<IntPtrT>>(t993));
          StoreBigIntBitfield(implicit_cast<TNode<BigInt>>((*result_191).value()), implicit_cast<TNode<IntPtrT>>(t993));
        }
        Goto(label_if_done_label_799_1444);
      }
      if (label__False_333->is_used())
      {
        BIND(label__False_333);
        // ../../src/builtins/data-view.tq:241:12
        {
          // ../../src/builtins/data-view.tq:242:7
          TNode<IntPtrT> t994 = UncheckedCast<IntPtrT>(DataViewEncodeBigIntBits(implicit_cast<bool>(kNegativeBigInt()), implicit_cast<int31_t>(p_length)));
          USE(implicit_cast<TNode<IntPtrT>>(t994));
          StoreBigIntBitfield(implicit_cast<TNode<BigInt>>((*result_191).value()), implicit_cast<TNode<IntPtrT>>(t994));
        }
        Goto(label_if_done_label_799_1444);
      }
      BIND(label_if_done_label_799_1444);
    }
    // ../../src/builtins/data-view.tq:246:5
    *_return_190 = implicit_cast<TNode<BigInt>>((*result_191).value());
    Goto(label_macro_end_1443);
  }
  BIND(label_macro_end_1443);
  return implicit_cast<TNode<BigInt>>((*_return_190).value());
}

compiler::TNode<BigInt> DataViewBuiltinsFromDSLAssembler::MakeBigIntOn64Bit(TNode<Uint32T> p_lowWord, TNode<Uint32T> p_highWord, bool p_signed) {
  TVARIABLE(BigInt, _return_192_impl);
  auto _return_192 = &_return_192_impl;
  USE(_return_192);
  Label label_macro_end_1445_impl(this, {_return_192}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1445 = &label_macro_end_1445_impl;
  USE(label_macro_end_1445);
  // ../../src/builtins/data-view.tq:251:74
  {
    // ../../src/builtins/data-view.tq:253:5
    {
      Label label__True_334_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_334 = &label__True_334_impl;
      USE(label__True_334);
      Label label__False_335_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_335 = &label__False_335_impl;
      USE(label__False_335);
      Label label__True_336_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_336 = &label__True_336_impl;
      USE(label__True_336);
      int31_t t995 = 0;
      TNode<Uint32T> t996 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t995)));
      TNode<BoolT> t997 = UncheckedCast<BoolT>(Word32Equal(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(t996)));
      USE(implicit_cast<TNode<BoolT>>(t997));
      GotoIfNot(implicit_cast<TNode<BoolT>>(t997), label__False_335);
      int31_t t998 = 0;
      TNode<Uint32T> t999 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t998)));
      TNode<BoolT> t1000 = UncheckedCast<BoolT>(Word32Equal(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t999)));
      USE(implicit_cast<TNode<BoolT>>(t1000));
Branch(implicit_cast<TNode<BoolT>>(t1000), label__True_334, label__False_335);
      if (label__True_334->is_used())
      {
        BIND(label__True_334);
        // ../../src/builtins/data-view.tq:253:40
        {
          // ../../src/builtins/data-view.tq:254:7
          TNode<IntPtrT> t1001 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(kZeroDigitBigInt())));
          TNode<BigInt> t1002 = UncheckedCast<BigInt>(AllocateBigInt(implicit_cast<TNode<IntPtrT>>(t1001)));
          USE(implicit_cast<TNode<BigInt>>(t1002));
          *_return_192 = implicit_cast<TNode<BigInt>>(t1002);
          Goto(label_macro_end_1445);
        }
      }
      BIND(label__False_335);
    }
    // ../../src/builtins/data-view.tq:257:5
    TVARIABLE(BoolT, isPositive_193_impl);
    auto isPositive_193 = &isPositive_193_impl;
    USE(isPositive_193);
    TNode<BoolT> t1003 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
    *isPositive_193 = implicit_cast<TNode<BoolT>>(t1003);
    // ../../src/builtins/data-view.tq:258:5
    TNode<UintPtrT> t1004 = UncheckedCast<UintPtrT>(Convert9ATuintptr(implicit_cast<TNode<Uint32T>>(p_highWord)));
    USE(implicit_cast<TNode<UintPtrT>>(t1004));
    TNode<IntPtrT> t1005 = UncheckedCast<IntPtrT>(Signed(implicit_cast<TNode<UintPtrT>>(t1004)));
    USE(implicit_cast<TNode<IntPtrT>>(t1005));
    TVARIABLE(IntPtrT, highPart_194_impl);
    auto highPart_194 = &highPart_194_impl;
    USE(highPart_194);
    *highPart_194 = implicit_cast<TNode<IntPtrT>>(t1005);
    // ../../src/builtins/data-view.tq:259:5
    TNode<UintPtrT> t1006 = UncheckedCast<UintPtrT>(Convert9ATuintptr(implicit_cast<TNode<Uint32T>>(p_lowWord)));
    USE(implicit_cast<TNode<UintPtrT>>(t1006));
    TNode<IntPtrT> t1007 = UncheckedCast<IntPtrT>(Signed(implicit_cast<TNode<UintPtrT>>(t1006)));
    USE(implicit_cast<TNode<IntPtrT>>(t1007));
    TVARIABLE(IntPtrT, lowPart_195_impl);
    auto lowPart_195 = &lowPart_195_impl;
    USE(lowPart_195);
    *lowPart_195 = implicit_cast<TNode<IntPtrT>>(t1007);
    // ../../src/builtins/data-view.tq:260:5
    int31_t t1008 = 32;
    TNode<IntPtrT> t1009 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1008)));
    TNode<IntPtrT> t1010 = UncheckedCast<IntPtrT>(WordShl(implicit_cast<TNode<IntPtrT>>((*highPart_194).value()), implicit_cast<TNode<IntPtrT>>(t1009)));
    USE(implicit_cast<TNode<IntPtrT>>(t1010));
    TNode<IntPtrT> t1011 = UncheckedCast<IntPtrT>(IntPtrAdd(implicit_cast<TNode<IntPtrT>>(t1010), implicit_cast<TNode<IntPtrT>>((*lowPart_195).value())));
    USE(implicit_cast<TNode<IntPtrT>>(t1011));
    TVARIABLE(IntPtrT, rawValue_196_impl);
    auto rawValue_196 = &rawValue_196_impl;
    USE(rawValue_196);
    *rawValue_196 = implicit_cast<TNode<IntPtrT>>(t1011);
    // ../../src/builtins/data-view.tq:262:5
    {
      if ((implicit_cast<bool>(p_signed))) {
        // ../../src/builtins/data-view.tq:262:27
        {
          // ../../src/builtins/data-view.tq:263:7
          {
            Label label__True_339_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_339 = &label__True_339_impl;
            USE(label__True_339);
            Label label__False_340_impl(this, {isPositive_193, rawValue_196}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_340 = &label__False_340_impl;
            USE(label__False_340);
            int31_t t1012 = 0;
            TNode<IntPtrT> t1013 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1012)));
            TNode<BoolT> t1014 = UncheckedCast<BoolT>(IntPtrLessThan(implicit_cast<TNode<IntPtrT>>((*rawValue_196).value()), implicit_cast<TNode<IntPtrT>>(t1013)));
            USE(implicit_cast<TNode<BoolT>>(t1014));
            Branch(implicit_cast<TNode<BoolT>>(t1014), label__True_339, label__False_340);
            if (label__True_339->is_used())
            {
              BIND(label__True_339);
              // ../../src/builtins/data-view.tq:263:25
              {
                // ../../src/builtins/data-view.tq:264:9
                TNode<BoolT> t1015 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(false)));
                *isPositive_193 = implicit_cast<TNode<BoolT>>(t1015);
                // ../../src/builtins/data-view.tq:266:9
                int31_t t1016 = 0;
                TNode<IntPtrT> t1017 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1016)));
                TNode<IntPtrT> t1018 = UncheckedCast<IntPtrT>(IntPtrSub(implicit_cast<TNode<IntPtrT>>(t1017), implicit_cast<TNode<IntPtrT>>((*rawValue_196).value())));
                USE(implicit_cast<TNode<IntPtrT>>(t1018));
                *rawValue_196 = implicit_cast<TNode<IntPtrT>>(t1018);
              }
              Goto(label__False_340);
            }
            BIND(label__False_340);
          }
        }
      }
    }
    // ../../src/builtins/data-view.tq:271:5
    TNode<BigInt> t1019 = UncheckedCast<BigInt>(CreateEmptyBigInt(implicit_cast<TNode<BoolT>>((*isPositive_193).value()), implicit_cast<int31_t>(kOneDigitBigInt())));
    USE(implicit_cast<TNode<BigInt>>(t1019));
    TVARIABLE(BigInt, result_197_impl);
    auto result_197 = &result_197_impl;
    USE(result_197);
    *result_197 = implicit_cast<TNode<BigInt>>(t1019);
    // ../../src/builtins/data-view.tq:273:5
    int31_t t1020 = 0;
    TNode<UintPtrT> t1021 = UncheckedCast<UintPtrT>(Unsigned(implicit_cast<TNode<IntPtrT>>((*rawValue_196).value())));
    USE(implicit_cast<TNode<UintPtrT>>(t1021));
    StoreBigIntDigit(implicit_cast<TNode<BigInt>>((*result_197).value()), implicit_cast<int31_t>(t1020), implicit_cast<TNode<UintPtrT>>(t1021));
    // ../../src/builtins/data-view.tq:275:5
    *_return_192 = implicit_cast<TNode<BigInt>>((*result_197).value());
    Goto(label_macro_end_1445);
  }
  BIND(label_macro_end_1445);
  return implicit_cast<TNode<BigInt>>((*_return_192).value());
}

compiler::TNode<BigInt> DataViewBuiltinsFromDSLAssembler::MakeBigIntOn32Bit(TNode<Uint32T> p_lowWord, TNode<Uint32T> p_highWord, bool p_signed) {
  TVARIABLE(BigInt, _return_198_impl);
  auto _return_198 = &_return_198_impl;
  USE(_return_198);
  Label label_macro_end_1446_impl(this, {_return_198}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1446 = &label_macro_end_1446_impl;
  USE(label_macro_end_1446);
  // ../../src/builtins/data-view.tq:280:74
  {
    // ../../src/builtins/data-view.tq:282:5
    {
      Label label__True_341_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_341 = &label__True_341_impl;
      USE(label__True_341);
      Label label__False_342_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_342 = &label__False_342_impl;
      USE(label__False_342);
      Label label__True_343_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_343 = &label__True_343_impl;
      USE(label__True_343);
      int31_t t1022 = 0;
      TNode<Uint32T> t1023 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1022)));
      TNode<BoolT> t1024 = UncheckedCast<BoolT>(Word32Equal(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(t1023)));
      USE(implicit_cast<TNode<BoolT>>(t1024));
      GotoIfNot(implicit_cast<TNode<BoolT>>(t1024), label__False_342);
      int31_t t1025 = 0;
      TNode<Uint32T> t1026 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1025)));
      TNode<BoolT> t1027 = UncheckedCast<BoolT>(Word32Equal(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t1026)));
      USE(implicit_cast<TNode<BoolT>>(t1027));
Branch(implicit_cast<TNode<BoolT>>(t1027), label__True_341, label__False_342);
      if (label__True_341->is_used())
      {
        BIND(label__True_341);
        // ../../src/builtins/data-view.tq:282:40
        {
          // ../../src/builtins/data-view.tq:283:7
          TNode<IntPtrT> t1028 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(kZeroDigitBigInt())));
          TNode<BigInt> t1029 = UncheckedCast<BigInt>(AllocateBigInt(implicit_cast<TNode<IntPtrT>>(t1028)));
          USE(implicit_cast<TNode<BigInt>>(t1029));
          *_return_198 = implicit_cast<TNode<BigInt>>(t1029);
          Goto(label_macro_end_1446);
        }
      }
      BIND(label__False_342);
    }
    // ../../src/builtins/data-view.tq:287:5
    TVARIABLE(BoolT, needTwoDigits_199_impl);
    auto needTwoDigits_199 = &needTwoDigits_199_impl;
    USE(needTwoDigits_199);
    TNode<BoolT> t1030 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(false)));
    *needTwoDigits_199 = implicit_cast<TNode<BoolT>>(t1030);
    // ../../src/builtins/data-view.tq:288:5
    TVARIABLE(BoolT, isPositive_200_impl);
    auto isPositive_200 = &isPositive_200_impl;
    USE(isPositive_200);
    TNode<BoolT> t1031 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
    *isPositive_200 = implicit_cast<TNode<BoolT>>(t1031);
    // ../../src/builtins/data-view.tq:292:5
    TNode<Int32T> t1032 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>(p_lowWord)));
    USE(implicit_cast<TNode<Int32T>>(t1032));
    TVARIABLE(Int32T, lowPart_201_impl);
    auto lowPart_201 = &lowPart_201_impl;
    USE(lowPart_201);
    *lowPart_201 = implicit_cast<TNode<Int32T>>(t1032);
    // ../../src/builtins/data-view.tq:293:5
    TNode<Int32T> t1033 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>(p_highWord)));
    USE(implicit_cast<TNode<Int32T>>(t1033));
    TVARIABLE(Int32T, highPart_202_impl);
    auto highPart_202 = &highPart_202_impl;
    USE(highPart_202);
    *highPart_202 = implicit_cast<TNode<Int32T>>(t1033);
    // ../../src/builtins/data-view.tq:298:5
    {
      Label label__True_344_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_344 = &label__True_344_impl;
      USE(label__True_344);
      Label label__False_345_impl(this, {highPart_202, isPositive_200, lowPart_201, needTwoDigits_199}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_345 = &label__False_345_impl;
      USE(label__False_345);
      int31_t t1034 = 0;
      TNode<Uint32T> t1035 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1034)));
      TNode<BoolT> t1036 = UncheckedCast<BoolT>(Word32NotEqual(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t1035)));
      USE(implicit_cast<TNode<BoolT>>(t1036));
      Branch(implicit_cast<TNode<BoolT>>(t1036), label__True_344, label__False_345);
      if (label__True_344->is_used())
      {
        BIND(label__True_344);
        // ../../src/builtins/data-view.tq:298:24
        {
          // ../../src/builtins/data-view.tq:299:7
          {
            if ((implicit_cast<bool>(p_signed))) {
              // ../../src/builtins/data-view.tq:299:29
              {
                // ../../src/builtins/data-view.tq:301:9
                {
                  Label label__True_348_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_348 = &label__True_348_impl;
                  USE(label__True_348);
                  Label label__False_349_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_349 = &label__False_349_impl;
                  USE(label__False_349);
                  Label label_if_done_label_800_1447_impl(this, {highPart_202, isPositive_200, lowPart_201, needTwoDigits_199}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label_if_done_label_800_1447 = &label_if_done_label_800_1447_impl;
                  USE(label_if_done_label_800_1447);
                  int31_t t1037 = 0;
                  TNode<Int32T> t1038 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1037)));
                  TNode<BoolT> t1039 = UncheckedCast<BoolT>(Int32LessThan(implicit_cast<TNode<Int32T>>((*highPart_202).value()), implicit_cast<TNode<Int32T>>(t1038)));
                  USE(implicit_cast<TNode<BoolT>>(t1039));
                  Branch(implicit_cast<TNode<BoolT>>(t1039), label__True_348, label__False_349);
                  if (label__True_348->is_used())
                  {
                    BIND(label__True_348);
                    // ../../src/builtins/data-view.tq:301:27
                    {
                      // ../../src/builtins/data-view.tq:302:11
                      TNode<BoolT> t1040 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(false)));
                      *isPositive_200 = implicit_cast<TNode<BoolT>>(t1040);
                      // ../../src/builtins/data-view.tq:307:11
                      int31_t t1041 = 0;
                      TNode<Int32T> t1042 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1041)));
                      TNode<Int32T> t1043 = UncheckedCast<Int32T>(Int32Sub(implicit_cast<TNode<Int32T>>(t1042), implicit_cast<TNode<Int32T>>((*highPart_202).value())));
                      USE(implicit_cast<TNode<Int32T>>(t1043));
                      *highPart_202 = implicit_cast<TNode<Int32T>>(t1043);
                      // ../../src/builtins/data-view.tq:308:11
                      {
                        Label label__True_350_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_350 = &label__True_350_impl;
                        USE(label__True_350);
                        Label label__False_351_impl(this, {highPart_202}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_351 = &label__False_351_impl;
                        USE(label__False_351);
                        int31_t t1044 = 0;
                        TNode<Int32T> t1045 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1044)));
                        TNode<BoolT> t1046 = UncheckedCast<BoolT>(Word32NotEqual(implicit_cast<TNode<Int32T>>((*lowPart_201).value()), implicit_cast<TNode<Int32T>>(t1045)));
                        USE(implicit_cast<TNode<BoolT>>(t1046));
                        Branch(implicit_cast<TNode<BoolT>>(t1046), label__True_350, label__False_351);
                        if (label__True_350->is_used())
                        {
                          BIND(label__True_350);
                          // ../../src/builtins/data-view.tq:308:29
                          {
                            // ../../src/builtins/data-view.tq:309:13
                            int31_t t1047 = 1;
                            TNode<Int32T> t1048 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1047)));
                            TNode<Int32T> t1049 = UncheckedCast<Int32T>(Int32Sub(implicit_cast<TNode<Int32T>>((*highPart_202).value()), implicit_cast<TNode<Int32T>>(t1048)));
                            USE(implicit_cast<TNode<Int32T>>(t1049));
                            *highPart_202 = implicit_cast<TNode<Int32T>>(t1049);
                          }
                          Goto(label__False_351);
                        }
                        BIND(label__False_351);
                      }
                      // ../../src/builtins/data-view.tq:311:11
                      int31_t t1050 = 0;
                      TNode<Int32T> t1051 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1050)));
                      TNode<Int32T> t1052 = UncheckedCast<Int32T>(Int32Sub(implicit_cast<TNode<Int32T>>(t1051), implicit_cast<TNode<Int32T>>((*lowPart_201).value())));
                      USE(implicit_cast<TNode<Int32T>>(t1052));
                      *lowPart_201 = implicit_cast<TNode<Int32T>>(t1052);
                      // ../../src/builtins/data-view.tq:314:11
                      {
                        Label label__True_352_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__True_352 = &label__True_352_impl;
                        USE(label__True_352);
                        Label label__False_353_impl(this, {needTwoDigits_199}, compiler::CodeAssemblerLabel::kNonDeferred);
                        Label* label__False_353 = &label__False_353_impl;
                        USE(label__False_353);
                        int31_t t1053 = 0;
                        TNode<Int32T> t1054 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1053)));
                        TNode<BoolT> t1055 = UncheckedCast<BoolT>(Word32NotEqual(implicit_cast<TNode<Int32T>>((*highPart_202).value()), implicit_cast<TNode<Int32T>>(t1054)));
                        USE(implicit_cast<TNode<BoolT>>(t1055));
                        Branch(implicit_cast<TNode<BoolT>>(t1055), label__True_352, label__False_353);
                        if (label__True_352->is_used())
                        {
                          BIND(label__True_352);
                          // ../../src/builtins/data-view.tq:314:30
                          {
                            // ../../src/builtins/data-view.tq:315:13
                            TNode<BoolT> t1056 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
                            *needTwoDigits_199 = implicit_cast<TNode<BoolT>>(t1056);
                          }
                          Goto(label__False_353);
                        }
                        BIND(label__False_353);
                      }
                    }
                    Goto(label_if_done_label_800_1447);
                  }
                  if (label__False_349->is_used())
                  {
                    BIND(label__False_349);
                    // ../../src/builtins/data-view.tq:318:16
                    {
                      // ../../src/builtins/data-view.tq:320:11
                      TNode<BoolT> t1057 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
                      *needTwoDigits_199 = implicit_cast<TNode<BoolT>>(t1057);
                    }
                    Goto(label_if_done_label_800_1447);
                  }
                  BIND(label_if_done_label_800_1447);
                }
              }
            } else {
              // ../../src/builtins/data-view.tq:323:14
              {
                // ../../src/builtins/data-view.tq:326:9
                TNode<BoolT> t1058 = UncheckedCast<BoolT>(FromConstexpr6ATbool(implicit_cast<bool>(true)));
                *needTwoDigits_199 = implicit_cast<TNode<BoolT>>(t1058);
              }
            }
          }
        }
        Goto(label__False_345);
      }
      BIND(label__False_345);
    }
    // ../../src/builtins/data-view.tq:331:5
    TVARIABLE(BigInt, result_203_impl);
    auto result_203 = &result_203_impl;
    USE(result_203);
    // ../../src/builtins/data-view.tq:332:5
    {
      Label label__True_354_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_354 = &label__True_354_impl;
      USE(label__True_354);
      Label label__False_355_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_355 = &label__False_355_impl;
      USE(label__False_355);
      Label label_if_done_label_801_1448_impl(this, {result_203}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_801_1448 = &label_if_done_label_801_1448_impl;
      USE(label_if_done_label_801_1448);
      Branch(implicit_cast<TNode<BoolT>>((*needTwoDigits_199).value()), label__True_354, label__False_355);
      if (label__True_354->is_used())
      {
        BIND(label__True_354);
        // ../../src/builtins/data-view.tq:332:24
        {
          // ../../src/builtins/data-view.tq:333:7
          TNode<BigInt> t1059 = UncheckedCast<BigInt>(CreateEmptyBigInt(implicit_cast<TNode<BoolT>>((*isPositive_200).value()), implicit_cast<int31_t>(kTwoDigitBigInt())));
          USE(implicit_cast<TNode<BigInt>>(t1059));
          *result_203 = implicit_cast<TNode<BigInt>>(t1059);
        }
        Goto(label_if_done_label_801_1448);
      }
      if (label__False_355->is_used())
      {
        BIND(label__False_355);
        // ../../src/builtins/data-view.tq:334:12
        {
          // ../../src/builtins/data-view.tq:335:7
          TNode<BigInt> t1060 = UncheckedCast<BigInt>(CreateEmptyBigInt(implicit_cast<TNode<BoolT>>((*isPositive_200).value()), implicit_cast<int31_t>(kOneDigitBigInt())));
          USE(implicit_cast<TNode<BigInt>>(t1060));
          *result_203 = implicit_cast<TNode<BigInt>>(t1060);
        }
        Goto(label_if_done_label_801_1448);
      }
      BIND(label_if_done_label_801_1448);
    }
    // ../../src/builtins/data-view.tq:339:5
    int31_t t1061 = 0;
    TNode<IntPtrT> t1062 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Int32T>>((*lowPart_201).value())));
    USE(implicit_cast<TNode<IntPtrT>>(t1062));
    TNode<UintPtrT> t1063 = UncheckedCast<UintPtrT>(Unsigned(implicit_cast<TNode<IntPtrT>>(t1062)));
    USE(implicit_cast<TNode<UintPtrT>>(t1063));
    StoreBigIntDigit(implicit_cast<TNode<BigInt>>((*result_203).value()), implicit_cast<int31_t>(t1061), implicit_cast<TNode<UintPtrT>>(t1063));
    // ../../src/builtins/data-view.tq:341:5
    {
      Label label__True_356_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_356 = &label__True_356_impl;
      USE(label__True_356);
      Label label__False_357_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_357 = &label__False_357_impl;
      USE(label__False_357);
      Branch(implicit_cast<TNode<BoolT>>((*needTwoDigits_199).value()), label__True_356, label__False_357);
      if (label__True_356->is_used())
      {
        BIND(label__True_356);
        // ../../src/builtins/data-view.tq:341:24
        {
          // ../../src/builtins/data-view.tq:342:7
          int31_t t1064 = 1;
          TNode<IntPtrT> t1065 = UncheckedCast<IntPtrT>(Convert8ATintptr(implicit_cast<TNode<Int32T>>((*highPart_202).value())));
          USE(implicit_cast<TNode<IntPtrT>>(t1065));
          TNode<UintPtrT> t1066 = UncheckedCast<UintPtrT>(Unsigned(implicit_cast<TNode<IntPtrT>>(t1065)));
          USE(implicit_cast<TNode<UintPtrT>>(t1066));
          StoreBigIntDigit(implicit_cast<TNode<BigInt>>((*result_203).value()), implicit_cast<int31_t>(t1064), implicit_cast<TNode<UintPtrT>>(t1066));
        }
        Goto(label__False_357);
      }
      BIND(label__False_357);
    }
    // ../../src/builtins/data-view.tq:345:5
    *_return_198 = implicit_cast<TNode<BigInt>>((*result_203).value());
    Goto(label_macro_end_1446);
  }
  BIND(label_macro_end_1446);
  return implicit_cast<TNode<BigInt>>((*_return_198).value());
}

compiler::TNode<BigInt> DataViewBuiltinsFromDSLAssembler::MakeBigInt(TNode<Uint32T> p_lowWord, TNode<Uint32T> p_highWord, bool p_signed) {
  TVARIABLE(BigInt, _return_204_impl);
  auto _return_204 = &_return_204_impl;
  USE(_return_204);
  Label label_macro_end_1449_impl(this, {_return_204}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1449 = &label_macro_end_1449_impl;
  USE(label_macro_end_1449);
  // ../../src/builtins/data-view.tq:349:74
  {
    // ../../src/builtins/data-view.tq:352:5
    {
      bool t1067 = Is64();
      USE(implicit_cast<bool>(t1067));
      if ((implicit_cast<bool>(t1067))) {
        // ../../src/builtins/data-view.tq:352:27
        {
          // ../../src/builtins/data-view.tq:353:7
          TNode<BigInt> t1068 = UncheckedCast<BigInt>(MakeBigIntOn64Bit(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<bool>(p_signed)));
          USE(implicit_cast<TNode<BigInt>>(t1068));
          *_return_204 = implicit_cast<TNode<BigInt>>(t1068);
          Goto(label_macro_end_1449);
        }
      } else {
        // ../../src/builtins/data-view.tq:354:12
        {
          // ../../src/builtins/data-view.tq:355:7
          TNode<BigInt> t1069 = UncheckedCast<BigInt>(MakeBigIntOn32Bit(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<bool>(p_signed)));
          USE(implicit_cast<TNode<BigInt>>(t1069));
          *_return_204 = implicit_cast<TNode<BigInt>>(t1069);
          Goto(label_macro_end_1449);
        }
      }
    }
  }
  BIND(label_macro_end_1449);
  return implicit_cast<TNode<BigInt>>((*_return_204).value());
}

compiler::TNode<BigInt> DataViewBuiltinsFromDSLAssembler::LoadDataViewBigInt(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<BoolT> p_requestedLittleEndian, bool p_signed) {
  TVARIABLE(BigInt, _return_205_impl);
  auto _return_205 = &_return_205_impl;
  USE(_return_205);
  Label label_macro_end_1450_impl(this, {_return_205}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1450 = &label_macro_end_1450_impl;
  USE(label_macro_end_1450);
  // ../../src/builtins/data-view.tq:361:39
  {
    // ../../src/builtins/data-view.tq:362:5
    TNode<RawPtrT> t1070 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_206_impl);
    auto dataPointer_206 = &dataPointer_206_impl;
    USE(dataPointer_206);
    *dataPointer_206 = implicit_cast<TNode<RawPtrT>>(t1070);
    // ../../src/builtins/data-view.tq:364:5
    TNode<Uint32T> t1071 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(p_offset)));
    USE(implicit_cast<TNode<Uint32T>>(t1071));
    TVARIABLE(Uint32T, b0_207_impl);
    auto b0_207 = &b0_207_impl;
    USE(b0_207);
    *b0_207 = implicit_cast<TNode<Uint32T>>(t1071);
    // ../../src/builtins/data-view.tq:365:5
    int31_t t1072 = 1;
    TNode<UintPtrT> t1073 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1072)));
    TNode<UintPtrT> t1074 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1073)));
    USE(implicit_cast<TNode<UintPtrT>>(t1074));
    TNode<Uint32T> t1075 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1074)));
    USE(implicit_cast<TNode<Uint32T>>(t1075));
    TVARIABLE(Uint32T, b1_208_impl);
    auto b1_208 = &b1_208_impl;
    USE(b1_208);
    *b1_208 = implicit_cast<TNode<Uint32T>>(t1075);
    // ../../src/builtins/data-view.tq:366:5
    int31_t t1076 = 2;
    TNode<UintPtrT> t1077 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1076)));
    TNode<UintPtrT> t1078 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1077)));
    USE(implicit_cast<TNode<UintPtrT>>(t1078));
    TNode<Uint32T> t1079 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1078)));
    USE(implicit_cast<TNode<Uint32T>>(t1079));
    TVARIABLE(Uint32T, b2_209_impl);
    auto b2_209 = &b2_209_impl;
    USE(b2_209);
    *b2_209 = implicit_cast<TNode<Uint32T>>(t1079);
    // ../../src/builtins/data-view.tq:367:5
    int31_t t1080 = 3;
    TNode<UintPtrT> t1081 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1080)));
    TNode<UintPtrT> t1082 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1081)));
    USE(implicit_cast<TNode<UintPtrT>>(t1082));
    TNode<Uint32T> t1083 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1082)));
    USE(implicit_cast<TNode<Uint32T>>(t1083));
    TVARIABLE(Uint32T, b3_210_impl);
    auto b3_210 = &b3_210_impl;
    USE(b3_210);
    *b3_210 = implicit_cast<TNode<Uint32T>>(t1083);
    // ../../src/builtins/data-view.tq:368:5
    int31_t t1084 = 4;
    TNode<UintPtrT> t1085 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1084)));
    TNode<UintPtrT> t1086 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1085)));
    USE(implicit_cast<TNode<UintPtrT>>(t1086));
    TNode<Uint32T> t1087 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1086)));
    USE(implicit_cast<TNode<Uint32T>>(t1087));
    TVARIABLE(Uint32T, b4_211_impl);
    auto b4_211 = &b4_211_impl;
    USE(b4_211);
    *b4_211 = implicit_cast<TNode<Uint32T>>(t1087);
    // ../../src/builtins/data-view.tq:369:5
    int31_t t1088 = 5;
    TNode<UintPtrT> t1089 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1088)));
    TNode<UintPtrT> t1090 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1089)));
    USE(implicit_cast<TNode<UintPtrT>>(t1090));
    TNode<Uint32T> t1091 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1090)));
    USE(implicit_cast<TNode<Uint32T>>(t1091));
    TVARIABLE(Uint32T, b5_212_impl);
    auto b5_212 = &b5_212_impl;
    USE(b5_212);
    *b5_212 = implicit_cast<TNode<Uint32T>>(t1091);
    // ../../src/builtins/data-view.tq:370:5
    int31_t t1092 = 6;
    TNode<UintPtrT> t1093 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1092)));
    TNode<UintPtrT> t1094 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1093)));
    USE(implicit_cast<TNode<UintPtrT>>(t1094));
    TNode<Uint32T> t1095 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1094)));
    USE(implicit_cast<TNode<Uint32T>>(t1095));
    TVARIABLE(Uint32T, b6_213_impl);
    auto b6_213 = &b6_213_impl;
    USE(b6_213);
    *b6_213 = implicit_cast<TNode<Uint32T>>(t1095);
    // ../../src/builtins/data-view.tq:371:5
    int31_t t1096 = 7;
    TNode<UintPtrT> t1097 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1096)));
    TNode<UintPtrT> t1098 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1097)));
    USE(implicit_cast<TNode<UintPtrT>>(t1098));
    TNode<Uint32T> t1099 = UncheckedCast<Uint32T>(LoadUint8(implicit_cast<TNode<RawPtrT>>((*dataPointer_206).value()), implicit_cast<TNode<UintPtrT>>(t1098)));
    USE(implicit_cast<TNode<Uint32T>>(t1099));
    TVARIABLE(Uint32T, b7_214_impl);
    auto b7_214 = &b7_214_impl;
    USE(b7_214);
    *b7_214 = implicit_cast<TNode<Uint32T>>(t1099);
    // ../../src/builtins/data-view.tq:372:5
    TVARIABLE(Uint32T, lowWord_215_impl);
    auto lowWord_215 = &lowWord_215_impl;
    USE(lowWord_215);
    // ../../src/builtins/data-view.tq:373:5
    TVARIABLE(Uint32T, highWord_216_impl);
    auto highWord_216 = &highWord_216_impl;
    USE(highWord_216);
    // ../../src/builtins/data-view.tq:375:5
    {
      Label label__True_360_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_360 = &label__True_360_impl;
      USE(label__True_360);
      Label label__False_361_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_361 = &label__False_361_impl;
      USE(label__False_361);
      Label label_if_done_label_802_1451_impl(this, {highWord_216, lowWord_215}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_802_1451 = &label_if_done_label_802_1451_impl;
      USE(label_if_done_label_802_1451);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_360, label__False_361);
      if (label__True_360->is_used())
      {
        BIND(label__True_360);
        // ../../src/builtins/data-view.tq:375:32
        {
          // ../../src/builtins/data-view.tq:376:7
          int31_t t1100 = 24;
          TNode<Uint32T> t1101 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1100)));
          TNode<Uint32T> t1102 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b3_210).value()), implicit_cast<TNode<Uint32T>>(t1101)));
          USE(implicit_cast<TNode<Uint32T>>(t1102));
          int31_t t1103 = 16;
          TNode<Uint32T> t1104 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1103)));
          TNode<Uint32T> t1105 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b2_209).value()), implicit_cast<TNode<Uint32T>>(t1104)));
          USE(implicit_cast<TNode<Uint32T>>(t1105));
          TNode<Uint32T> t1106 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1102), implicit_cast<TNode<Uint32T>>(t1105)));
          USE(implicit_cast<TNode<Uint32T>>(t1106));
          int31_t t1107 = 8;
          TNode<Uint32T> t1108 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1107)));
          TNode<Uint32T> t1109 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b1_208).value()), implicit_cast<TNode<Uint32T>>(t1108)));
          USE(implicit_cast<TNode<Uint32T>>(t1109));
          TNode<Uint32T> t1110 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1106), implicit_cast<TNode<Uint32T>>(t1109)));
          USE(implicit_cast<TNode<Uint32T>>(t1110));
          TNode<Uint32T> t1111 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1110), implicit_cast<TNode<Uint32T>>((*b0_207).value())));
          USE(implicit_cast<TNode<Uint32T>>(t1111));
          *lowWord_215 = implicit_cast<TNode<Uint32T>>(t1111);
          // ../../src/builtins/data-view.tq:377:7
          int31_t t1112 = 24;
          TNode<Uint32T> t1113 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1112)));
          TNode<Uint32T> t1114 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b7_214).value()), implicit_cast<TNode<Uint32T>>(t1113)));
          USE(implicit_cast<TNode<Uint32T>>(t1114));
          int31_t t1115 = 16;
          TNode<Uint32T> t1116 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1115)));
          TNode<Uint32T> t1117 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b6_213).value()), implicit_cast<TNode<Uint32T>>(t1116)));
          USE(implicit_cast<TNode<Uint32T>>(t1117));
          TNode<Uint32T> t1118 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1114), implicit_cast<TNode<Uint32T>>(t1117)));
          USE(implicit_cast<TNode<Uint32T>>(t1118));
          int31_t t1119 = 8;
          TNode<Uint32T> t1120 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1119)));
          TNode<Uint32T> t1121 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b5_212).value()), implicit_cast<TNode<Uint32T>>(t1120)));
          USE(implicit_cast<TNode<Uint32T>>(t1121));
          TNode<Uint32T> t1122 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1118), implicit_cast<TNode<Uint32T>>(t1121)));
          USE(implicit_cast<TNode<Uint32T>>(t1122));
          TNode<Uint32T> t1123 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1122), implicit_cast<TNode<Uint32T>>((*b4_211).value())));
          USE(implicit_cast<TNode<Uint32T>>(t1123));
          *highWord_216 = implicit_cast<TNode<Uint32T>>(t1123);
        }
        Goto(label_if_done_label_802_1451);
      }
      if (label__False_361->is_used())
      {
        BIND(label__False_361);
        // ../../src/builtins/data-view.tq:378:12
        {
          // ../../src/builtins/data-view.tq:379:7
          int31_t t1124 = 24;
          TNode<Uint32T> t1125 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1124)));
          TNode<Uint32T> t1126 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b0_207).value()), implicit_cast<TNode<Uint32T>>(t1125)));
          USE(implicit_cast<TNode<Uint32T>>(t1126));
          int31_t t1127 = 16;
          TNode<Uint32T> t1128 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1127)));
          TNode<Uint32T> t1129 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b1_208).value()), implicit_cast<TNode<Uint32T>>(t1128)));
          USE(implicit_cast<TNode<Uint32T>>(t1129));
          TNode<Uint32T> t1130 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1126), implicit_cast<TNode<Uint32T>>(t1129)));
          USE(implicit_cast<TNode<Uint32T>>(t1130));
          int31_t t1131 = 8;
          TNode<Uint32T> t1132 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1131)));
          TNode<Uint32T> t1133 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b2_209).value()), implicit_cast<TNode<Uint32T>>(t1132)));
          USE(implicit_cast<TNode<Uint32T>>(t1133));
          TNode<Uint32T> t1134 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1130), implicit_cast<TNode<Uint32T>>(t1133)));
          USE(implicit_cast<TNode<Uint32T>>(t1134));
          TNode<Uint32T> t1135 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1134), implicit_cast<TNode<Uint32T>>((*b3_210).value())));
          USE(implicit_cast<TNode<Uint32T>>(t1135));
          *highWord_216 = implicit_cast<TNode<Uint32T>>(t1135);
          // ../../src/builtins/data-view.tq:380:7
          int31_t t1136 = 24;
          TNode<Uint32T> t1137 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1136)));
          TNode<Uint32T> t1138 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b4_211).value()), implicit_cast<TNode<Uint32T>>(t1137)));
          USE(implicit_cast<TNode<Uint32T>>(t1138));
          int31_t t1139 = 16;
          TNode<Uint32T> t1140 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1139)));
          TNode<Uint32T> t1141 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b5_212).value()), implicit_cast<TNode<Uint32T>>(t1140)));
          USE(implicit_cast<TNode<Uint32T>>(t1141));
          TNode<Uint32T> t1142 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1138), implicit_cast<TNode<Uint32T>>(t1141)));
          USE(implicit_cast<TNode<Uint32T>>(t1142));
          int31_t t1143 = 8;
          TNode<Uint32T> t1144 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1143)));
          TNode<Uint32T> t1145 = UncheckedCast<Uint32T>(Word32Shl(implicit_cast<TNode<Uint32T>>((*b6_213).value()), implicit_cast<TNode<Uint32T>>(t1144)));
          USE(implicit_cast<TNode<Uint32T>>(t1145));
          TNode<Uint32T> t1146 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1142), implicit_cast<TNode<Uint32T>>(t1145)));
          USE(implicit_cast<TNode<Uint32T>>(t1146));
          TNode<Uint32T> t1147 = UncheckedCast<Uint32T>(Word32Or(implicit_cast<TNode<Uint32T>>(t1146), implicit_cast<TNode<Uint32T>>((*b7_214).value())));
          USE(implicit_cast<TNode<Uint32T>>(t1147));
          *lowWord_215 = implicit_cast<TNode<Uint32T>>(t1147);
        }
        Goto(label_if_done_label_802_1451);
      }
      BIND(label_if_done_label_802_1451);
    }
    // ../../src/builtins/data-view.tq:383:5
    TNode<BigInt> t1148 = UncheckedCast<BigInt>(MakeBigInt(implicit_cast<TNode<Uint32T>>((*lowWord_215).value()), implicit_cast<TNode<Uint32T>>((*highWord_216).value()), implicit_cast<bool>(p_signed)));
    USE(implicit_cast<TNode<BigInt>>(t1148));
    *_return_205 = implicit_cast<TNode<BigInt>>(t1148);
    Goto(label_macro_end_1450);
  }
  BIND(label_macro_end_1450);
  return implicit_cast<TNode<BigInt>>((*_return_205).value());
}

compiler::TNode<Numeric> DataViewBuiltinsFromDSLAssembler::DataViewGet(TNode<Context> p_context, TNode<Object> p_receiver, TNode<Object> p_offset, TNode<Object> p_requestedLittleEndian, ElementsKind p_kind) {
  TVARIABLE(Numeric, _return_217_impl);
  auto _return_217 = &_return_217_impl;
  USE(_return_217);
  Label label_macro_end_1452_impl(this, {_return_217}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1452 = &label_macro_end_1452_impl;
  USE(label_macro_end_1452);
  // ../../src/builtins/data-view.tq:392:77
  {
    // ../../src/builtins/data-view.tq:393:5
    TNode<String> t1149 = UncheckedCast<String>(MakeDataViewGetterNameString(implicit_cast<ElementsKind>(p_kind)));
    USE(implicit_cast<TNode<String>>(t1149));
    TNode<JSDataView> t1150 = UncheckedCast<JSDataView>(ValidateDataView(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<String>>(t1149)));
    USE(implicit_cast<TNode<JSDataView>>(t1150));
    TVARIABLE(JSDataView, dataView_218_impl);
    auto dataView_218 = &dataView_218_impl;
    USE(dataView_218);
    *dataView_218 = implicit_cast<TNode<JSDataView>>(t1150);
    // ../../src/builtins/data-view.tq:396:5
    TVARIABLE(Number, getIndex_219_impl);
    auto getIndex_219 = &getIndex_219_impl;
    USE(getIndex_219);
    // ../../src/builtins/data-view.tq:397:5
    {
      Label label_try_done_803_1453_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_803_1453 = &label_try_done_803_1453_impl;
      USE(label_try_done_803_1453);
      Label label_RangeError_362_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_RangeError_362 = &label_RangeError_362_impl;
      USE(label_RangeError_362);
      Label label_try_begin_804_1454_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_804_1454 = &label_try_begin_804_1454_impl;
      USE(label_try_begin_804_1454);
      Goto(label_try_begin_804_1454);
      if (label_try_begin_804_1454->is_used())
      {
        BIND(label_try_begin_804_1454);
        // ../../src/builtins/data-view.tq:397:9
        {
          // ../../src/builtins/data-view.tq:398:7
          TNode<Number> t1151 = UncheckedCast<Number>(ToIndex(implicit_cast<TNode<Object>>(p_offset), implicit_cast<TNode<Context>>(p_context), label_RangeError_362));
          USE(implicit_cast<TNode<Number>>(t1151));
          *getIndex_219 = implicit_cast<TNode<Number>>(t1151);
        }
        Goto(label_try_done_803_1453);
      }
      if (label_RangeError_362->is_used())
      {
        BIND(label_RangeError_362);
        // ../../src/builtins/data-view.tq:400:22
        {
          // ../../src/builtins/data-view.tq:401:7
          ThrowRangeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kInvalidDataViewAccessorOffset));
        }
      }
      BIND(label_try_done_803_1453);
    }
    // ../../src/builtins/data-view.tq:404:5
    TNode<BoolT> t1152 = UncheckedCast<BoolT>(ToBoolean(implicit_cast<TNode<Object>>(p_requestedLittleEndian)));
    USE(implicit_cast<TNode<BoolT>>(t1152));
    TVARIABLE(BoolT, littleEndian_220_impl);
    auto littleEndian_220 = &littleEndian_220_impl;
    USE(littleEndian_220);
    *littleEndian_220 = implicit_cast<TNode<BoolT>>(t1152);
    // ../../src/builtins/data-view.tq:405:5
    TNode<JSArrayBuffer> t1153 = UncheckedCast<JSArrayBuffer>(LoadJSArrayBufferViewBuffer(implicit_cast<TNode<JSArrayBufferView>>((*dataView_218).value())));
    TVARIABLE(JSArrayBuffer, buffer_221_impl);
    auto buffer_221 = &buffer_221_impl;
    USE(buffer_221);
    *buffer_221 = implicit_cast<TNode<JSArrayBuffer>>(t1153);
    // ../../src/builtins/data-view.tq:407:5
    {
      Label label__True_363_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_363 = &label__True_363_impl;
      USE(label__True_363);
      Label label__False_364_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_364 = &label__False_364_impl;
      USE(label__False_364);
      TNode<BoolT> t1154 = UncheckedCast<BoolT>(IsDetachedBuffer(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value())));
      USE(implicit_cast<TNode<BoolT>>(t1154));
      Branch(implicit_cast<TNode<BoolT>>(t1154), label__True_363, label__False_364);
      if (label__True_363->is_used())
      {
        BIND(label__True_363);
        // ../../src/builtins/data-view.tq:407:35
        {
          // ../../src/builtins/data-view.tq:408:7
          TNode<String> t1155 = UncheckedCast<String>(MakeDataViewGetterNameString(implicit_cast<ElementsKind>(p_kind)));
          USE(implicit_cast<TNode<String>>(t1155));
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kDetachedOperation), implicit_cast<TNode<Object>>(t1155));
        }
      }
      BIND(label__False_364);
    }
    // ../../src/builtins/data-view.tq:412:5
    TNode<Float64T> t1156 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<TNode<Number>>((*getIndex_219).value())));
    USE(implicit_cast<TNode<Float64T>>(t1156));
    TVARIABLE(Float64T, getIndexFloat_222_impl);
    auto getIndexFloat_222 = &getIndexFloat_222_impl;
    USE(getIndexFloat_222);
    *getIndexFloat_222 = implicit_cast<TNode<Float64T>>(t1156);
    // ../../src/builtins/data-view.tq:413:5
    TNode<UintPtrT> t1157 = UncheckedCast<UintPtrT>(Convert9ATuintptr(implicit_cast<TNode<Float64T>>((*getIndexFloat_222).value())));
    USE(implicit_cast<TNode<UintPtrT>>(t1157));
    TVARIABLE(UintPtrT, getIndexWord_223_impl);
    auto getIndexWord_223 = &getIndexWord_223_impl;
    USE(getIndexWord_223);
    *getIndexWord_223 = implicit_cast<TNode<UintPtrT>>(t1157);
    // ../../src/builtins/data-view.tq:415:5
    TNode<UintPtrT> t1158 = UncheckedCast<UintPtrT>(LoadJSArrayBufferViewByteOffset(implicit_cast<TNode<JSArrayBufferView>>((*dataView_218).value())));
    TVARIABLE(UintPtrT, viewOffsetWord_224_impl);
    auto viewOffsetWord_224 = &viewOffsetWord_224_impl;
    USE(viewOffsetWord_224);
    *viewOffsetWord_224 = implicit_cast<TNode<UintPtrT>>(t1158);
    // ../../src/builtins/data-view.tq:416:5
    TNode<UintPtrT> t1159 = UncheckedCast<UintPtrT>(LoadJSArrayBufferViewByteLength(implicit_cast<TNode<JSArrayBufferView>>((*dataView_218).value())));
    TNode<Float64T> t1160 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<TNode<UintPtrT>>(t1159)));
    USE(implicit_cast<TNode<Float64T>>(t1160));
    TVARIABLE(Float64T, viewSizeFloat_225_impl);
    auto viewSizeFloat_225 = &viewSizeFloat_225_impl;
    USE(viewSizeFloat_225);
    *viewSizeFloat_225 = implicit_cast<TNode<Float64T>>(t1160);
    // ../../src/builtins/data-view.tq:417:5
    int31_t t1161 = DataViewElementSize(implicit_cast<ElementsKind>(p_kind));
    USE(implicit_cast<int31_t>(t1161));
    TNode<Float64T> t1162 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<int31_t>(t1161)));
    USE(implicit_cast<TNode<Float64T>>(t1162));
    TVARIABLE(Float64T, elementSizeFloat_226_impl);
    auto elementSizeFloat_226 = &elementSizeFloat_226_impl;
    USE(elementSizeFloat_226);
    *elementSizeFloat_226 = implicit_cast<TNode<Float64T>>(t1162);
    // ../../src/builtins/data-view.tq:419:5
    {
      Label label__True_365_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_365 = &label__True_365_impl;
      USE(label__True_365);
      Label label__False_366_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_366 = &label__False_366_impl;
      USE(label__False_366);
      TNode<Float64T> t1163 = UncheckedCast<Float64T>(Float64Add(implicit_cast<TNode<Float64T>>((*getIndexFloat_222).value()), implicit_cast<TNode<Float64T>>((*elementSizeFloat_226).value())));
      USE(implicit_cast<TNode<Float64T>>(t1163));
      TNode<BoolT> t1164 = UncheckedCast<BoolT>(Float64GreaterThan(implicit_cast<TNode<Float64T>>(t1163), implicit_cast<TNode<Float64T>>((*viewSizeFloat_225).value())));
      USE(implicit_cast<TNode<BoolT>>(t1164));
      Branch(implicit_cast<TNode<BoolT>>(t1164), label__True_365, label__False_366);
      if (label__True_365->is_used())
      {
        BIND(label__True_365);
        // ../../src/builtins/data-view.tq:419:59
        {
          // ../../src/builtins/data-view.tq:420:7
          ThrowRangeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kInvalidDataViewAccessorOffset));
        }
      }
      BIND(label__False_366);
    }
    // ../../src/builtins/data-view.tq:423:5
    TNode<UintPtrT> t1165 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>((*getIndexWord_223).value()), implicit_cast<TNode<UintPtrT>>((*viewOffsetWord_224).value())));
    USE(implicit_cast<TNode<UintPtrT>>(t1165));
    TVARIABLE(UintPtrT, bufferIndex_227_impl);
    auto bufferIndex_227 = &bufferIndex_227_impl;
    USE(bufferIndex_227);
    *bufferIndex_227 = implicit_cast<TNode<UintPtrT>>(t1165);
    // ../../src/builtins/data-view.tq:425:5
    {
      bool t1166 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT8_ELEMENTS));
      USE(implicit_cast<bool>(t1166));
      if ((implicit_cast<bool>(t1166))) {
        // ../../src/builtins/data-view.tq:425:43
        {
          // ../../src/builtins/data-view.tq:426:7
          TNode<Smi> t1167 = UncheckedCast<Smi>(LoadDataView8(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<bool>(false)));
          USE(implicit_cast<TNode<Smi>>(t1167));
          *_return_217 = implicit_cast<TNode<Numeric>>(t1167);
          Goto(label_macro_end_1452);
        }
      } else {
        // ../../src/builtins/data-view.tq:427:12
        {
          bool t1168 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT8_ELEMENTS));
          USE(implicit_cast<bool>(t1168));
          if ((implicit_cast<bool>(t1168))) {
            // ../../src/builtins/data-view.tq:427:49
            {
              // ../../src/builtins/data-view.tq:428:7
              TNode<Smi> t1169 = UncheckedCast<Smi>(LoadDataView8(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<bool>(true)));
              USE(implicit_cast<TNode<Smi>>(t1169));
              *_return_217 = implicit_cast<TNode<Numeric>>(t1169);
              Goto(label_macro_end_1452);
            }
          } else {
            // ../../src/builtins/data-view.tq:429:12
            {
              bool t1170 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT16_ELEMENTS));
              USE(implicit_cast<bool>(t1170));
              if ((implicit_cast<bool>(t1170))) {
                // ../../src/builtins/data-view.tq:429:51
                {
                  // ../../src/builtins/data-view.tq:430:7
                  TNode<Number> t1171 = UncheckedCast<Number>(LoadDataView16(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<bool>(false)));
                  USE(implicit_cast<TNode<Number>>(t1171));
                  *_return_217 = implicit_cast<TNode<Numeric>>(t1171);
                  Goto(label_macro_end_1452);
                }
              } else {
                // ../../src/builtins/data-view.tq:431:12
                {
                  bool t1172 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT16_ELEMENTS));
                  USE(implicit_cast<bool>(t1172));
                  if ((implicit_cast<bool>(t1172))) {
                    // ../../src/builtins/data-view.tq:431:50
                    {
                      // ../../src/builtins/data-view.tq:432:7
                      TNode<Number> t1173 = UncheckedCast<Number>(LoadDataView16(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<bool>(true)));
                      USE(implicit_cast<TNode<Number>>(t1173));
                      *_return_217 = implicit_cast<TNode<Numeric>>(t1173);
                      Goto(label_macro_end_1452);
                    }
                  } else {
                    // ../../src/builtins/data-view.tq:433:12
                    {
                      bool t1174 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT32_ELEMENTS));
                      USE(implicit_cast<bool>(t1174));
                      if ((implicit_cast<bool>(t1174))) {
                        // ../../src/builtins/data-view.tq:433:51
                        {
                          // ../../src/builtins/data-view.tq:434:7
                          TNode<Number> t1175 = UncheckedCast<Number>(LoadDataView32(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<ElementsKind>(p_kind)));
                          USE(implicit_cast<TNode<Number>>(t1175));
                          *_return_217 = implicit_cast<TNode<Numeric>>(t1175);
                          Goto(label_macro_end_1452);
                        }
                      } else {
                        // ../../src/builtins/data-view.tq:435:12
                        {
                          bool t1176 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT32_ELEMENTS));
                          USE(implicit_cast<bool>(t1176));
                          if ((implicit_cast<bool>(t1176))) {
                            // ../../src/builtins/data-view.tq:435:50
                            {
                              // ../../src/builtins/data-view.tq:436:7
                              TNode<Number> t1177 = UncheckedCast<Number>(LoadDataView32(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<ElementsKind>(p_kind)));
                              USE(implicit_cast<TNode<Number>>(t1177));
                              *_return_217 = implicit_cast<TNode<Numeric>>(t1177);
                              Goto(label_macro_end_1452);
                            }
                          } else {
                            // ../../src/builtins/data-view.tq:437:12
                            {
                              bool t1178 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS));
                              USE(implicit_cast<bool>(t1178));
                              if ((implicit_cast<bool>(t1178))) {
                                // ../../src/builtins/data-view.tq:437:52
                                {
                                  // ../../src/builtins/data-view.tq:438:7
                                  TNode<Number> t1179 = UncheckedCast<Number>(LoadDataView32(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<ElementsKind>(p_kind)));
                                  USE(implicit_cast<TNode<Number>>(t1179));
                                  *_return_217 = implicit_cast<TNode<Numeric>>(t1179);
                                  Goto(label_macro_end_1452);
                                }
                              } else {
                                // ../../src/builtins/data-view.tq:439:12
                                {
                                  bool t1180 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT64_ELEMENTS));
                                  USE(implicit_cast<bool>(t1180));
                                  if ((implicit_cast<bool>(t1180))) {
                                    // ../../src/builtins/data-view.tq:439:52
                                    {
                                      // ../../src/builtins/data-view.tq:440:7
                                      TNode<Number> t1181 = UncheckedCast<Number>(LoadDataViewFloat64(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value())));
                                      USE(implicit_cast<TNode<Number>>(t1181));
                                      *_return_217 = implicit_cast<TNode<Numeric>>(t1181);
                                      Goto(label_macro_end_1452);
                                    }
                                  } else {
                                    // ../../src/builtins/data-view.tq:441:12
                                    {
                                      bool t1182 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS));
                                      USE(implicit_cast<bool>(t1182));
                                      if ((implicit_cast<bool>(t1182))) {
                                        // ../../src/builtins/data-view.tq:441:54
                                        {
                                          // ../../src/builtins/data-view.tq:442:7
                                          TNode<BigInt> t1183 = UncheckedCast<BigInt>(LoadDataViewBigInt(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<bool>(false)));
                                          USE(implicit_cast<TNode<BigInt>>(t1183));
                                          *_return_217 = implicit_cast<TNode<Numeric>>(t1183);
                                          Goto(label_macro_end_1452);
                                        }
                                      } else {
                                        // ../../src/builtins/data-view.tq:443:12
                                        {
                                          bool t1184 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS));
                                          USE(implicit_cast<bool>(t1184));
                                          if ((implicit_cast<bool>(t1184))) {
                                            // ../../src/builtins/data-view.tq:443:53
                                            {
                                              // ../../src/builtins/data-view.tq:444:7
                                              TNode<BigInt> t1185 = UncheckedCast<BigInt>(LoadDataViewBigInt(implicit_cast<TNode<JSArrayBuffer>>((*buffer_221).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_227).value()), implicit_cast<TNode<BoolT>>((*littleEndian_220).value()), implicit_cast<bool>(true)));
                                              USE(implicit_cast<TNode<BigInt>>(t1185));
                                              *_return_217 = implicit_cast<TNode<Numeric>>(t1185);
                                              Goto(label_macro_end_1452);
                                            }
                                          } else {
                                            // ../../src/builtins/data-view.tq:445:12
                                            {
                                              // ../../src/builtins/data-view.tq:446:7
                                              Unreachable();
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  BIND(label_macro_end_1452);
  return implicit_cast<TNode<Numeric>>((*_return_217).value());
}

TF_BUILTIN(DataViewPrototypeGetUint8, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:451:65
  {
    // ../../src/builtins/data-view.tq:452:5
    auto t1186 = [=]() {
      int31_t t1188 = 0;
      TNode<IntPtrT> t1189 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1188)));
      TNode<Object> t1190 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1189)));
      return implicit_cast<TNode<Object>>(t1190);
    };
    auto t1187 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1191_805_impl);
    auto t1191_805 = &t1191_805_impl;
    USE(t1191_805);
    {
      Label label__True_387_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_387 = &label__True_387_impl;
      USE(label__True_387);
      Label label__False_388_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_388 = &label__False_388_impl;
      USE(label__False_388);
      Label label__done_806_1455_impl(this, {t1191_805}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_806_1455 = &label__done_806_1455_impl;
      USE(label__done_806_1455);
      TNode<IntPtrT> t1192 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1193 = 0;
      TNode<IntPtrT> t1194 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1193)));
      TNode<BoolT> t1195 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1192), implicit_cast<TNode<IntPtrT>>(t1194)));
      USE(implicit_cast<TNode<BoolT>>(t1195));
      Branch(implicit_cast<TNode<BoolT>>(t1195), label__True_387, label__False_388);
      BIND(label__True_387);
            *t1191_805 = implicit_cast<TNode<Object>>(t1186());
      Goto(label__done_806_1455);
      BIND(label__False_388);
            *t1191_805 = implicit_cast<TNode<Object>>(t1187());
      Goto(label__done_806_1455);
      BIND(label__done_806_1455);
    }
    TVARIABLE(Object, offset_228_impl);
    auto offset_228 = &offset_228_impl;
    USE(offset_228);
    *offset_228 = implicit_cast<TNode<Object>>((*t1191_805).value());
    // ../../src/builtins/data-view.tq:453:5
    TNode<Numeric> t1196 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_228).value()), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<ElementsKind>(UINT8_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1196));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1196));
  }
}

TF_BUILTIN(DataViewPrototypeGetInt8, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:457:65
  {
    // ../../src/builtins/data-view.tq:458:5
    auto t1197 = [=]() {
      int31_t t1199 = 0;
      TNode<IntPtrT> t1200 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1199)));
      TNode<Object> t1201 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1200)));
      return implicit_cast<TNode<Object>>(t1201);
    };
    auto t1198 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1202_807_impl);
    auto t1202_807 = &t1202_807_impl;
    USE(t1202_807);
    {
      Label label__True_389_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_389 = &label__True_389_impl;
      USE(label__True_389);
      Label label__False_390_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_390 = &label__False_390_impl;
      USE(label__False_390);
      Label label__done_808_1456_impl(this, {t1202_807}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_808_1456 = &label__done_808_1456_impl;
      USE(label__done_808_1456);
      TNode<IntPtrT> t1203 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1204 = 0;
      TNode<IntPtrT> t1205 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1204)));
      TNode<BoolT> t1206 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1203), implicit_cast<TNode<IntPtrT>>(t1205)));
      USE(implicit_cast<TNode<BoolT>>(t1206));
      Branch(implicit_cast<TNode<BoolT>>(t1206), label__True_389, label__False_390);
      BIND(label__True_389);
            *t1202_807 = implicit_cast<TNode<Object>>(t1197());
      Goto(label__done_808_1456);
      BIND(label__False_390);
            *t1202_807 = implicit_cast<TNode<Object>>(t1198());
      Goto(label__done_808_1456);
      BIND(label__done_808_1456);
    }
    TVARIABLE(Object, offset_229_impl);
    auto offset_229 = &offset_229_impl;
    USE(offset_229);
    *offset_229 = implicit_cast<TNode<Object>>((*t1202_807).value());
    // ../../src/builtins/data-view.tq:459:5
    TNode<Numeric> t1207 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_229).value()), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<ElementsKind>(INT8_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1207));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1207));
  }
}

TF_BUILTIN(DataViewPrototypeGetUint16, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:463:65
  {
    // ../../src/builtins/data-view.tq:464:5
    auto t1208 = [=]() {
      int31_t t1210 = 0;
      TNode<IntPtrT> t1211 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1210)));
      TNode<Object> t1212 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1211)));
      return implicit_cast<TNode<Object>>(t1212);
    };
    auto t1209 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1213_809_impl);
    auto t1213_809 = &t1213_809_impl;
    USE(t1213_809);
    {
      Label label__True_391_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_391 = &label__True_391_impl;
      USE(label__True_391);
      Label label__False_392_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_392 = &label__False_392_impl;
      USE(label__False_392);
      Label label__done_810_1457_impl(this, {t1213_809}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_810_1457 = &label__done_810_1457_impl;
      USE(label__done_810_1457);
      TNode<IntPtrT> t1214 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1215 = 0;
      TNode<IntPtrT> t1216 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1215)));
      TNode<BoolT> t1217 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1214), implicit_cast<TNode<IntPtrT>>(t1216)));
      USE(implicit_cast<TNode<BoolT>>(t1217));
      Branch(implicit_cast<TNode<BoolT>>(t1217), label__True_391, label__False_392);
      BIND(label__True_391);
            *t1213_809 = implicit_cast<TNode<Object>>(t1208());
      Goto(label__done_810_1457);
      BIND(label__False_392);
            *t1213_809 = implicit_cast<TNode<Object>>(t1209());
      Goto(label__done_810_1457);
      BIND(label__done_810_1457);
    }
    TVARIABLE(Object, offset_230_impl);
    auto offset_230 = &offset_230_impl;
    USE(offset_230);
    *offset_230 = implicit_cast<TNode<Object>>((*t1213_809).value());
    // ../../src/builtins/data-view.tq:465:5
    auto t1218 = [=]() {
      int31_t t1220 = 1;
      TNode<IntPtrT> t1221 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1220)));
      TNode<Object> t1222 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1221)));
      return implicit_cast<TNode<Object>>(t1222);
    };
    auto t1219 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1223_811_impl);
    auto t1223_811 = &t1223_811_impl;
    USE(t1223_811);
    {
      Label label__True_393_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_393 = &label__True_393_impl;
      USE(label__True_393);
      Label label__False_394_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_394 = &label__False_394_impl;
      USE(label__False_394);
      Label label__done_812_1458_impl(this, {t1223_811}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_812_1458 = &label__done_812_1458_impl;
      USE(label__done_812_1458);
      TNode<IntPtrT> t1224 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1225 = 1;
      TNode<IntPtrT> t1226 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1225)));
      TNode<BoolT> t1227 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1224), implicit_cast<TNode<IntPtrT>>(t1226)));
      USE(implicit_cast<TNode<BoolT>>(t1227));
      Branch(implicit_cast<TNode<BoolT>>(t1227), label__True_393, label__False_394);
      BIND(label__True_393);
            *t1223_811 = implicit_cast<TNode<Object>>(t1218());
      Goto(label__done_812_1458);
      BIND(label__False_394);
            *t1223_811 = implicit_cast<TNode<Object>>(t1219());
      Goto(label__done_812_1458);
      BIND(label__done_812_1458);
    }
    TVARIABLE(Object, isLittleEndian_231_impl);
    auto isLittleEndian_231 = &isLittleEndian_231_impl;
    USE(isLittleEndian_231);
    *isLittleEndian_231 = implicit_cast<TNode<Object>>((*t1223_811).value());
    // ../../src/builtins/data-view.tq:467:5
    TNode<Numeric> t1228 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_230).value()), implicit_cast<TNode<Object>>((*isLittleEndian_231).value()), implicit_cast<ElementsKind>(UINT16_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1228));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1228));
  }
}

TF_BUILTIN(DataViewPrototypeGetInt16, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:472:65
  {
    // ../../src/builtins/data-view.tq:473:5
    auto t1229 = [=]() {
      int31_t t1231 = 0;
      TNode<IntPtrT> t1232 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1231)));
      TNode<Object> t1233 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1232)));
      return implicit_cast<TNode<Object>>(t1233);
    };
    auto t1230 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1234_813_impl);
    auto t1234_813 = &t1234_813_impl;
    USE(t1234_813);
    {
      Label label__True_395_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_395 = &label__True_395_impl;
      USE(label__True_395);
      Label label__False_396_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_396 = &label__False_396_impl;
      USE(label__False_396);
      Label label__done_814_1459_impl(this, {t1234_813}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_814_1459 = &label__done_814_1459_impl;
      USE(label__done_814_1459);
      TNode<IntPtrT> t1235 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1236 = 0;
      TNode<IntPtrT> t1237 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1236)));
      TNode<BoolT> t1238 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1235), implicit_cast<TNode<IntPtrT>>(t1237)));
      USE(implicit_cast<TNode<BoolT>>(t1238));
      Branch(implicit_cast<TNode<BoolT>>(t1238), label__True_395, label__False_396);
      BIND(label__True_395);
            *t1234_813 = implicit_cast<TNode<Object>>(t1229());
      Goto(label__done_814_1459);
      BIND(label__False_396);
            *t1234_813 = implicit_cast<TNode<Object>>(t1230());
      Goto(label__done_814_1459);
      BIND(label__done_814_1459);
    }
    TVARIABLE(Object, offset_232_impl);
    auto offset_232 = &offset_232_impl;
    USE(offset_232);
    *offset_232 = implicit_cast<TNode<Object>>((*t1234_813).value());
    // ../../src/builtins/data-view.tq:474:5
    auto t1239 = [=]() {
      int31_t t1241 = 1;
      TNode<IntPtrT> t1242 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1241)));
      TNode<Object> t1243 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1242)));
      return implicit_cast<TNode<Object>>(t1243);
    };
    auto t1240 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1244_815_impl);
    auto t1244_815 = &t1244_815_impl;
    USE(t1244_815);
    {
      Label label__True_397_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_397 = &label__True_397_impl;
      USE(label__True_397);
      Label label__False_398_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_398 = &label__False_398_impl;
      USE(label__False_398);
      Label label__done_816_1460_impl(this, {t1244_815}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_816_1460 = &label__done_816_1460_impl;
      USE(label__done_816_1460);
      TNode<IntPtrT> t1245 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1246 = 1;
      TNode<IntPtrT> t1247 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1246)));
      TNode<BoolT> t1248 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1245), implicit_cast<TNode<IntPtrT>>(t1247)));
      USE(implicit_cast<TNode<BoolT>>(t1248));
      Branch(implicit_cast<TNode<BoolT>>(t1248), label__True_397, label__False_398);
      BIND(label__True_397);
            *t1244_815 = implicit_cast<TNode<Object>>(t1239());
      Goto(label__done_816_1460);
      BIND(label__False_398);
            *t1244_815 = implicit_cast<TNode<Object>>(t1240());
      Goto(label__done_816_1460);
      BIND(label__done_816_1460);
    }
    TVARIABLE(Object, isLittleEndian_233_impl);
    auto isLittleEndian_233 = &isLittleEndian_233_impl;
    USE(isLittleEndian_233);
    *isLittleEndian_233 = implicit_cast<TNode<Object>>((*t1244_815).value());
    // ../../src/builtins/data-view.tq:476:5
    TNode<Numeric> t1249 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_232).value()), implicit_cast<TNode<Object>>((*isLittleEndian_233).value()), implicit_cast<ElementsKind>(INT16_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1249));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1249));
  }
}

TF_BUILTIN(DataViewPrototypeGetUint32, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:481:65
  {
    // ../../src/builtins/data-view.tq:482:5
    auto t1250 = [=]() {
      int31_t t1252 = 0;
      TNode<IntPtrT> t1253 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1252)));
      TNode<Object> t1254 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1253)));
      return implicit_cast<TNode<Object>>(t1254);
    };
    auto t1251 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1255_817_impl);
    auto t1255_817 = &t1255_817_impl;
    USE(t1255_817);
    {
      Label label__True_399_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_399 = &label__True_399_impl;
      USE(label__True_399);
      Label label__False_400_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_400 = &label__False_400_impl;
      USE(label__False_400);
      Label label__done_818_1461_impl(this, {t1255_817}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_818_1461 = &label__done_818_1461_impl;
      USE(label__done_818_1461);
      TNode<IntPtrT> t1256 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1257 = 0;
      TNode<IntPtrT> t1258 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1257)));
      TNode<BoolT> t1259 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1256), implicit_cast<TNode<IntPtrT>>(t1258)));
      USE(implicit_cast<TNode<BoolT>>(t1259));
      Branch(implicit_cast<TNode<BoolT>>(t1259), label__True_399, label__False_400);
      BIND(label__True_399);
            *t1255_817 = implicit_cast<TNode<Object>>(t1250());
      Goto(label__done_818_1461);
      BIND(label__False_400);
            *t1255_817 = implicit_cast<TNode<Object>>(t1251());
      Goto(label__done_818_1461);
      BIND(label__done_818_1461);
    }
    TVARIABLE(Object, offset_234_impl);
    auto offset_234 = &offset_234_impl;
    USE(offset_234);
    *offset_234 = implicit_cast<TNode<Object>>((*t1255_817).value());
    // ../../src/builtins/data-view.tq:483:5
    auto t1260 = [=]() {
      int31_t t1262 = 1;
      TNode<IntPtrT> t1263 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1262)));
      TNode<Object> t1264 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1263)));
      return implicit_cast<TNode<Object>>(t1264);
    };
    auto t1261 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1265_819_impl);
    auto t1265_819 = &t1265_819_impl;
    USE(t1265_819);
    {
      Label label__True_401_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_401 = &label__True_401_impl;
      USE(label__True_401);
      Label label__False_402_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_402 = &label__False_402_impl;
      USE(label__False_402);
      Label label__done_820_1462_impl(this, {t1265_819}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_820_1462 = &label__done_820_1462_impl;
      USE(label__done_820_1462);
      TNode<IntPtrT> t1266 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1267 = 1;
      TNode<IntPtrT> t1268 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1267)));
      TNode<BoolT> t1269 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1266), implicit_cast<TNode<IntPtrT>>(t1268)));
      USE(implicit_cast<TNode<BoolT>>(t1269));
      Branch(implicit_cast<TNode<BoolT>>(t1269), label__True_401, label__False_402);
      BIND(label__True_401);
            *t1265_819 = implicit_cast<TNode<Object>>(t1260());
      Goto(label__done_820_1462);
      BIND(label__False_402);
            *t1265_819 = implicit_cast<TNode<Object>>(t1261());
      Goto(label__done_820_1462);
      BIND(label__done_820_1462);
    }
    TVARIABLE(Object, isLittleEndian_235_impl);
    auto isLittleEndian_235 = &isLittleEndian_235_impl;
    USE(isLittleEndian_235);
    *isLittleEndian_235 = implicit_cast<TNode<Object>>((*t1265_819).value());
    // ../../src/builtins/data-view.tq:485:5
    TNode<Numeric> t1270 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_234).value()), implicit_cast<TNode<Object>>((*isLittleEndian_235).value()), implicit_cast<ElementsKind>(UINT32_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1270));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1270));
  }
}

TF_BUILTIN(DataViewPrototypeGetInt32, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:490:65
  {
    // ../../src/builtins/data-view.tq:491:5
    auto t1271 = [=]() {
      int31_t t1273 = 0;
      TNode<IntPtrT> t1274 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1273)));
      TNode<Object> t1275 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1274)));
      return implicit_cast<TNode<Object>>(t1275);
    };
    auto t1272 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1276_821_impl);
    auto t1276_821 = &t1276_821_impl;
    USE(t1276_821);
    {
      Label label__True_403_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_403 = &label__True_403_impl;
      USE(label__True_403);
      Label label__False_404_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_404 = &label__False_404_impl;
      USE(label__False_404);
      Label label__done_822_1463_impl(this, {t1276_821}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_822_1463 = &label__done_822_1463_impl;
      USE(label__done_822_1463);
      TNode<IntPtrT> t1277 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1278 = 0;
      TNode<IntPtrT> t1279 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1278)));
      TNode<BoolT> t1280 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1277), implicit_cast<TNode<IntPtrT>>(t1279)));
      USE(implicit_cast<TNode<BoolT>>(t1280));
      Branch(implicit_cast<TNode<BoolT>>(t1280), label__True_403, label__False_404);
      BIND(label__True_403);
            *t1276_821 = implicit_cast<TNode<Object>>(t1271());
      Goto(label__done_822_1463);
      BIND(label__False_404);
            *t1276_821 = implicit_cast<TNode<Object>>(t1272());
      Goto(label__done_822_1463);
      BIND(label__done_822_1463);
    }
    TVARIABLE(Object, offset_236_impl);
    auto offset_236 = &offset_236_impl;
    USE(offset_236);
    *offset_236 = implicit_cast<TNode<Object>>((*t1276_821).value());
    // ../../src/builtins/data-view.tq:492:5
    auto t1281 = [=]() {
      int31_t t1283 = 1;
      TNode<IntPtrT> t1284 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1283)));
      TNode<Object> t1285 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1284)));
      return implicit_cast<TNode<Object>>(t1285);
    };
    auto t1282 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1286_823_impl);
    auto t1286_823 = &t1286_823_impl;
    USE(t1286_823);
    {
      Label label__True_405_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_405 = &label__True_405_impl;
      USE(label__True_405);
      Label label__False_406_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_406 = &label__False_406_impl;
      USE(label__False_406);
      Label label__done_824_1464_impl(this, {t1286_823}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_824_1464 = &label__done_824_1464_impl;
      USE(label__done_824_1464);
      TNode<IntPtrT> t1287 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1288 = 1;
      TNode<IntPtrT> t1289 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1288)));
      TNode<BoolT> t1290 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1287), implicit_cast<TNode<IntPtrT>>(t1289)));
      USE(implicit_cast<TNode<BoolT>>(t1290));
      Branch(implicit_cast<TNode<BoolT>>(t1290), label__True_405, label__False_406);
      BIND(label__True_405);
            *t1286_823 = implicit_cast<TNode<Object>>(t1281());
      Goto(label__done_824_1464);
      BIND(label__False_406);
            *t1286_823 = implicit_cast<TNode<Object>>(t1282());
      Goto(label__done_824_1464);
      BIND(label__done_824_1464);
    }
    TVARIABLE(Object, isLittleEndian_237_impl);
    auto isLittleEndian_237 = &isLittleEndian_237_impl;
    USE(isLittleEndian_237);
    *isLittleEndian_237 = implicit_cast<TNode<Object>>((*t1286_823).value());
    // ../../src/builtins/data-view.tq:494:5
    TNode<Numeric> t1291 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_236).value()), implicit_cast<TNode<Object>>((*isLittleEndian_237).value()), implicit_cast<ElementsKind>(INT32_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1291));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1291));
  }
}

TF_BUILTIN(DataViewPrototypeGetFloat32, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:499:65
  {
    // ../../src/builtins/data-view.tq:500:5
    auto t1292 = [=]() {
      int31_t t1294 = 0;
      TNode<IntPtrT> t1295 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1294)));
      TNode<Object> t1296 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1295)));
      return implicit_cast<TNode<Object>>(t1296);
    };
    auto t1293 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1297_825_impl);
    auto t1297_825 = &t1297_825_impl;
    USE(t1297_825);
    {
      Label label__True_407_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_407 = &label__True_407_impl;
      USE(label__True_407);
      Label label__False_408_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_408 = &label__False_408_impl;
      USE(label__False_408);
      Label label__done_826_1465_impl(this, {t1297_825}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_826_1465 = &label__done_826_1465_impl;
      USE(label__done_826_1465);
      TNode<IntPtrT> t1298 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1299 = 0;
      TNode<IntPtrT> t1300 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1299)));
      TNode<BoolT> t1301 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1298), implicit_cast<TNode<IntPtrT>>(t1300)));
      USE(implicit_cast<TNode<BoolT>>(t1301));
      Branch(implicit_cast<TNode<BoolT>>(t1301), label__True_407, label__False_408);
      BIND(label__True_407);
            *t1297_825 = implicit_cast<TNode<Object>>(t1292());
      Goto(label__done_826_1465);
      BIND(label__False_408);
            *t1297_825 = implicit_cast<TNode<Object>>(t1293());
      Goto(label__done_826_1465);
      BIND(label__done_826_1465);
    }
    TVARIABLE(Object, offset_238_impl);
    auto offset_238 = &offset_238_impl;
    USE(offset_238);
    *offset_238 = implicit_cast<TNode<Object>>((*t1297_825).value());
    // ../../src/builtins/data-view.tq:501:5
    auto t1302 = [=]() {
      int31_t t1304 = 1;
      TNode<IntPtrT> t1305 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1304)));
      TNode<Object> t1306 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1305)));
      return implicit_cast<TNode<Object>>(t1306);
    };
    auto t1303 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1307_827_impl);
    auto t1307_827 = &t1307_827_impl;
    USE(t1307_827);
    {
      Label label__True_409_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_409 = &label__True_409_impl;
      USE(label__True_409);
      Label label__False_410_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_410 = &label__False_410_impl;
      USE(label__False_410);
      Label label__done_828_1466_impl(this, {t1307_827}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_828_1466 = &label__done_828_1466_impl;
      USE(label__done_828_1466);
      TNode<IntPtrT> t1308 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1309 = 1;
      TNode<IntPtrT> t1310 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1309)));
      TNode<BoolT> t1311 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1308), implicit_cast<TNode<IntPtrT>>(t1310)));
      USE(implicit_cast<TNode<BoolT>>(t1311));
      Branch(implicit_cast<TNode<BoolT>>(t1311), label__True_409, label__False_410);
      BIND(label__True_409);
            *t1307_827 = implicit_cast<TNode<Object>>(t1302());
      Goto(label__done_828_1466);
      BIND(label__False_410);
            *t1307_827 = implicit_cast<TNode<Object>>(t1303());
      Goto(label__done_828_1466);
      BIND(label__done_828_1466);
    }
    TVARIABLE(Object, isLittleEndian_239_impl);
    auto isLittleEndian_239 = &isLittleEndian_239_impl;
    USE(isLittleEndian_239);
    *isLittleEndian_239 = implicit_cast<TNode<Object>>((*t1307_827).value());
    // ../../src/builtins/data-view.tq:503:5
    TNode<Numeric> t1312 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_238).value()), implicit_cast<TNode<Object>>((*isLittleEndian_239).value()), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1312));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1312));
  }
}

TF_BUILTIN(DataViewPrototypeGetFloat64, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:508:65
  {
    // ../../src/builtins/data-view.tq:509:5
    auto t1313 = [=]() {
      int31_t t1315 = 0;
      TNode<IntPtrT> t1316 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1315)));
      TNode<Object> t1317 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1316)));
      return implicit_cast<TNode<Object>>(t1317);
    };
    auto t1314 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1318_829_impl);
    auto t1318_829 = &t1318_829_impl;
    USE(t1318_829);
    {
      Label label__True_411_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_411 = &label__True_411_impl;
      USE(label__True_411);
      Label label__False_412_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_412 = &label__False_412_impl;
      USE(label__False_412);
      Label label__done_830_1467_impl(this, {t1318_829}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_830_1467 = &label__done_830_1467_impl;
      USE(label__done_830_1467);
      TNode<IntPtrT> t1319 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1320 = 0;
      TNode<IntPtrT> t1321 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1320)));
      TNode<BoolT> t1322 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1319), implicit_cast<TNode<IntPtrT>>(t1321)));
      USE(implicit_cast<TNode<BoolT>>(t1322));
      Branch(implicit_cast<TNode<BoolT>>(t1322), label__True_411, label__False_412);
      BIND(label__True_411);
            *t1318_829 = implicit_cast<TNode<Object>>(t1313());
      Goto(label__done_830_1467);
      BIND(label__False_412);
            *t1318_829 = implicit_cast<TNode<Object>>(t1314());
      Goto(label__done_830_1467);
      BIND(label__done_830_1467);
    }
    TVARIABLE(Object, offset_240_impl);
    auto offset_240 = &offset_240_impl;
    USE(offset_240);
    *offset_240 = implicit_cast<TNode<Object>>((*t1318_829).value());
    // ../../src/builtins/data-view.tq:510:5
    auto t1323 = [=]() {
      int31_t t1325 = 1;
      TNode<IntPtrT> t1326 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1325)));
      TNode<Object> t1327 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1326)));
      return implicit_cast<TNode<Object>>(t1327);
    };
    auto t1324 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1328_831_impl);
    auto t1328_831 = &t1328_831_impl;
    USE(t1328_831);
    {
      Label label__True_413_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_413 = &label__True_413_impl;
      USE(label__True_413);
      Label label__False_414_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_414 = &label__False_414_impl;
      USE(label__False_414);
      Label label__done_832_1468_impl(this, {t1328_831}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_832_1468 = &label__done_832_1468_impl;
      USE(label__done_832_1468);
      TNode<IntPtrT> t1329 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1330 = 1;
      TNode<IntPtrT> t1331 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1330)));
      TNode<BoolT> t1332 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1329), implicit_cast<TNode<IntPtrT>>(t1331)));
      USE(implicit_cast<TNode<BoolT>>(t1332));
      Branch(implicit_cast<TNode<BoolT>>(t1332), label__True_413, label__False_414);
      BIND(label__True_413);
            *t1328_831 = implicit_cast<TNode<Object>>(t1323());
      Goto(label__done_832_1468);
      BIND(label__False_414);
            *t1328_831 = implicit_cast<TNode<Object>>(t1324());
      Goto(label__done_832_1468);
      BIND(label__done_832_1468);
    }
    TVARIABLE(Object, isLittleEndian_241_impl);
    auto isLittleEndian_241 = &isLittleEndian_241_impl;
    USE(isLittleEndian_241);
    *isLittleEndian_241 = implicit_cast<TNode<Object>>((*t1328_831).value());
    // ../../src/builtins/data-view.tq:512:5
    TNode<Numeric> t1333 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_240).value()), implicit_cast<TNode<Object>>((*isLittleEndian_241).value()), implicit_cast<ElementsKind>(FLOAT64_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1333));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1333));
  }
}

TF_BUILTIN(DataViewPrototypeGetBigUint64, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:517:65
  {
    // ../../src/builtins/data-view.tq:518:5
    auto t1334 = [=]() {
      int31_t t1336 = 0;
      TNode<IntPtrT> t1337 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1336)));
      TNode<Object> t1338 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1337)));
      return implicit_cast<TNode<Object>>(t1338);
    };
    auto t1335 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1339_833_impl);
    auto t1339_833 = &t1339_833_impl;
    USE(t1339_833);
    {
      Label label__True_415_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_415 = &label__True_415_impl;
      USE(label__True_415);
      Label label__False_416_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_416 = &label__False_416_impl;
      USE(label__False_416);
      Label label__done_834_1469_impl(this, {t1339_833}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_834_1469 = &label__done_834_1469_impl;
      USE(label__done_834_1469);
      TNode<IntPtrT> t1340 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1341 = 0;
      TNode<IntPtrT> t1342 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1341)));
      TNode<BoolT> t1343 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1340), implicit_cast<TNode<IntPtrT>>(t1342)));
      USE(implicit_cast<TNode<BoolT>>(t1343));
      Branch(implicit_cast<TNode<BoolT>>(t1343), label__True_415, label__False_416);
      BIND(label__True_415);
            *t1339_833 = implicit_cast<TNode<Object>>(t1334());
      Goto(label__done_834_1469);
      BIND(label__False_416);
            *t1339_833 = implicit_cast<TNode<Object>>(t1335());
      Goto(label__done_834_1469);
      BIND(label__done_834_1469);
    }
    TVARIABLE(Object, offset_242_impl);
    auto offset_242 = &offset_242_impl;
    USE(offset_242);
    *offset_242 = implicit_cast<TNode<Object>>((*t1339_833).value());
    // ../../src/builtins/data-view.tq:519:5
    auto t1344 = [=]() {
      int31_t t1346 = 1;
      TNode<IntPtrT> t1347 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1346)));
      TNode<Object> t1348 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1347)));
      return implicit_cast<TNode<Object>>(t1348);
    };
    auto t1345 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1349_835_impl);
    auto t1349_835 = &t1349_835_impl;
    USE(t1349_835);
    {
      Label label__True_417_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_417 = &label__True_417_impl;
      USE(label__True_417);
      Label label__False_418_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_418 = &label__False_418_impl;
      USE(label__False_418);
      Label label__done_836_1470_impl(this, {t1349_835}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_836_1470 = &label__done_836_1470_impl;
      USE(label__done_836_1470);
      TNode<IntPtrT> t1350 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1351 = 1;
      TNode<IntPtrT> t1352 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1351)));
      TNode<BoolT> t1353 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1350), implicit_cast<TNode<IntPtrT>>(t1352)));
      USE(implicit_cast<TNode<BoolT>>(t1353));
      Branch(implicit_cast<TNode<BoolT>>(t1353), label__True_417, label__False_418);
      BIND(label__True_417);
            *t1349_835 = implicit_cast<TNode<Object>>(t1344());
      Goto(label__done_836_1470);
      BIND(label__False_418);
            *t1349_835 = implicit_cast<TNode<Object>>(t1345());
      Goto(label__done_836_1470);
      BIND(label__done_836_1470);
    }
    TVARIABLE(Object, isLittleEndian_243_impl);
    auto isLittleEndian_243 = &isLittleEndian_243_impl;
    USE(isLittleEndian_243);
    *isLittleEndian_243 = implicit_cast<TNode<Object>>((*t1349_835).value());
    // ../../src/builtins/data-view.tq:521:5
    TNode<Numeric> t1354 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_242).value()), implicit_cast<TNode<Object>>((*isLittleEndian_243).value()), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1354));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1354));
  }
}

TF_BUILTIN(DataViewPrototypeGetBigInt64, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:526:65
  {
    // ../../src/builtins/data-view.tq:527:5
    auto t1355 = [=]() {
      int31_t t1357 = 0;
      TNode<IntPtrT> t1358 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1357)));
      TNode<Object> t1359 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1358)));
      return implicit_cast<TNode<Object>>(t1359);
    };
    auto t1356 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1360_837_impl);
    auto t1360_837 = &t1360_837_impl;
    USE(t1360_837);
    {
      Label label__True_419_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_419 = &label__True_419_impl;
      USE(label__True_419);
      Label label__False_420_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_420 = &label__False_420_impl;
      USE(label__False_420);
      Label label__done_838_1471_impl(this, {t1360_837}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_838_1471 = &label__done_838_1471_impl;
      USE(label__done_838_1471);
      TNode<IntPtrT> t1361 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1362 = 0;
      TNode<IntPtrT> t1363 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1362)));
      TNode<BoolT> t1364 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1361), implicit_cast<TNode<IntPtrT>>(t1363)));
      USE(implicit_cast<TNode<BoolT>>(t1364));
      Branch(implicit_cast<TNode<BoolT>>(t1364), label__True_419, label__False_420);
      BIND(label__True_419);
            *t1360_837 = implicit_cast<TNode<Object>>(t1355());
      Goto(label__done_838_1471);
      BIND(label__False_420);
            *t1360_837 = implicit_cast<TNode<Object>>(t1356());
      Goto(label__done_838_1471);
      BIND(label__done_838_1471);
    }
    TVARIABLE(Object, offset_244_impl);
    auto offset_244 = &offset_244_impl;
    USE(offset_244);
    *offset_244 = implicit_cast<TNode<Object>>((*t1360_837).value());
    // ../../src/builtins/data-view.tq:528:5
    auto t1365 = [=]() {
      int31_t t1367 = 1;
      TNode<IntPtrT> t1368 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1367)));
      TNode<Object> t1369 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1368)));
      return implicit_cast<TNode<Object>>(t1369);
    };
    auto t1366 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1370_839_impl);
    auto t1370_839 = &t1370_839_impl;
    USE(t1370_839);
    {
      Label label__True_421_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_421 = &label__True_421_impl;
      USE(label__True_421);
      Label label__False_422_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_422 = &label__False_422_impl;
      USE(label__False_422);
      Label label__done_840_1472_impl(this, {t1370_839}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_840_1472 = &label__done_840_1472_impl;
      USE(label__done_840_1472);
      TNode<IntPtrT> t1371 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1372 = 1;
      TNode<IntPtrT> t1373 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1372)));
      TNode<BoolT> t1374 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1371), implicit_cast<TNode<IntPtrT>>(t1373)));
      USE(implicit_cast<TNode<BoolT>>(t1374));
      Branch(implicit_cast<TNode<BoolT>>(t1374), label__True_421, label__False_422);
      BIND(label__True_421);
            *t1370_839 = implicit_cast<TNode<Object>>(t1365());
      Goto(label__done_840_1472);
      BIND(label__False_422);
            *t1370_839 = implicit_cast<TNode<Object>>(t1366());
      Goto(label__done_840_1472);
      BIND(label__done_840_1472);
    }
    TVARIABLE(Object, isLittleEndian_245_impl);
    auto isLittleEndian_245 = &isLittleEndian_245_impl;
    USE(isLittleEndian_245);
    *isLittleEndian_245 = implicit_cast<TNode<Object>>((*t1370_839).value());
    // ../../src/builtins/data-view.tq:530:5
    TNode<Numeric> t1375 = UncheckedCast<Numeric>(DataViewGet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_244).value()), implicit_cast<TNode<Object>>((*isLittleEndian_245).value()), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS)));
    USE(implicit_cast<TNode<Numeric>>(t1375));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1375));
  }
}

void DataViewBuiltinsFromDSLAssembler::StoreDataView8(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<Uint32T> p_value) {
  Label label_macro_end_1473_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1473 = &label_macro_end_1473_impl;
  USE(label_macro_end_1473);
  // ../../src/builtins/data-view.tq:541:79
  {
    // ../../src/builtins/data-view.tq:542:5
    TNode<RawPtrT> t1376 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    int31_t t1377 = 0xFF;
    TNode<Uint32T> t1378 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1377)));
    TNode<Uint32T> t1379 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1378)));
    USE(implicit_cast<TNode<Uint32T>>(t1379));
    StoreWord8(implicit_cast<TNode<RawPtrT>>(t1376), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>(t1379));
  }
}

void DataViewBuiltinsFromDSLAssembler::StoreDataView16(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<Uint32T> p_value, TNode<BoolT> p_requestedLittleEndian) {
  Label label_macro_end_1474_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1474 = &label_macro_end_1474_impl;
  USE(label_macro_end_1474);
  // ../../src/builtins/data-view.tq:547:36
  {
    // ../../src/builtins/data-view.tq:548:5
    TNode<RawPtrT> t1380 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_246_impl);
    auto dataPointer_246 = &dataPointer_246_impl;
    USE(dataPointer_246);
    *dataPointer_246 = implicit_cast<TNode<RawPtrT>>(t1380);
    // ../../src/builtins/data-view.tq:550:5
    int31_t t1381 = 0xFF;
    TNode<Uint32T> t1382 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1381)));
    TNode<Uint32T> t1383 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1382)));
    USE(implicit_cast<TNode<Uint32T>>(t1383));
    TVARIABLE(Uint32T, b0_247_impl);
    auto b0_247 = &b0_247_impl;
    USE(b0_247);
    *b0_247 = implicit_cast<TNode<Uint32T>>(t1383);
    // ../../src/builtins/data-view.tq:551:5
    int31_t t1384 = 8;
    TNode<Uint32T> t1385 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1384)));
    TNode<Uint32T> t1386 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1385)));
    USE(implicit_cast<TNode<Uint32T>>(t1386));
    int31_t t1387 = 0xFF;
    TNode<Uint32T> t1388 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1387)));
    TNode<Uint32T> t1389 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1386), implicit_cast<TNode<Uint32T>>(t1388)));
    USE(implicit_cast<TNode<Uint32T>>(t1389));
    TVARIABLE(Uint32T, b1_248_impl);
    auto b1_248 = &b1_248_impl;
    USE(b1_248);
    *b1_248 = implicit_cast<TNode<Uint32T>>(t1389);
    // ../../src/builtins/data-view.tq:553:5
    {
      Label label__True_423_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_423 = &label__True_423_impl;
      USE(label__True_423);
      Label label__False_424_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_424 = &label__False_424_impl;
      USE(label__False_424);
      Label label_if_done_label_841_1475_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_841_1475 = &label_if_done_label_841_1475_impl;
      USE(label_if_done_label_841_1475);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_423, label__False_424);
      if (label__True_423->is_used())
      {
        BIND(label__True_423);
        // ../../src/builtins/data-view.tq:553:32
        {
          // ../../src/builtins/data-view.tq:554:7
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_246).value()), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*b0_247).value()));
          // ../../src/builtins/data-view.tq:555:7
          int31_t t1390 = 1;
          TNode<UintPtrT> t1391 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1390)));
          TNode<UintPtrT> t1392 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1391)));
          USE(implicit_cast<TNode<UintPtrT>>(t1392));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_246).value()), implicit_cast<TNode<UintPtrT>>(t1392), implicit_cast<TNode<Uint32T>>((*b1_248).value()));
        }
        Goto(label_if_done_label_841_1475);
      }
      if (label__False_424->is_used())
      {
        BIND(label__False_424);
        // ../../src/builtins/data-view.tq:556:12
        {
          // ../../src/builtins/data-view.tq:557:7
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_246).value()), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*b1_248).value()));
          // ../../src/builtins/data-view.tq:558:7
          int31_t t1393 = 1;
          TNode<UintPtrT> t1394 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1393)));
          TNode<UintPtrT> t1395 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1394)));
          USE(implicit_cast<TNode<UintPtrT>>(t1395));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_246).value()), implicit_cast<TNode<UintPtrT>>(t1395), implicit_cast<TNode<Uint32T>>((*b0_247).value()));
        }
        Goto(label_if_done_label_841_1475);
      }
      BIND(label_if_done_label_841_1475);
    }
  }
}

void DataViewBuiltinsFromDSLAssembler::StoreDataView32(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<Uint32T> p_value, TNode<BoolT> p_requestedLittleEndian) {
  Label label_macro_end_1476_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1476 = &label_macro_end_1476_impl;
  USE(label_macro_end_1476);
  // ../../src/builtins/data-view.tq:564:36
  {
    // ../../src/builtins/data-view.tq:565:5
    TNode<RawPtrT> t1396 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_249_impl);
    auto dataPointer_249 = &dataPointer_249_impl;
    USE(dataPointer_249);
    *dataPointer_249 = implicit_cast<TNode<RawPtrT>>(t1396);
    // ../../src/builtins/data-view.tq:567:5
    int31_t t1397 = 0xFF;
    TNode<Uint32T> t1398 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1397)));
    TNode<Uint32T> t1399 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1398)));
    USE(implicit_cast<TNode<Uint32T>>(t1399));
    TVARIABLE(Uint32T, b0_250_impl);
    auto b0_250 = &b0_250_impl;
    USE(b0_250);
    *b0_250 = implicit_cast<TNode<Uint32T>>(t1399);
    // ../../src/builtins/data-view.tq:568:5
    int31_t t1400 = 8;
    TNode<Uint32T> t1401 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1400)));
    TNode<Uint32T> t1402 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1401)));
    USE(implicit_cast<TNode<Uint32T>>(t1402));
    int31_t t1403 = 0xFF;
    TNode<Uint32T> t1404 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1403)));
    TNode<Uint32T> t1405 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1402), implicit_cast<TNode<Uint32T>>(t1404)));
    USE(implicit_cast<TNode<Uint32T>>(t1405));
    TVARIABLE(Uint32T, b1_251_impl);
    auto b1_251 = &b1_251_impl;
    USE(b1_251);
    *b1_251 = implicit_cast<TNode<Uint32T>>(t1405);
    // ../../src/builtins/data-view.tq:569:5
    int31_t t1406 = 16;
    TNode<Uint32T> t1407 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1406)));
    TNode<Uint32T> t1408 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1407)));
    USE(implicit_cast<TNode<Uint32T>>(t1408));
    int31_t t1409 = 0xFF;
    TNode<Uint32T> t1410 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1409)));
    TNode<Uint32T> t1411 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1408), implicit_cast<TNode<Uint32T>>(t1410)));
    USE(implicit_cast<TNode<Uint32T>>(t1411));
    TVARIABLE(Uint32T, b2_252_impl);
    auto b2_252 = &b2_252_impl;
    USE(b2_252);
    *b2_252 = implicit_cast<TNode<Uint32T>>(t1411);
    // ../../src/builtins/data-view.tq:570:5
    int31_t t1412 = 24;
    TNode<Uint32T> t1413 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1412)));
    TNode<Uint32T> t1414 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_value), implicit_cast<TNode<Uint32T>>(t1413)));
    USE(implicit_cast<TNode<Uint32T>>(t1414));
    TVARIABLE(Uint32T, b3_253_impl);
    auto b3_253 = &b3_253_impl;
    USE(b3_253);
    *b3_253 = implicit_cast<TNode<Uint32T>>(t1414);
    // ../../src/builtins/data-view.tq:572:5
    {
      Label label__True_425_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_425 = &label__True_425_impl;
      USE(label__True_425);
      Label label__False_426_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_426 = &label__False_426_impl;
      USE(label__False_426);
      Label label_if_done_label_842_1477_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_842_1477 = &label_if_done_label_842_1477_impl;
      USE(label_if_done_label_842_1477);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_425, label__False_426);
      if (label__True_425->is_used())
      {
        BIND(label__True_425);
        // ../../src/builtins/data-view.tq:572:32
        {
          // ../../src/builtins/data-view.tq:573:7
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*b0_250).value()));
          // ../../src/builtins/data-view.tq:574:7
          int31_t t1415 = 1;
          TNode<UintPtrT> t1416 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1415)));
          TNode<UintPtrT> t1417 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1416)));
          USE(implicit_cast<TNode<UintPtrT>>(t1417));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(t1417), implicit_cast<TNode<Uint32T>>((*b1_251).value()));
          // ../../src/builtins/data-view.tq:575:7
          int31_t t1418 = 2;
          TNode<UintPtrT> t1419 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1418)));
          TNode<UintPtrT> t1420 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1419)));
          USE(implicit_cast<TNode<UintPtrT>>(t1420));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(t1420), implicit_cast<TNode<Uint32T>>((*b2_252).value()));
          // ../../src/builtins/data-view.tq:576:7
          int31_t t1421 = 3;
          TNode<UintPtrT> t1422 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1421)));
          TNode<UintPtrT> t1423 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1422)));
          USE(implicit_cast<TNode<UintPtrT>>(t1423));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(t1423), implicit_cast<TNode<Uint32T>>((*b3_253).value()));
        }
        Goto(label_if_done_label_842_1477);
      }
      if (label__False_426->is_used())
      {
        BIND(label__False_426);
        // ../../src/builtins/data-view.tq:577:12
        {
          // ../../src/builtins/data-view.tq:578:7
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*b3_253).value()));
          // ../../src/builtins/data-view.tq:579:7
          int31_t t1424 = 1;
          TNode<UintPtrT> t1425 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1424)));
          TNode<UintPtrT> t1426 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1425)));
          USE(implicit_cast<TNode<UintPtrT>>(t1426));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(t1426), implicit_cast<TNode<Uint32T>>((*b2_252).value()));
          // ../../src/builtins/data-view.tq:580:7
          int31_t t1427 = 2;
          TNode<UintPtrT> t1428 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1427)));
          TNode<UintPtrT> t1429 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1428)));
          USE(implicit_cast<TNode<UintPtrT>>(t1429));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(t1429), implicit_cast<TNode<Uint32T>>((*b1_251).value()));
          // ../../src/builtins/data-view.tq:581:7
          int31_t t1430 = 3;
          TNode<UintPtrT> t1431 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1430)));
          TNode<UintPtrT> t1432 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1431)));
          USE(implicit_cast<TNode<UintPtrT>>(t1432));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_249).value()), implicit_cast<TNode<UintPtrT>>(t1432), implicit_cast<TNode<Uint32T>>((*b0_250).value()));
        }
        Goto(label_if_done_label_842_1477);
      }
      BIND(label_if_done_label_842_1477);
    }
  }
}

void DataViewBuiltinsFromDSLAssembler::StoreDataView64(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<Uint32T> p_lowWord, TNode<Uint32T> p_highWord, TNode<BoolT> p_requestedLittleEndian) {
  Label label_macro_end_1478_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1478 = &label_macro_end_1478_impl;
  USE(label_macro_end_1478);
  // ../../src/builtins/data-view.tq:587:36
  {
    // ../../src/builtins/data-view.tq:588:5
    TNode<RawPtrT> t1433 = UncheckedCast<RawPtrT>(LoadJSArrayBufferBackingStore(implicit_cast<TNode<JSArrayBuffer>>(p_buffer)));
    TVARIABLE(RawPtrT, dataPointer_254_impl);
    auto dataPointer_254 = &dataPointer_254_impl;
    USE(dataPointer_254);
    *dataPointer_254 = implicit_cast<TNode<RawPtrT>>(t1433);
    // ../../src/builtins/data-view.tq:590:5
    int31_t t1434 = 0xFF;
    TNode<Uint32T> t1435 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1434)));
    TNode<Uint32T> t1436 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(t1435)));
    USE(implicit_cast<TNode<Uint32T>>(t1436));
    TVARIABLE(Uint32T, b0_255_impl);
    auto b0_255 = &b0_255_impl;
    USE(b0_255);
    *b0_255 = implicit_cast<TNode<Uint32T>>(t1436);
    // ../../src/builtins/data-view.tq:591:5
    int31_t t1437 = 8;
    TNode<Uint32T> t1438 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1437)));
    TNode<Uint32T> t1439 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(t1438)));
    USE(implicit_cast<TNode<Uint32T>>(t1439));
    int31_t t1440 = 0xFF;
    TNode<Uint32T> t1441 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1440)));
    TNode<Uint32T> t1442 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1439), implicit_cast<TNode<Uint32T>>(t1441)));
    USE(implicit_cast<TNode<Uint32T>>(t1442));
    TVARIABLE(Uint32T, b1_256_impl);
    auto b1_256 = &b1_256_impl;
    USE(b1_256);
    *b1_256 = implicit_cast<TNode<Uint32T>>(t1442);
    // ../../src/builtins/data-view.tq:592:5
    int31_t t1443 = 16;
    TNode<Uint32T> t1444 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1443)));
    TNode<Uint32T> t1445 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(t1444)));
    USE(implicit_cast<TNode<Uint32T>>(t1445));
    int31_t t1446 = 0xFF;
    TNode<Uint32T> t1447 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1446)));
    TNode<Uint32T> t1448 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1445), implicit_cast<TNode<Uint32T>>(t1447)));
    USE(implicit_cast<TNode<Uint32T>>(t1448));
    TVARIABLE(Uint32T, b2_257_impl);
    auto b2_257 = &b2_257_impl;
    USE(b2_257);
    *b2_257 = implicit_cast<TNode<Uint32T>>(t1448);
    // ../../src/builtins/data-view.tq:593:5
    int31_t t1449 = 24;
    TNode<Uint32T> t1450 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1449)));
    TNode<Uint32T> t1451 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_lowWord), implicit_cast<TNode<Uint32T>>(t1450)));
    USE(implicit_cast<TNode<Uint32T>>(t1451));
    TVARIABLE(Uint32T, b3_258_impl);
    auto b3_258 = &b3_258_impl;
    USE(b3_258);
    *b3_258 = implicit_cast<TNode<Uint32T>>(t1451);
    // ../../src/builtins/data-view.tq:595:5
    int31_t t1452 = 0xFF;
    TNode<Uint32T> t1453 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1452)));
    TNode<Uint32T> t1454 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t1453)));
    USE(implicit_cast<TNode<Uint32T>>(t1454));
    TVARIABLE(Uint32T, b4_259_impl);
    auto b4_259 = &b4_259_impl;
    USE(b4_259);
    *b4_259 = implicit_cast<TNode<Uint32T>>(t1454);
    // ../../src/builtins/data-view.tq:596:5
    int31_t t1455 = 8;
    TNode<Uint32T> t1456 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1455)));
    TNode<Uint32T> t1457 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t1456)));
    USE(implicit_cast<TNode<Uint32T>>(t1457));
    int31_t t1458 = 0xFF;
    TNode<Uint32T> t1459 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1458)));
    TNode<Uint32T> t1460 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1457), implicit_cast<TNode<Uint32T>>(t1459)));
    USE(implicit_cast<TNode<Uint32T>>(t1460));
    TVARIABLE(Uint32T, b5_260_impl);
    auto b5_260 = &b5_260_impl;
    USE(b5_260);
    *b5_260 = implicit_cast<TNode<Uint32T>>(t1460);
    // ../../src/builtins/data-view.tq:597:5
    int31_t t1461 = 16;
    TNode<Uint32T> t1462 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1461)));
    TNode<Uint32T> t1463 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t1462)));
    USE(implicit_cast<TNode<Uint32T>>(t1463));
    int31_t t1464 = 0xFF;
    TNode<Uint32T> t1465 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1464)));
    TNode<Uint32T> t1466 = UncheckedCast<Uint32T>(Word32And(implicit_cast<TNode<Uint32T>>(t1463), implicit_cast<TNode<Uint32T>>(t1465)));
    USE(implicit_cast<TNode<Uint32T>>(t1466));
    TVARIABLE(Uint32T, b6_261_impl);
    auto b6_261 = &b6_261_impl;
    USE(b6_261);
    *b6_261 = implicit_cast<TNode<Uint32T>>(t1466);
    // ../../src/builtins/data-view.tq:598:5
    int31_t t1467 = 24;
    TNode<Uint32T> t1468 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1467)));
    TNode<Uint32T> t1469 = UncheckedCast<Uint32T>(Word32Shr(implicit_cast<TNode<Uint32T>>(p_highWord), implicit_cast<TNode<Uint32T>>(t1468)));
    USE(implicit_cast<TNode<Uint32T>>(t1469));
    TVARIABLE(Uint32T, b7_262_impl);
    auto b7_262 = &b7_262_impl;
    USE(b7_262);
    *b7_262 = implicit_cast<TNode<Uint32T>>(t1469);
    // ../../src/builtins/data-view.tq:600:5
    {
      Label label__True_427_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_427 = &label__True_427_impl;
      USE(label__True_427);
      Label label__False_428_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_428 = &label__False_428_impl;
      USE(label__False_428);
      Label label_if_done_label_843_1479_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_if_done_label_843_1479 = &label_if_done_label_843_1479_impl;
      USE(label_if_done_label_843_1479);
      Branch(implicit_cast<TNode<BoolT>>(p_requestedLittleEndian), label__True_427, label__False_428);
      if (label__True_427->is_used())
      {
        BIND(label__True_427);
        // ../../src/builtins/data-view.tq:600:32
        {
          // ../../src/builtins/data-view.tq:601:7
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*b0_255).value()));
          // ../../src/builtins/data-view.tq:602:7
          int31_t t1470 = 1;
          TNode<UintPtrT> t1471 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1470)));
          TNode<UintPtrT> t1472 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1471)));
          USE(implicit_cast<TNode<UintPtrT>>(t1472));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1472), implicit_cast<TNode<Uint32T>>((*b1_256).value()));
          // ../../src/builtins/data-view.tq:603:7
          int31_t t1473 = 2;
          TNode<UintPtrT> t1474 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1473)));
          TNode<UintPtrT> t1475 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1474)));
          USE(implicit_cast<TNode<UintPtrT>>(t1475));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1475), implicit_cast<TNode<Uint32T>>((*b2_257).value()));
          // ../../src/builtins/data-view.tq:604:7
          int31_t t1476 = 3;
          TNode<UintPtrT> t1477 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1476)));
          TNode<UintPtrT> t1478 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1477)));
          USE(implicit_cast<TNode<UintPtrT>>(t1478));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1478), implicit_cast<TNode<Uint32T>>((*b3_258).value()));
          // ../../src/builtins/data-view.tq:605:7
          int31_t t1479 = 4;
          TNode<UintPtrT> t1480 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1479)));
          TNode<UintPtrT> t1481 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1480)));
          USE(implicit_cast<TNode<UintPtrT>>(t1481));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1481), implicit_cast<TNode<Uint32T>>((*b4_259).value()));
          // ../../src/builtins/data-view.tq:606:7
          int31_t t1482 = 5;
          TNode<UintPtrT> t1483 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1482)));
          TNode<UintPtrT> t1484 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1483)));
          USE(implicit_cast<TNode<UintPtrT>>(t1484));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1484), implicit_cast<TNode<Uint32T>>((*b5_260).value()));
          // ../../src/builtins/data-view.tq:607:7
          int31_t t1485 = 6;
          TNode<UintPtrT> t1486 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1485)));
          TNode<UintPtrT> t1487 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1486)));
          USE(implicit_cast<TNode<UintPtrT>>(t1487));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1487), implicit_cast<TNode<Uint32T>>((*b6_261).value()));
          // ../../src/builtins/data-view.tq:608:7
          int31_t t1488 = 7;
          TNode<UintPtrT> t1489 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1488)));
          TNode<UintPtrT> t1490 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1489)));
          USE(implicit_cast<TNode<UintPtrT>>(t1490));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1490), implicit_cast<TNode<Uint32T>>((*b7_262).value()));
        }
        Goto(label_if_done_label_843_1479);
      }
      if (label__False_428->is_used())
      {
        BIND(label__False_428);
        // ../../src/builtins/data-view.tq:609:12
        {
          // ../../src/builtins/data-view.tq:610:7
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*b7_262).value()));
          // ../../src/builtins/data-view.tq:611:7
          int31_t t1491 = 1;
          TNode<UintPtrT> t1492 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1491)));
          TNode<UintPtrT> t1493 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1492)));
          USE(implicit_cast<TNode<UintPtrT>>(t1493));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1493), implicit_cast<TNode<Uint32T>>((*b6_261).value()));
          // ../../src/builtins/data-view.tq:612:7
          int31_t t1494 = 2;
          TNode<UintPtrT> t1495 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1494)));
          TNode<UintPtrT> t1496 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1495)));
          USE(implicit_cast<TNode<UintPtrT>>(t1496));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1496), implicit_cast<TNode<Uint32T>>((*b5_260).value()));
          // ../../src/builtins/data-view.tq:613:7
          int31_t t1497 = 3;
          TNode<UintPtrT> t1498 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1497)));
          TNode<UintPtrT> t1499 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1498)));
          USE(implicit_cast<TNode<UintPtrT>>(t1499));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1499), implicit_cast<TNode<Uint32T>>((*b4_259).value()));
          // ../../src/builtins/data-view.tq:614:7
          int31_t t1500 = 4;
          TNode<UintPtrT> t1501 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1500)));
          TNode<UintPtrT> t1502 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1501)));
          USE(implicit_cast<TNode<UintPtrT>>(t1502));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1502), implicit_cast<TNode<Uint32T>>((*b3_258).value()));
          // ../../src/builtins/data-view.tq:615:7
          int31_t t1503 = 5;
          TNode<UintPtrT> t1504 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1503)));
          TNode<UintPtrT> t1505 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1504)));
          USE(implicit_cast<TNode<UintPtrT>>(t1505));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1505), implicit_cast<TNode<Uint32T>>((*b2_257).value()));
          // ../../src/builtins/data-view.tq:616:7
          int31_t t1506 = 6;
          TNode<UintPtrT> t1507 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1506)));
          TNode<UintPtrT> t1508 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1507)));
          USE(implicit_cast<TNode<UintPtrT>>(t1508));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1508), implicit_cast<TNode<Uint32T>>((*b1_256).value()));
          // ../../src/builtins/data-view.tq:617:7
          int31_t t1509 = 7;
          TNode<UintPtrT> t1510 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1509)));
          TNode<UintPtrT> t1511 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<UintPtrT>>(t1510)));
          USE(implicit_cast<TNode<UintPtrT>>(t1511));
          StoreWord8(implicit_cast<TNode<RawPtrT>>((*dataPointer_254).value()), implicit_cast<TNode<UintPtrT>>(t1511), implicit_cast<TNode<Uint32T>>((*b0_255).value()));
        }
        Goto(label_if_done_label_843_1479);
      }
      BIND(label_if_done_label_843_1479);
    }
  }
}

void DataViewBuiltinsFromDSLAssembler::StoreDataViewBigInt(TNode<JSArrayBuffer> p_buffer, TNode<UintPtrT> p_offset, TNode<BigInt> p_bigIntValue, TNode<BoolT> p_requestedLittleEndian) {
  Label label_macro_end_1480_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1480 = &label_macro_end_1480_impl;
  USE(label_macro_end_1480);
  // ../../src/builtins/data-view.tq:630:36
  {
    // ../../src/builtins/data-view.tq:631:5
    TNode<UintPtrT> t1512 = UncheckedCast<UintPtrT>(DataViewDecodeBigIntLength(implicit_cast<TNode<BigInt>>(p_bigIntValue)));
    USE(implicit_cast<TNode<UintPtrT>>(t1512));
    TVARIABLE(UintPtrT, length_263_impl);
    auto length_263 = &length_263_impl;
    USE(length_263);
    *length_263 = implicit_cast<TNode<UintPtrT>>(t1512);
    // ../../src/builtins/data-view.tq:632:5
    TNode<UintPtrT> t1513 = UncheckedCast<UintPtrT>(DataViewDecodeBigIntSign(implicit_cast<TNode<BigInt>>(p_bigIntValue)));
    USE(implicit_cast<TNode<UintPtrT>>(t1513));
    TVARIABLE(UintPtrT, sign_264_impl);
    auto sign_264 = &sign_264_impl;
    USE(sign_264);
    *sign_264 = implicit_cast<TNode<UintPtrT>>(t1513);
    // ../../src/builtins/data-view.tq:636:5
    int31_t t1514 = 0;
    TVARIABLE(Uint32T, lowWord_265_impl);
    auto lowWord_265 = &lowWord_265_impl;
    USE(lowWord_265);
    TNode<Uint32T> t1515 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1514)));
    *lowWord_265 = implicit_cast<TNode<Uint32T>>(t1515);
    // ../../src/builtins/data-view.tq:637:5
    int31_t t1516 = 0;
    TVARIABLE(Uint32T, highWord_266_impl);
    auto highWord_266 = &highWord_266_impl;
    USE(highWord_266);
    TNode<Uint32T> t1517 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1516)));
    *highWord_266 = implicit_cast<TNode<Uint32T>>(t1517);
    // ../../src/builtins/data-view.tq:640:5
    {
      Label label__True_429_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_429 = &label__True_429_impl;
      USE(label__True_429);
      Label label__False_430_impl(this, {highWord_266, lowWord_265}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_430 = &label__False_430_impl;
      USE(label__False_430);
      int31_t t1518 = 0;
      TNode<UintPtrT> t1519 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1518)));
      TNode<BoolT> t1520 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<UintPtrT>>((*length_263).value()), implicit_cast<TNode<UintPtrT>>(t1519)));
      USE(implicit_cast<TNode<BoolT>>(t1520));
      Branch(implicit_cast<TNode<BoolT>>(t1520), label__True_429, label__False_430);
      if (label__True_429->is_used())
      {
        BIND(label__True_429);
        // ../../src/builtins/data-view.tq:640:22
        {
          // ../../src/builtins/data-view.tq:641:7
          {
            bool t1521 = Is64();
            USE(implicit_cast<bool>(t1521));
            if ((implicit_cast<bool>(t1521))) {
              // ../../src/builtins/data-view.tq:641:29
              {
                // ../../src/builtins/data-view.tq:643:9
                int31_t t1522 = 0;
                TNode<UintPtrT> t1523 = UncheckedCast<UintPtrT>(LoadBigIntDigit(implicit_cast<TNode<BigInt>>(p_bigIntValue), implicit_cast<int31_t>(t1522)));
                USE(implicit_cast<TNode<UintPtrT>>(t1523));
                TVARIABLE(UintPtrT, value_267_impl);
                auto value_267 = &value_267_impl;
                USE(value_267);
                *value_267 = implicit_cast<TNode<UintPtrT>>(t1523);
                // ../../src/builtins/data-view.tq:644:9
                TNode<Uint32T> t1524 = UncheckedCast<Uint32T>(Convert8ATuint32(implicit_cast<TNode<UintPtrT>>((*value_267).value())));
                USE(implicit_cast<TNode<Uint32T>>(t1524));
                *lowWord_265 = implicit_cast<TNode<Uint32T>>(t1524);
                // ../../src/builtins/data-view.tq:645:9
                int31_t t1525 = 32;
                TNode<UintPtrT> t1526 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1525)));
                TNode<UintPtrT> t1527 = UncheckedCast<UintPtrT>(WordShr(implicit_cast<TNode<UintPtrT>>((*value_267).value()), implicit_cast<TNode<UintPtrT>>(t1526)));
                USE(implicit_cast<TNode<UintPtrT>>(t1527));
                TNode<Uint32T> t1528 = UncheckedCast<Uint32T>(Convert8ATuint32(implicit_cast<TNode<UintPtrT>>(t1527)));
                USE(implicit_cast<TNode<Uint32T>>(t1528));
                *highWord_266 = implicit_cast<TNode<Uint32T>>(t1528);
              }
            } else {
              // ../../src/builtins/data-view.tq:646:14
              {
                // ../../src/builtins/data-view.tq:647:9
                int31_t t1529 = 0;
                TNode<UintPtrT> t1530 = UncheckedCast<UintPtrT>(LoadBigIntDigit(implicit_cast<TNode<BigInt>>(p_bigIntValue), implicit_cast<int31_t>(t1529)));
                USE(implicit_cast<TNode<UintPtrT>>(t1530));
                TNode<Uint32T> t1531 = UncheckedCast<Uint32T>(Convert8ATuint32(implicit_cast<TNode<UintPtrT>>(t1530)));
                USE(implicit_cast<TNode<Uint32T>>(t1531));
                *lowWord_265 = implicit_cast<TNode<Uint32T>>(t1531);
                // ../../src/builtins/data-view.tq:648:9
                {
                  Label label__True_433_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__True_433 = &label__True_433_impl;
                  USE(label__True_433);
                  Label label__False_434_impl(this, {highWord_266}, compiler::CodeAssemblerLabel::kNonDeferred);
                  Label* label__False_434 = &label__False_434_impl;
                  USE(label__False_434);
                  int31_t t1532 = 2;
                  TNode<UintPtrT> t1533 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1532)));
                  TNode<BoolT> t1534 = UncheckedCast<BoolT>(UintPtrGreaterThanOrEqual(implicit_cast<TNode<UintPtrT>>((*length_263).value()), implicit_cast<TNode<UintPtrT>>(t1533)));
                  USE(implicit_cast<TNode<BoolT>>(t1534));
                  Branch(implicit_cast<TNode<BoolT>>(t1534), label__True_433, label__False_434);
                  if (label__True_433->is_used())
                  {
                    BIND(label__True_433);
                    // ../../src/builtins/data-view.tq:648:26
                    {
                      // ../../src/builtins/data-view.tq:649:11
                      int31_t t1535 = 1;
                      TNode<UintPtrT> t1536 = UncheckedCast<UintPtrT>(LoadBigIntDigit(implicit_cast<TNode<BigInt>>(p_bigIntValue), implicit_cast<int31_t>(t1535)));
                      USE(implicit_cast<TNode<UintPtrT>>(t1536));
                      TNode<Uint32T> t1537 = UncheckedCast<Uint32T>(Convert8ATuint32(implicit_cast<TNode<UintPtrT>>(t1536)));
                      USE(implicit_cast<TNode<Uint32T>>(t1537));
                      *highWord_266 = implicit_cast<TNode<Uint32T>>(t1537);
                    }
                    Goto(label__False_434);
                  }
                  BIND(label__False_434);
                }
              }
            }
          }
        }
        Goto(label__False_430);
      }
      BIND(label__False_430);
    }
    // ../../src/builtins/data-view.tq:654:5
    {
      Label label__True_435_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_435 = &label__True_435_impl;
      USE(label__True_435);
      Label label__False_436_impl(this, {highWord_266, lowWord_265}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_436 = &label__False_436_impl;
      USE(label__False_436);
      int31_t t1538 = 0;
      TNode<UintPtrT> t1539 = UncheckedCast<UintPtrT>(FromConstexpr9ATuintptr(implicit_cast<int31_t>(t1538)));
      TNode<BoolT> t1540 = UncheckedCast<BoolT>(WordNotEqual(implicit_cast<TNode<UintPtrT>>((*sign_264).value()), implicit_cast<TNode<UintPtrT>>(t1539)));
      USE(implicit_cast<TNode<BoolT>>(t1540));
      Branch(implicit_cast<TNode<BoolT>>(t1540), label__True_435, label__False_436);
      if (label__True_435->is_used())
      {
        BIND(label__True_435);
        // ../../src/builtins/data-view.tq:654:20
        {
          // ../../src/builtins/data-view.tq:655:7
          int31_t t1541 = 0;
          TNode<Int32T> t1542 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>((*highWord_266).value())));
          USE(implicit_cast<TNode<Int32T>>(t1542));
          TNode<Int32T> t1543 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1541)));
          TNode<Int32T> t1544 = UncheckedCast<Int32T>(Int32Sub(implicit_cast<TNode<Int32T>>(t1543), implicit_cast<TNode<Int32T>>(t1542)));
          USE(implicit_cast<TNode<Int32T>>(t1544));
          TNode<Uint32T> t1545 = UncheckedCast<Uint32T>(Unsigned(implicit_cast<TNode<Int32T>>(t1544)));
          USE(implicit_cast<TNode<Uint32T>>(t1545));
          *highWord_266 = implicit_cast<TNode<Uint32T>>(t1545);
          // ../../src/builtins/data-view.tq:656:7
          {
            Label label__True_437_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__True_437 = &label__True_437_impl;
            USE(label__True_437);
            Label label__False_438_impl(this, {highWord_266}, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_438 = &label__False_438_impl;
            USE(label__False_438);
            int31_t t1546 = 0;
            TNode<Uint32T> t1547 = UncheckedCast<Uint32T>(FromConstexpr8ATuint32(implicit_cast<int31_t>(t1546)));
            TNode<BoolT> t1548 = UncheckedCast<BoolT>(Word32NotEqual(implicit_cast<TNode<Uint32T>>((*lowWord_265).value()), implicit_cast<TNode<Uint32T>>(t1547)));
            USE(implicit_cast<TNode<BoolT>>(t1548));
            Branch(implicit_cast<TNode<BoolT>>(t1548), label__True_437, label__False_438);
            if (label__True_437->is_used())
            {
              BIND(label__True_437);
              // ../../src/builtins/data-view.tq:656:25
              {
                // ../../src/builtins/data-view.tq:657:9
                TNode<Int32T> t1549 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>((*highWord_266).value())));
                USE(implicit_cast<TNode<Int32T>>(t1549));
                int31_t t1550 = 1;
                TNode<Int32T> t1551 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1550)));
                TNode<Int32T> t1552 = UncheckedCast<Int32T>(Int32Sub(implicit_cast<TNode<Int32T>>(t1549), implicit_cast<TNode<Int32T>>(t1551)));
                USE(implicit_cast<TNode<Int32T>>(t1552));
                TNode<Uint32T> t1553 = UncheckedCast<Uint32T>(Unsigned(implicit_cast<TNode<Int32T>>(t1552)));
                USE(implicit_cast<TNode<Uint32T>>(t1553));
                *highWord_266 = implicit_cast<TNode<Uint32T>>(t1553);
              }
              Goto(label__False_438);
            }
            BIND(label__False_438);
          }
          // ../../src/builtins/data-view.tq:659:7
          int31_t t1554 = 0;
          TNode<Int32T> t1555 = UncheckedCast<Int32T>(Signed(implicit_cast<TNode<Uint32T>>((*lowWord_265).value())));
          USE(implicit_cast<TNode<Int32T>>(t1555));
          TNode<Int32T> t1556 = UncheckedCast<Int32T>(FromConstexpr7ATint32(implicit_cast<int31_t>(t1554)));
          TNode<Int32T> t1557 = UncheckedCast<Int32T>(Int32Sub(implicit_cast<TNode<Int32T>>(t1556), implicit_cast<TNode<Int32T>>(t1555)));
          USE(implicit_cast<TNode<Int32T>>(t1557));
          TNode<Uint32T> t1558 = UncheckedCast<Uint32T>(Unsigned(implicit_cast<TNode<Int32T>>(t1557)));
          USE(implicit_cast<TNode<Uint32T>>(t1558));
          *lowWord_265 = implicit_cast<TNode<Uint32T>>(t1558);
        }
        Goto(label__False_436);
      }
      BIND(label__False_436);
    }
    // ../../src/builtins/data-view.tq:662:5
    StoreDataView64(implicit_cast<TNode<JSArrayBuffer>>(p_buffer), implicit_cast<TNode<UintPtrT>>(p_offset), implicit_cast<TNode<Uint32T>>((*lowWord_265).value()), implicit_cast<TNode<Uint32T>>((*highWord_266).value()), implicit_cast<TNode<BoolT>>(p_requestedLittleEndian));
  }
}

compiler::TNode<Object> DataViewBuiltinsFromDSLAssembler::DataViewSet(TNode<Context> p_context, TNode<Object> p_receiver, TNode<Object> p_offset, TNode<Object> p_value, TNode<Object> p_requestedLittleEndian, ElementsKind p_kind) {
  TVARIABLE(Object, _return_268_impl);
  auto _return_268 = &_return_268_impl;
  USE(_return_268);
  Label label_macro_end_1481_impl(this, {_return_268}, compiler::CodeAssemblerLabel::kNonDeferred);
  Label* label_macro_end_1481 = &label_macro_end_1481_impl;
  USE(label_macro_end_1481);
  // ../../src/builtins/data-view.tq:667:76
  {
    // ../../src/builtins/data-view.tq:668:5
    TNode<String> t1559 = UncheckedCast<String>(MakeDataViewSetterNameString(implicit_cast<ElementsKind>(p_kind)));
    USE(implicit_cast<TNode<String>>(t1559));
    TNode<JSDataView> t1560 = UncheckedCast<JSDataView>(ValidateDataView(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<String>>(t1559)));
    USE(implicit_cast<TNode<JSDataView>>(t1560));
    TVARIABLE(JSDataView, dataView_269_impl);
    auto dataView_269 = &dataView_269_impl;
    USE(dataView_269);
    *dataView_269 = implicit_cast<TNode<JSDataView>>(t1560);
    // ../../src/builtins/data-view.tq:671:5
    TVARIABLE(Number, getIndex_270_impl);
    auto getIndex_270 = &getIndex_270_impl;
    USE(getIndex_270);
    // ../../src/builtins/data-view.tq:672:5
    {
      Label label_try_done_844_1482_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_done_844_1482 = &label_try_done_844_1482_impl;
      USE(label_try_done_844_1482);
      Label label_RangeError_439_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_RangeError_439 = &label_RangeError_439_impl;
      USE(label_RangeError_439);
      Label label_try_begin_845_1483_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label_try_begin_845_1483 = &label_try_begin_845_1483_impl;
      USE(label_try_begin_845_1483);
      Goto(label_try_begin_845_1483);
      if (label_try_begin_845_1483->is_used())
      {
        BIND(label_try_begin_845_1483);
        // ../../src/builtins/data-view.tq:672:9
        {
          // ../../src/builtins/data-view.tq:673:7
          TNode<Number> t1561 = UncheckedCast<Number>(ToIndex(implicit_cast<TNode<Object>>(p_offset), implicit_cast<TNode<Context>>(p_context), label_RangeError_439));
          USE(implicit_cast<TNode<Number>>(t1561));
          *getIndex_270 = implicit_cast<TNode<Number>>(t1561);
        }
        Goto(label_try_done_844_1482);
      }
      if (label_RangeError_439->is_used())
      {
        BIND(label_RangeError_439);
        // ../../src/builtins/data-view.tq:675:22
        {
          // ../../src/builtins/data-view.tq:676:7
          ThrowRangeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kInvalidDataViewAccessorOffset));
        }
      }
      BIND(label_try_done_844_1482);
    }
    // ../../src/builtins/data-view.tq:679:5
    TNode<BoolT> t1562 = UncheckedCast<BoolT>(ToBoolean(implicit_cast<TNode<Object>>(p_requestedLittleEndian)));
    USE(implicit_cast<TNode<BoolT>>(t1562));
    TVARIABLE(BoolT, littleEndian_271_impl);
    auto littleEndian_271 = &littleEndian_271_impl;
    USE(littleEndian_271);
    *littleEndian_271 = implicit_cast<TNode<BoolT>>(t1562);
    // ../../src/builtins/data-view.tq:680:5
    TNode<JSArrayBuffer> t1563 = UncheckedCast<JSArrayBuffer>(LoadJSArrayBufferViewBuffer(implicit_cast<TNode<JSArrayBufferView>>((*dataView_269).value())));
    TVARIABLE(JSArrayBuffer, buffer_272_impl);
    auto buffer_272 = &buffer_272_impl;
    USE(buffer_272);
    *buffer_272 = implicit_cast<TNode<JSArrayBuffer>>(t1563);
    // ../../src/builtins/data-view.tq:682:5
    TVARIABLE(BigInt, bigIntValue_273_impl);
    auto bigIntValue_273 = &bigIntValue_273_impl;
    USE(bigIntValue_273);
    // ../../src/builtins/data-view.tq:683:5
    TVARIABLE(Number, numValue_274_impl);
    auto numValue_274 = &numValue_274_impl;
    USE(numValue_274);
    // ../../src/builtins/data-view.tq:686:5
    {
      Label label__False_442_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_442 = &label__False_442_impl;
      USE(label__False_442);
      bool t1564 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS));
      USE(implicit_cast<bool>(t1564));
      bool t1565 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS));
      USE(implicit_cast<bool>(t1565));
      if ((implicit_cast<bool>((implicit_cast<bool>(t1564) || implicit_cast<bool>(t1565))))) {
        // ../../src/builtins/data-view.tq:686:76
        {
          // ../../src/builtins/data-view.tq:687:7
          TNode<BigInt> t1566 = UncheckedCast<BigInt>(ToBigInt(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_value)));
          USE(implicit_cast<TNode<BigInt>>(t1566));
          *bigIntValue_273 = implicit_cast<TNode<BigInt>>(t1566);
        }
      } else {
        // ../../src/builtins/data-view.tq:688:12
        {
          // ../../src/builtins/data-view.tq:689:7
          TNode<Number> t1567 = UncheckedCast<Number>(ToNumber(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_value)));
          USE(implicit_cast<TNode<Number>>(t1567));
          *numValue_274 = implicit_cast<TNode<Number>>(t1567);
        }
      }
    }
    // ../../src/builtins/data-view.tq:692:5
    {
      Label label__True_443_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_443 = &label__True_443_impl;
      USE(label__True_443);
      Label label__False_444_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_444 = &label__False_444_impl;
      USE(label__False_444);
      TNode<BoolT> t1568 = UncheckedCast<BoolT>(IsDetachedBuffer(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value())));
      USE(implicit_cast<TNode<BoolT>>(t1568));
      Branch(implicit_cast<TNode<BoolT>>(t1568), label__True_443, label__False_444);
      if (label__True_443->is_used())
      {
        BIND(label__True_443);
        // ../../src/builtins/data-view.tq:692:35
        {
          // ../../src/builtins/data-view.tq:693:7
          TNode<String> t1569 = UncheckedCast<String>(MakeDataViewSetterNameString(implicit_cast<ElementsKind>(p_kind)));
          USE(implicit_cast<TNode<String>>(t1569));
          ThrowTypeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kDetachedOperation), implicit_cast<TNode<Object>>(t1569));
        }
      }
      BIND(label__False_444);
    }
    // ../../src/builtins/data-view.tq:697:5
    TNode<Float64T> t1570 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<TNode<Number>>((*getIndex_270).value())));
    USE(implicit_cast<TNode<Float64T>>(t1570));
    TVARIABLE(Float64T, getIndexFloat_275_impl);
    auto getIndexFloat_275 = &getIndexFloat_275_impl;
    USE(getIndexFloat_275);
    *getIndexFloat_275 = implicit_cast<TNode<Float64T>>(t1570);
    // ../../src/builtins/data-view.tq:698:5
    TNode<UintPtrT> t1571 = UncheckedCast<UintPtrT>(Convert9ATuintptr(implicit_cast<TNode<Float64T>>((*getIndexFloat_275).value())));
    USE(implicit_cast<TNode<UintPtrT>>(t1571));
    TVARIABLE(UintPtrT, getIndexWord_276_impl);
    auto getIndexWord_276 = &getIndexWord_276_impl;
    USE(getIndexWord_276);
    *getIndexWord_276 = implicit_cast<TNode<UintPtrT>>(t1571);
    // ../../src/builtins/data-view.tq:700:5
    TNode<UintPtrT> t1572 = UncheckedCast<UintPtrT>(LoadJSArrayBufferViewByteOffset(implicit_cast<TNode<JSArrayBufferView>>((*dataView_269).value())));
    TVARIABLE(UintPtrT, viewOffsetWord_277_impl);
    auto viewOffsetWord_277 = &viewOffsetWord_277_impl;
    USE(viewOffsetWord_277);
    *viewOffsetWord_277 = implicit_cast<TNode<UintPtrT>>(t1572);
    // ../../src/builtins/data-view.tq:701:5
    TNode<UintPtrT> t1573 = UncheckedCast<UintPtrT>(LoadJSArrayBufferViewByteLength(implicit_cast<TNode<JSArrayBufferView>>((*dataView_269).value())));
    TNode<Float64T> t1574 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<TNode<UintPtrT>>(t1573)));
    USE(implicit_cast<TNode<Float64T>>(t1574));
    TVARIABLE(Float64T, viewSizeFloat_278_impl);
    auto viewSizeFloat_278 = &viewSizeFloat_278_impl;
    USE(viewSizeFloat_278);
    *viewSizeFloat_278 = implicit_cast<TNode<Float64T>>(t1574);
    // ../../src/builtins/data-view.tq:702:5
    int31_t t1575 = DataViewElementSize(implicit_cast<ElementsKind>(p_kind));
    USE(implicit_cast<int31_t>(t1575));
    TNode<Float64T> t1576 = UncheckedCast<Float64T>(Convert9ATfloat64(implicit_cast<int31_t>(t1575)));
    USE(implicit_cast<TNode<Float64T>>(t1576));
    TVARIABLE(Float64T, elementSizeFloat_279_impl);
    auto elementSizeFloat_279 = &elementSizeFloat_279_impl;
    USE(elementSizeFloat_279);
    *elementSizeFloat_279 = implicit_cast<TNode<Float64T>>(t1576);
    // ../../src/builtins/data-view.tq:704:5
    {
      Label label__True_445_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_445 = &label__True_445_impl;
      USE(label__True_445);
      Label label__False_446_impl(this, {}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_446 = &label__False_446_impl;
      USE(label__False_446);
      TNode<Float64T> t1577 = UncheckedCast<Float64T>(Float64Add(implicit_cast<TNode<Float64T>>((*getIndexFloat_275).value()), implicit_cast<TNode<Float64T>>((*elementSizeFloat_279).value())));
      USE(implicit_cast<TNode<Float64T>>(t1577));
      TNode<BoolT> t1578 = UncheckedCast<BoolT>(Float64GreaterThan(implicit_cast<TNode<Float64T>>(t1577), implicit_cast<TNode<Float64T>>((*viewSizeFloat_278).value())));
      USE(implicit_cast<TNode<BoolT>>(t1578));
      Branch(implicit_cast<TNode<BoolT>>(t1578), label__True_445, label__False_446);
      if (label__True_445->is_used())
      {
        BIND(label__True_445);
        // ../../src/builtins/data-view.tq:704:59
        {
          // ../../src/builtins/data-view.tq:705:7
          ThrowRangeError(implicit_cast<TNode<Context>>(p_context), implicit_cast<MessageTemplate::Template>(MessageTemplate::kInvalidDataViewAccessorOffset));
        }
      }
      BIND(label__False_446);
    }
    // ../../src/builtins/data-view.tq:708:5
    TNode<UintPtrT> t1579 = UncheckedCast<UintPtrT>(UintPtrAdd(implicit_cast<TNode<UintPtrT>>((*getIndexWord_276).value()), implicit_cast<TNode<UintPtrT>>((*viewOffsetWord_277).value())));
    USE(implicit_cast<TNode<UintPtrT>>(t1579));
    TVARIABLE(UintPtrT, bufferIndex_280_impl);
    auto bufferIndex_280 = &bufferIndex_280_impl;
    USE(bufferIndex_280);
    *bufferIndex_280 = implicit_cast<TNode<UintPtrT>>(t1579);
    // ../../src/builtins/data-view.tq:710:5
    {
      Label label__False_449_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_449 = &label__False_449_impl;
      USE(label__False_449);
      bool t1580 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS));
      USE(implicit_cast<bool>(t1580));
      bool t1581 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS));
      USE(implicit_cast<bool>(t1581));
      if ((implicit_cast<bool>((implicit_cast<bool>(t1580) || implicit_cast<bool>(t1581))))) {
        // ../../src/builtins/data-view.tq:710:76
        {
          // ../../src/builtins/data-view.tq:711:7
          StoreDataViewBigInt(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_280).value()), implicit_cast<TNode<BigInt>>((*bigIntValue_273).value()), implicit_cast<TNode<BoolT>>((*littleEndian_271).value()));
        }
      } else {
        // ../../src/builtins/data-view.tq:712:12
        {
          // ../../src/builtins/data-view.tq:713:7
          TNode<Float64T> t1582 = UncheckedCast<Float64T>(ChangeNumberToFloat64(implicit_cast<TNode<Number>>((*numValue_274).value())));
          USE(implicit_cast<TNode<Float64T>>(t1582));
          TVARIABLE(Float64T, doubleValue_281_impl);
          auto doubleValue_281 = &doubleValue_281_impl;
          USE(doubleValue_281);
          *doubleValue_281 = implicit_cast<TNode<Float64T>>(t1582);
          // ../../src/builtins/data-view.tq:715:7
          {
            Label label__False_452_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
            Label* label__False_452 = &label__False_452_impl;
            USE(label__False_452);
            bool t1583 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT8_ELEMENTS));
            USE(implicit_cast<bool>(t1583));
            bool t1584 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT8_ELEMENTS));
            USE(implicit_cast<bool>(t1584));
            if ((implicit_cast<bool>((implicit_cast<bool>(t1583) || implicit_cast<bool>(t1584))))) {
              // ../../src/builtins/data-view.tq:715:70
              {
                // ../../src/builtins/data-view.tq:716:9
                TNode<Uint32T> t1585 = UncheckedCast<Uint32T>(TruncateFloat64ToWord32(implicit_cast<TNode<Float64T>>((*doubleValue_281).value())));
                USE(implicit_cast<TNode<Uint32T>>(t1585));
                StoreDataView8(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_280).value()), implicit_cast<TNode<Uint32T>>(t1585));
              }
            } else {
              // ../../src/builtins/data-view.tq:718:14
              {
                Label label__False_455_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                Label* label__False_455 = &label__False_455_impl;
                USE(label__False_455);
                bool t1586 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT16_ELEMENTS));
                USE(implicit_cast<bool>(t1586));
                bool t1587 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT16_ELEMENTS));
                USE(implicit_cast<bool>(t1587));
                if ((implicit_cast<bool>((implicit_cast<bool>(t1586) || implicit_cast<bool>(t1587))))) {
                  // ../../src/builtins/data-view.tq:718:79
                  {
                    // ../../src/builtins/data-view.tq:719:9
                    TNode<Uint32T> t1588 = UncheckedCast<Uint32T>(TruncateFloat64ToWord32(implicit_cast<TNode<Float64T>>((*doubleValue_281).value())));
                    USE(implicit_cast<TNode<Uint32T>>(t1588));
                    StoreDataView16(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_280).value()), implicit_cast<TNode<Uint32T>>(t1588), implicit_cast<TNode<BoolT>>((*littleEndian_271).value()));
                  }
                } else {
                  // ../../src/builtins/data-view.tq:722:14
                  {
                    Label label__False_458_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
                    Label* label__False_458 = &label__False_458_impl;
                    USE(label__False_458);
                    bool t1589 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(UINT32_ELEMENTS));
                    USE(implicit_cast<bool>(t1589));
                    bool t1590 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(INT32_ELEMENTS));
                    USE(implicit_cast<bool>(t1590));
                    if ((implicit_cast<bool>((implicit_cast<bool>(t1589) || implicit_cast<bool>(t1590))))) {
                      // ../../src/builtins/data-view.tq:722:79
                      {
                        // ../../src/builtins/data-view.tq:723:9
                        TNode<Uint32T> t1591 = UncheckedCast<Uint32T>(TruncateFloat64ToWord32(implicit_cast<TNode<Float64T>>((*doubleValue_281).value())));
                        USE(implicit_cast<TNode<Uint32T>>(t1591));
                        StoreDataView32(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_280).value()), implicit_cast<TNode<Uint32T>>(t1591), implicit_cast<TNode<BoolT>>((*littleEndian_271).value()));
                      }
                    } else {
                      // ../../src/builtins/data-view.tq:726:14
                      {
                        bool t1592 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS));
                        USE(implicit_cast<bool>(t1592));
                        if ((implicit_cast<bool>(t1592))) {
                          // ../../src/builtins/data-view.tq:726:54
                          {
                            // ../../src/builtins/data-view.tq:727:9
                            TNode<Float32T> t1593 = UncheckedCast<Float32T>(TruncateFloat64ToFloat32(implicit_cast<TNode<Float64T>>((*doubleValue_281).value())));
                            USE(implicit_cast<TNode<Float32T>>(t1593));
                            TVARIABLE(Float32T, floatValue_282_impl);
                            auto floatValue_282 = &floatValue_282_impl;
                            USE(floatValue_282);
                            *floatValue_282 = implicit_cast<TNode<Float32T>>(t1593);
                            // ../../src/builtins/data-view.tq:728:9
                            TNode<Uint32T> t1594 = UncheckedCast<Uint32T>(BitcastFloat32ToInt32(implicit_cast<TNode<Float32T>>((*floatValue_282).value())));
                            USE(implicit_cast<TNode<Uint32T>>(t1594));
                            StoreDataView32(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_280).value()), implicit_cast<TNode<Uint32T>>(t1594), implicit_cast<TNode<BoolT>>((*littleEndian_271).value()));
                          }
                        } else {
                          // ../../src/builtins/data-view.tq:731:14
                          {
                            bool t1595 = ElementsKindEqual(implicit_cast<ElementsKind>(p_kind), implicit_cast<ElementsKind>(FLOAT64_ELEMENTS));
                            USE(implicit_cast<bool>(t1595));
                            if ((implicit_cast<bool>(t1595))) {
                              // ../../src/builtins/data-view.tq:731:54
                              {
                                // ../../src/builtins/data-view.tq:732:9
                                TNode<Uint32T> t1596 = UncheckedCast<Uint32T>(Float64ExtractLowWord32(implicit_cast<TNode<Float64T>>((*doubleValue_281).value())));
                                USE(implicit_cast<TNode<Uint32T>>(t1596));
                                TVARIABLE(Uint32T, lowWord_283_impl);
                                auto lowWord_283 = &lowWord_283_impl;
                                USE(lowWord_283);
                                *lowWord_283 = implicit_cast<TNode<Uint32T>>(t1596);
                                // ../../src/builtins/data-view.tq:733:9
                                TNode<Uint32T> t1597 = UncheckedCast<Uint32T>(Float64ExtractHighWord32(implicit_cast<TNode<Float64T>>((*doubleValue_281).value())));
                                USE(implicit_cast<TNode<Uint32T>>(t1597));
                                TVARIABLE(Uint32T, highWord_284_impl);
                                auto highWord_284 = &highWord_284_impl;
                                USE(highWord_284);
                                *highWord_284 = implicit_cast<TNode<Uint32T>>(t1597);
                                // ../../src/builtins/data-view.tq:734:9
                                StoreDataView64(implicit_cast<TNode<JSArrayBuffer>>((*buffer_272).value()), implicit_cast<TNode<UintPtrT>>((*bufferIndex_280).value()), implicit_cast<TNode<Uint32T>>((*lowWord_283).value()), implicit_cast<TNode<Uint32T>>((*highWord_284).value()), implicit_cast<TNode<BoolT>>((*littleEndian_271).value()));
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    // ../../src/builtins/data-view.tq:737:5
    *_return_268 = implicit_cast<TNode<Object>>(Undefined());
    Goto(label_macro_end_1481);
  }
  BIND(label_macro_end_1481);
  return implicit_cast<TNode<Object>>((*_return_268).value());
}

TF_BUILTIN(DataViewPrototypeSetUint8, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:741:65
  {
    // ../../src/builtins/data-view.tq:742:5
    auto t1598 = [=]() {
      int31_t t1600 = 0;
      TNode<IntPtrT> t1601 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1600)));
      TNode<Object> t1602 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1601)));
      return implicit_cast<TNode<Object>>(t1602);
    };
    auto t1599 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1603_846_impl);
    auto t1603_846 = &t1603_846_impl;
    USE(t1603_846);
    {
      Label label__True_463_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_463 = &label__True_463_impl;
      USE(label__True_463);
      Label label__False_464_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_464 = &label__False_464_impl;
      USE(label__False_464);
      Label label__done_847_1484_impl(this, {t1603_846}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_847_1484 = &label__done_847_1484_impl;
      USE(label__done_847_1484);
      TNode<IntPtrT> t1604 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1605 = 0;
      TNode<IntPtrT> t1606 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1605)));
      TNode<BoolT> t1607 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1604), implicit_cast<TNode<IntPtrT>>(t1606)));
      USE(implicit_cast<TNode<BoolT>>(t1607));
      Branch(implicit_cast<TNode<BoolT>>(t1607), label__True_463, label__False_464);
      BIND(label__True_463);
            *t1603_846 = implicit_cast<TNode<Object>>(t1598());
      Goto(label__done_847_1484);
      BIND(label__False_464);
            *t1603_846 = implicit_cast<TNode<Object>>(t1599());
      Goto(label__done_847_1484);
      BIND(label__done_847_1484);
    }
    TVARIABLE(Object, offset_285_impl);
    auto offset_285 = &offset_285_impl;
    USE(offset_285);
    *offset_285 = implicit_cast<TNode<Object>>((*t1603_846).value());
    // ../../src/builtins/data-view.tq:743:5
    auto t1608 = [=]() {
      int31_t t1610 = 1;
      TNode<IntPtrT> t1611 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1610)));
      TNode<Object> t1612 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1611)));
      return implicit_cast<TNode<Object>>(t1612);
    };
    auto t1609 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1613_848_impl);
    auto t1613_848 = &t1613_848_impl;
    USE(t1613_848);
    {
      Label label__True_465_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_465 = &label__True_465_impl;
      USE(label__True_465);
      Label label__False_466_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_466 = &label__False_466_impl;
      USE(label__False_466);
      Label label__done_849_1485_impl(this, {t1613_848}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_849_1485 = &label__done_849_1485_impl;
      USE(label__done_849_1485);
      TNode<IntPtrT> t1614 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1615 = 1;
      TNode<IntPtrT> t1616 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1615)));
      TNode<BoolT> t1617 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1614), implicit_cast<TNode<IntPtrT>>(t1616)));
      USE(implicit_cast<TNode<BoolT>>(t1617));
      Branch(implicit_cast<TNode<BoolT>>(t1617), label__True_465, label__False_466);
      BIND(label__True_465);
            *t1613_848 = implicit_cast<TNode<Object>>(t1608());
      Goto(label__done_849_1485);
      BIND(label__False_466);
            *t1613_848 = implicit_cast<TNode<Object>>(t1609());
      Goto(label__done_849_1485);
      BIND(label__done_849_1485);
    }
    TVARIABLE(Object, value_286_impl);
    auto value_286 = &value_286_impl;
    USE(value_286);
    *value_286 = implicit_cast<TNode<Object>>((*t1613_848).value());
    // ../../src/builtins/data-view.tq:744:5
    TNode<Object> t1618 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_285).value()), implicit_cast<TNode<Object>>((*value_286).value()), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<ElementsKind>(UINT8_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1618));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1618));
  }
}

TF_BUILTIN(DataViewPrototypeSetInt8, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:749:65
  {
    // ../../src/builtins/data-view.tq:750:5
    auto t1619 = [=]() {
      int31_t t1621 = 0;
      TNode<IntPtrT> t1622 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1621)));
      TNode<Object> t1623 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1622)));
      return implicit_cast<TNode<Object>>(t1623);
    };
    auto t1620 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1624_850_impl);
    auto t1624_850 = &t1624_850_impl;
    USE(t1624_850);
    {
      Label label__True_467_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_467 = &label__True_467_impl;
      USE(label__True_467);
      Label label__False_468_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_468 = &label__False_468_impl;
      USE(label__False_468);
      Label label__done_851_1486_impl(this, {t1624_850}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_851_1486 = &label__done_851_1486_impl;
      USE(label__done_851_1486);
      TNode<IntPtrT> t1625 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1626 = 0;
      TNode<IntPtrT> t1627 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1626)));
      TNode<BoolT> t1628 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1625), implicit_cast<TNode<IntPtrT>>(t1627)));
      USE(implicit_cast<TNode<BoolT>>(t1628));
      Branch(implicit_cast<TNode<BoolT>>(t1628), label__True_467, label__False_468);
      BIND(label__True_467);
            *t1624_850 = implicit_cast<TNode<Object>>(t1619());
      Goto(label__done_851_1486);
      BIND(label__False_468);
            *t1624_850 = implicit_cast<TNode<Object>>(t1620());
      Goto(label__done_851_1486);
      BIND(label__done_851_1486);
    }
    TVARIABLE(Object, offset_287_impl);
    auto offset_287 = &offset_287_impl;
    USE(offset_287);
    *offset_287 = implicit_cast<TNode<Object>>((*t1624_850).value());
    // ../../src/builtins/data-view.tq:751:5
    auto t1629 = [=]() {
      int31_t t1631 = 1;
      TNode<IntPtrT> t1632 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1631)));
      TNode<Object> t1633 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1632)));
      return implicit_cast<TNode<Object>>(t1633);
    };
    auto t1630 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1634_852_impl);
    auto t1634_852 = &t1634_852_impl;
    USE(t1634_852);
    {
      Label label__True_469_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_469 = &label__True_469_impl;
      USE(label__True_469);
      Label label__False_470_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_470 = &label__False_470_impl;
      USE(label__False_470);
      Label label__done_853_1487_impl(this, {t1634_852}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_853_1487 = &label__done_853_1487_impl;
      USE(label__done_853_1487);
      TNode<IntPtrT> t1635 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1636 = 1;
      TNode<IntPtrT> t1637 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1636)));
      TNode<BoolT> t1638 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1635), implicit_cast<TNode<IntPtrT>>(t1637)));
      USE(implicit_cast<TNode<BoolT>>(t1638));
      Branch(implicit_cast<TNode<BoolT>>(t1638), label__True_469, label__False_470);
      BIND(label__True_469);
            *t1634_852 = implicit_cast<TNode<Object>>(t1629());
      Goto(label__done_853_1487);
      BIND(label__False_470);
            *t1634_852 = implicit_cast<TNode<Object>>(t1630());
      Goto(label__done_853_1487);
      BIND(label__done_853_1487);
    }
    TVARIABLE(Object, value_288_impl);
    auto value_288 = &value_288_impl;
    USE(value_288);
    *value_288 = implicit_cast<TNode<Object>>((*t1634_852).value());
    // ../../src/builtins/data-view.tq:752:5
    TNode<Object> t1639 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_287).value()), implicit_cast<TNode<Object>>((*value_288).value()), implicit_cast<TNode<Object>>(Undefined()), implicit_cast<ElementsKind>(INT8_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1639));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1639));
  }
}

TF_BUILTIN(DataViewPrototypeSetUint16, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:757:65
  {
    // ../../src/builtins/data-view.tq:758:5
    auto t1640 = [=]() {
      int31_t t1642 = 0;
      TNode<IntPtrT> t1643 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1642)));
      TNode<Object> t1644 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1643)));
      return implicit_cast<TNode<Object>>(t1644);
    };
    auto t1641 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1645_854_impl);
    auto t1645_854 = &t1645_854_impl;
    USE(t1645_854);
    {
      Label label__True_471_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_471 = &label__True_471_impl;
      USE(label__True_471);
      Label label__False_472_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_472 = &label__False_472_impl;
      USE(label__False_472);
      Label label__done_855_1488_impl(this, {t1645_854}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_855_1488 = &label__done_855_1488_impl;
      USE(label__done_855_1488);
      TNode<IntPtrT> t1646 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1647 = 0;
      TNode<IntPtrT> t1648 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1647)));
      TNode<BoolT> t1649 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1646), implicit_cast<TNode<IntPtrT>>(t1648)));
      USE(implicit_cast<TNode<BoolT>>(t1649));
      Branch(implicit_cast<TNode<BoolT>>(t1649), label__True_471, label__False_472);
      BIND(label__True_471);
            *t1645_854 = implicit_cast<TNode<Object>>(t1640());
      Goto(label__done_855_1488);
      BIND(label__False_472);
            *t1645_854 = implicit_cast<TNode<Object>>(t1641());
      Goto(label__done_855_1488);
      BIND(label__done_855_1488);
    }
    TVARIABLE(Object, offset_289_impl);
    auto offset_289 = &offset_289_impl;
    USE(offset_289);
    *offset_289 = implicit_cast<TNode<Object>>((*t1645_854).value());
    // ../../src/builtins/data-view.tq:759:5
    auto t1650 = [=]() {
      int31_t t1652 = 1;
      TNode<IntPtrT> t1653 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1652)));
      TNode<Object> t1654 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1653)));
      return implicit_cast<TNode<Object>>(t1654);
    };
    auto t1651 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1655_856_impl);
    auto t1655_856 = &t1655_856_impl;
    USE(t1655_856);
    {
      Label label__True_473_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_473 = &label__True_473_impl;
      USE(label__True_473);
      Label label__False_474_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_474 = &label__False_474_impl;
      USE(label__False_474);
      Label label__done_857_1489_impl(this, {t1655_856}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_857_1489 = &label__done_857_1489_impl;
      USE(label__done_857_1489);
      TNode<IntPtrT> t1656 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1657 = 1;
      TNode<IntPtrT> t1658 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1657)));
      TNode<BoolT> t1659 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1656), implicit_cast<TNode<IntPtrT>>(t1658)));
      USE(implicit_cast<TNode<BoolT>>(t1659));
      Branch(implicit_cast<TNode<BoolT>>(t1659), label__True_473, label__False_474);
      BIND(label__True_473);
            *t1655_856 = implicit_cast<TNode<Object>>(t1650());
      Goto(label__done_857_1489);
      BIND(label__False_474);
            *t1655_856 = implicit_cast<TNode<Object>>(t1651());
      Goto(label__done_857_1489);
      BIND(label__done_857_1489);
    }
    TVARIABLE(Object, value_290_impl);
    auto value_290 = &value_290_impl;
    USE(value_290);
    *value_290 = implicit_cast<TNode<Object>>((*t1655_856).value());
    // ../../src/builtins/data-view.tq:760:5
    auto t1660 = [=]() {
      int31_t t1662 = 2;
      TNode<IntPtrT> t1663 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1662)));
      TNode<Object> t1664 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1663)));
      return implicit_cast<TNode<Object>>(t1664);
    };
    auto t1661 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1665_858_impl);
    auto t1665_858 = &t1665_858_impl;
    USE(t1665_858);
    {
      Label label__True_475_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_475 = &label__True_475_impl;
      USE(label__True_475);
      Label label__False_476_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_476 = &label__False_476_impl;
      USE(label__False_476);
      Label label__done_859_1490_impl(this, {t1665_858}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_859_1490 = &label__done_859_1490_impl;
      USE(label__done_859_1490);
      TNode<IntPtrT> t1666 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1667 = 2;
      TNode<IntPtrT> t1668 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1667)));
      TNode<BoolT> t1669 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1666), implicit_cast<TNode<IntPtrT>>(t1668)));
      USE(implicit_cast<TNode<BoolT>>(t1669));
      Branch(implicit_cast<TNode<BoolT>>(t1669), label__True_475, label__False_476);
      BIND(label__True_475);
            *t1665_858 = implicit_cast<TNode<Object>>(t1660());
      Goto(label__done_859_1490);
      BIND(label__False_476);
            *t1665_858 = implicit_cast<TNode<Object>>(t1661());
      Goto(label__done_859_1490);
      BIND(label__done_859_1490);
    }
    TVARIABLE(Object, isLittleEndian_291_impl);
    auto isLittleEndian_291 = &isLittleEndian_291_impl;
    USE(isLittleEndian_291);
    *isLittleEndian_291 = implicit_cast<TNode<Object>>((*t1665_858).value());
    // ../../src/builtins/data-view.tq:762:5
    TNode<Object> t1670 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_289).value()), implicit_cast<TNode<Object>>((*value_290).value()), implicit_cast<TNode<Object>>((*isLittleEndian_291).value()), implicit_cast<ElementsKind>(UINT16_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1670));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1670));
  }
}

TF_BUILTIN(DataViewPrototypeSetInt16, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:767:65
  {
    // ../../src/builtins/data-view.tq:768:5
    auto t1671 = [=]() {
      int31_t t1673 = 0;
      TNode<IntPtrT> t1674 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1673)));
      TNode<Object> t1675 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1674)));
      return implicit_cast<TNode<Object>>(t1675);
    };
    auto t1672 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1676_860_impl);
    auto t1676_860 = &t1676_860_impl;
    USE(t1676_860);
    {
      Label label__True_477_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_477 = &label__True_477_impl;
      USE(label__True_477);
      Label label__False_478_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_478 = &label__False_478_impl;
      USE(label__False_478);
      Label label__done_861_1491_impl(this, {t1676_860}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_861_1491 = &label__done_861_1491_impl;
      USE(label__done_861_1491);
      TNode<IntPtrT> t1677 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1678 = 0;
      TNode<IntPtrT> t1679 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1678)));
      TNode<BoolT> t1680 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1677), implicit_cast<TNode<IntPtrT>>(t1679)));
      USE(implicit_cast<TNode<BoolT>>(t1680));
      Branch(implicit_cast<TNode<BoolT>>(t1680), label__True_477, label__False_478);
      BIND(label__True_477);
            *t1676_860 = implicit_cast<TNode<Object>>(t1671());
      Goto(label__done_861_1491);
      BIND(label__False_478);
            *t1676_860 = implicit_cast<TNode<Object>>(t1672());
      Goto(label__done_861_1491);
      BIND(label__done_861_1491);
    }
    TVARIABLE(Object, offset_292_impl);
    auto offset_292 = &offset_292_impl;
    USE(offset_292);
    *offset_292 = implicit_cast<TNode<Object>>((*t1676_860).value());
    // ../../src/builtins/data-view.tq:769:5
    auto t1681 = [=]() {
      int31_t t1683 = 1;
      TNode<IntPtrT> t1684 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1683)));
      TNode<Object> t1685 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1684)));
      return implicit_cast<TNode<Object>>(t1685);
    };
    auto t1682 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1686_862_impl);
    auto t1686_862 = &t1686_862_impl;
    USE(t1686_862);
    {
      Label label__True_479_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_479 = &label__True_479_impl;
      USE(label__True_479);
      Label label__False_480_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_480 = &label__False_480_impl;
      USE(label__False_480);
      Label label__done_863_1492_impl(this, {t1686_862}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_863_1492 = &label__done_863_1492_impl;
      USE(label__done_863_1492);
      TNode<IntPtrT> t1687 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1688 = 1;
      TNode<IntPtrT> t1689 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1688)));
      TNode<BoolT> t1690 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1687), implicit_cast<TNode<IntPtrT>>(t1689)));
      USE(implicit_cast<TNode<BoolT>>(t1690));
      Branch(implicit_cast<TNode<BoolT>>(t1690), label__True_479, label__False_480);
      BIND(label__True_479);
            *t1686_862 = implicit_cast<TNode<Object>>(t1681());
      Goto(label__done_863_1492);
      BIND(label__False_480);
            *t1686_862 = implicit_cast<TNode<Object>>(t1682());
      Goto(label__done_863_1492);
      BIND(label__done_863_1492);
    }
    TVARIABLE(Object, value_293_impl);
    auto value_293 = &value_293_impl;
    USE(value_293);
    *value_293 = implicit_cast<TNode<Object>>((*t1686_862).value());
    // ../../src/builtins/data-view.tq:770:5
    auto t1691 = [=]() {
      int31_t t1693 = 2;
      TNode<IntPtrT> t1694 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1693)));
      TNode<Object> t1695 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1694)));
      return implicit_cast<TNode<Object>>(t1695);
    };
    auto t1692 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1696_864_impl);
    auto t1696_864 = &t1696_864_impl;
    USE(t1696_864);
    {
      Label label__True_481_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_481 = &label__True_481_impl;
      USE(label__True_481);
      Label label__False_482_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_482 = &label__False_482_impl;
      USE(label__False_482);
      Label label__done_865_1493_impl(this, {t1696_864}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_865_1493 = &label__done_865_1493_impl;
      USE(label__done_865_1493);
      TNode<IntPtrT> t1697 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1698 = 2;
      TNode<IntPtrT> t1699 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1698)));
      TNode<BoolT> t1700 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1697), implicit_cast<TNode<IntPtrT>>(t1699)));
      USE(implicit_cast<TNode<BoolT>>(t1700));
      Branch(implicit_cast<TNode<BoolT>>(t1700), label__True_481, label__False_482);
      BIND(label__True_481);
            *t1696_864 = implicit_cast<TNode<Object>>(t1691());
      Goto(label__done_865_1493);
      BIND(label__False_482);
            *t1696_864 = implicit_cast<TNode<Object>>(t1692());
      Goto(label__done_865_1493);
      BIND(label__done_865_1493);
    }
    TVARIABLE(Object, isLittleEndian_294_impl);
    auto isLittleEndian_294 = &isLittleEndian_294_impl;
    USE(isLittleEndian_294);
    *isLittleEndian_294 = implicit_cast<TNode<Object>>((*t1696_864).value());
    // ../../src/builtins/data-view.tq:772:5
    TNode<Object> t1701 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_292).value()), implicit_cast<TNode<Object>>((*value_293).value()), implicit_cast<TNode<Object>>((*isLittleEndian_294).value()), implicit_cast<ElementsKind>(INT16_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1701));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1701));
  }
}

TF_BUILTIN(DataViewPrototypeSetUint32, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:777:65
  {
    // ../../src/builtins/data-view.tq:778:5
    auto t1702 = [=]() {
      int31_t t1704 = 0;
      TNode<IntPtrT> t1705 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1704)));
      TNode<Object> t1706 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1705)));
      return implicit_cast<TNode<Object>>(t1706);
    };
    auto t1703 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1707_866_impl);
    auto t1707_866 = &t1707_866_impl;
    USE(t1707_866);
    {
      Label label__True_483_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_483 = &label__True_483_impl;
      USE(label__True_483);
      Label label__False_484_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_484 = &label__False_484_impl;
      USE(label__False_484);
      Label label__done_867_1494_impl(this, {t1707_866}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_867_1494 = &label__done_867_1494_impl;
      USE(label__done_867_1494);
      TNode<IntPtrT> t1708 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1709 = 0;
      TNode<IntPtrT> t1710 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1709)));
      TNode<BoolT> t1711 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1708), implicit_cast<TNode<IntPtrT>>(t1710)));
      USE(implicit_cast<TNode<BoolT>>(t1711));
      Branch(implicit_cast<TNode<BoolT>>(t1711), label__True_483, label__False_484);
      BIND(label__True_483);
            *t1707_866 = implicit_cast<TNode<Object>>(t1702());
      Goto(label__done_867_1494);
      BIND(label__False_484);
            *t1707_866 = implicit_cast<TNode<Object>>(t1703());
      Goto(label__done_867_1494);
      BIND(label__done_867_1494);
    }
    TVARIABLE(Object, offset_295_impl);
    auto offset_295 = &offset_295_impl;
    USE(offset_295);
    *offset_295 = implicit_cast<TNode<Object>>((*t1707_866).value());
    // ../../src/builtins/data-view.tq:779:5
    auto t1712 = [=]() {
      int31_t t1714 = 1;
      TNode<IntPtrT> t1715 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1714)));
      TNode<Object> t1716 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1715)));
      return implicit_cast<TNode<Object>>(t1716);
    };
    auto t1713 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1717_868_impl);
    auto t1717_868 = &t1717_868_impl;
    USE(t1717_868);
    {
      Label label__True_485_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_485 = &label__True_485_impl;
      USE(label__True_485);
      Label label__False_486_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_486 = &label__False_486_impl;
      USE(label__False_486);
      Label label__done_869_1495_impl(this, {t1717_868}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_869_1495 = &label__done_869_1495_impl;
      USE(label__done_869_1495);
      TNode<IntPtrT> t1718 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1719 = 1;
      TNode<IntPtrT> t1720 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1719)));
      TNode<BoolT> t1721 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1718), implicit_cast<TNode<IntPtrT>>(t1720)));
      USE(implicit_cast<TNode<BoolT>>(t1721));
      Branch(implicit_cast<TNode<BoolT>>(t1721), label__True_485, label__False_486);
      BIND(label__True_485);
            *t1717_868 = implicit_cast<TNode<Object>>(t1712());
      Goto(label__done_869_1495);
      BIND(label__False_486);
            *t1717_868 = implicit_cast<TNode<Object>>(t1713());
      Goto(label__done_869_1495);
      BIND(label__done_869_1495);
    }
    TVARIABLE(Object, value_296_impl);
    auto value_296 = &value_296_impl;
    USE(value_296);
    *value_296 = implicit_cast<TNode<Object>>((*t1717_868).value());
    // ../../src/builtins/data-view.tq:780:5
    auto t1722 = [=]() {
      int31_t t1724 = 2;
      TNode<IntPtrT> t1725 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1724)));
      TNode<Object> t1726 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1725)));
      return implicit_cast<TNode<Object>>(t1726);
    };
    auto t1723 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1727_870_impl);
    auto t1727_870 = &t1727_870_impl;
    USE(t1727_870);
    {
      Label label__True_487_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_487 = &label__True_487_impl;
      USE(label__True_487);
      Label label__False_488_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_488 = &label__False_488_impl;
      USE(label__False_488);
      Label label__done_871_1496_impl(this, {t1727_870}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_871_1496 = &label__done_871_1496_impl;
      USE(label__done_871_1496);
      TNode<IntPtrT> t1728 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1729 = 2;
      TNode<IntPtrT> t1730 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1729)));
      TNode<BoolT> t1731 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1728), implicit_cast<TNode<IntPtrT>>(t1730)));
      USE(implicit_cast<TNode<BoolT>>(t1731));
      Branch(implicit_cast<TNode<BoolT>>(t1731), label__True_487, label__False_488);
      BIND(label__True_487);
            *t1727_870 = implicit_cast<TNode<Object>>(t1722());
      Goto(label__done_871_1496);
      BIND(label__False_488);
            *t1727_870 = implicit_cast<TNode<Object>>(t1723());
      Goto(label__done_871_1496);
      BIND(label__done_871_1496);
    }
    TVARIABLE(Object, isLittleEndian_297_impl);
    auto isLittleEndian_297 = &isLittleEndian_297_impl;
    USE(isLittleEndian_297);
    *isLittleEndian_297 = implicit_cast<TNode<Object>>((*t1727_870).value());
    // ../../src/builtins/data-view.tq:782:5
    TNode<Object> t1732 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_295).value()), implicit_cast<TNode<Object>>((*value_296).value()), implicit_cast<TNode<Object>>((*isLittleEndian_297).value()), implicit_cast<ElementsKind>(UINT32_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1732));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1732));
  }
}

TF_BUILTIN(DataViewPrototypeSetInt32, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:787:65
  {
    // ../../src/builtins/data-view.tq:788:5
    auto t1733 = [=]() {
      int31_t t1735 = 0;
      TNode<IntPtrT> t1736 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1735)));
      TNode<Object> t1737 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1736)));
      return implicit_cast<TNode<Object>>(t1737);
    };
    auto t1734 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1738_872_impl);
    auto t1738_872 = &t1738_872_impl;
    USE(t1738_872);
    {
      Label label__True_489_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_489 = &label__True_489_impl;
      USE(label__True_489);
      Label label__False_490_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_490 = &label__False_490_impl;
      USE(label__False_490);
      Label label__done_873_1497_impl(this, {t1738_872}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_873_1497 = &label__done_873_1497_impl;
      USE(label__done_873_1497);
      TNode<IntPtrT> t1739 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1740 = 0;
      TNode<IntPtrT> t1741 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1740)));
      TNode<BoolT> t1742 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1739), implicit_cast<TNode<IntPtrT>>(t1741)));
      USE(implicit_cast<TNode<BoolT>>(t1742));
      Branch(implicit_cast<TNode<BoolT>>(t1742), label__True_489, label__False_490);
      BIND(label__True_489);
            *t1738_872 = implicit_cast<TNode<Object>>(t1733());
      Goto(label__done_873_1497);
      BIND(label__False_490);
            *t1738_872 = implicit_cast<TNode<Object>>(t1734());
      Goto(label__done_873_1497);
      BIND(label__done_873_1497);
    }
    TVARIABLE(Object, offset_298_impl);
    auto offset_298 = &offset_298_impl;
    USE(offset_298);
    *offset_298 = implicit_cast<TNode<Object>>((*t1738_872).value());
    // ../../src/builtins/data-view.tq:789:5
    auto t1743 = [=]() {
      int31_t t1745 = 1;
      TNode<IntPtrT> t1746 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1745)));
      TNode<Object> t1747 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1746)));
      return implicit_cast<TNode<Object>>(t1747);
    };
    auto t1744 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1748_874_impl);
    auto t1748_874 = &t1748_874_impl;
    USE(t1748_874);
    {
      Label label__True_491_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_491 = &label__True_491_impl;
      USE(label__True_491);
      Label label__False_492_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_492 = &label__False_492_impl;
      USE(label__False_492);
      Label label__done_875_1498_impl(this, {t1748_874}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_875_1498 = &label__done_875_1498_impl;
      USE(label__done_875_1498);
      TNode<IntPtrT> t1749 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1750 = 1;
      TNode<IntPtrT> t1751 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1750)));
      TNode<BoolT> t1752 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1749), implicit_cast<TNode<IntPtrT>>(t1751)));
      USE(implicit_cast<TNode<BoolT>>(t1752));
      Branch(implicit_cast<TNode<BoolT>>(t1752), label__True_491, label__False_492);
      BIND(label__True_491);
            *t1748_874 = implicit_cast<TNode<Object>>(t1743());
      Goto(label__done_875_1498);
      BIND(label__False_492);
            *t1748_874 = implicit_cast<TNode<Object>>(t1744());
      Goto(label__done_875_1498);
      BIND(label__done_875_1498);
    }
    TVARIABLE(Object, value_299_impl);
    auto value_299 = &value_299_impl;
    USE(value_299);
    *value_299 = implicit_cast<TNode<Object>>((*t1748_874).value());
    // ../../src/builtins/data-view.tq:790:5
    auto t1753 = [=]() {
      int31_t t1755 = 2;
      TNode<IntPtrT> t1756 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1755)));
      TNode<Object> t1757 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1756)));
      return implicit_cast<TNode<Object>>(t1757);
    };
    auto t1754 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1758_876_impl);
    auto t1758_876 = &t1758_876_impl;
    USE(t1758_876);
    {
      Label label__True_493_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_493 = &label__True_493_impl;
      USE(label__True_493);
      Label label__False_494_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_494 = &label__False_494_impl;
      USE(label__False_494);
      Label label__done_877_1499_impl(this, {t1758_876}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_877_1499 = &label__done_877_1499_impl;
      USE(label__done_877_1499);
      TNode<IntPtrT> t1759 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1760 = 2;
      TNode<IntPtrT> t1761 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1760)));
      TNode<BoolT> t1762 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1759), implicit_cast<TNode<IntPtrT>>(t1761)));
      USE(implicit_cast<TNode<BoolT>>(t1762));
      Branch(implicit_cast<TNode<BoolT>>(t1762), label__True_493, label__False_494);
      BIND(label__True_493);
            *t1758_876 = implicit_cast<TNode<Object>>(t1753());
      Goto(label__done_877_1499);
      BIND(label__False_494);
            *t1758_876 = implicit_cast<TNode<Object>>(t1754());
      Goto(label__done_877_1499);
      BIND(label__done_877_1499);
    }
    TVARIABLE(Object, isLittleEndian_300_impl);
    auto isLittleEndian_300 = &isLittleEndian_300_impl;
    USE(isLittleEndian_300);
    *isLittleEndian_300 = implicit_cast<TNode<Object>>((*t1758_876).value());
    // ../../src/builtins/data-view.tq:792:5
    TNode<Object> t1763 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_298).value()), implicit_cast<TNode<Object>>((*value_299).value()), implicit_cast<TNode<Object>>((*isLittleEndian_300).value()), implicit_cast<ElementsKind>(INT32_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1763));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1763));
  }
}

TF_BUILTIN(DataViewPrototypeSetFloat32, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:797:65
  {
    // ../../src/builtins/data-view.tq:798:5
    auto t1764 = [=]() {
      int31_t t1766 = 0;
      TNode<IntPtrT> t1767 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1766)));
      TNode<Object> t1768 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1767)));
      return implicit_cast<TNode<Object>>(t1768);
    };
    auto t1765 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1769_878_impl);
    auto t1769_878 = &t1769_878_impl;
    USE(t1769_878);
    {
      Label label__True_495_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_495 = &label__True_495_impl;
      USE(label__True_495);
      Label label__False_496_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_496 = &label__False_496_impl;
      USE(label__False_496);
      Label label__done_879_1500_impl(this, {t1769_878}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_879_1500 = &label__done_879_1500_impl;
      USE(label__done_879_1500);
      TNode<IntPtrT> t1770 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1771 = 0;
      TNode<IntPtrT> t1772 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1771)));
      TNode<BoolT> t1773 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1770), implicit_cast<TNode<IntPtrT>>(t1772)));
      USE(implicit_cast<TNode<BoolT>>(t1773));
      Branch(implicit_cast<TNode<BoolT>>(t1773), label__True_495, label__False_496);
      BIND(label__True_495);
            *t1769_878 = implicit_cast<TNode<Object>>(t1764());
      Goto(label__done_879_1500);
      BIND(label__False_496);
            *t1769_878 = implicit_cast<TNode<Object>>(t1765());
      Goto(label__done_879_1500);
      BIND(label__done_879_1500);
    }
    TVARIABLE(Object, offset_301_impl);
    auto offset_301 = &offset_301_impl;
    USE(offset_301);
    *offset_301 = implicit_cast<TNode<Object>>((*t1769_878).value());
    // ../../src/builtins/data-view.tq:799:5
    auto t1774 = [=]() {
      int31_t t1776 = 1;
      TNode<IntPtrT> t1777 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1776)));
      TNode<Object> t1778 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1777)));
      return implicit_cast<TNode<Object>>(t1778);
    };
    auto t1775 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1779_880_impl);
    auto t1779_880 = &t1779_880_impl;
    USE(t1779_880);
    {
      Label label__True_497_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_497 = &label__True_497_impl;
      USE(label__True_497);
      Label label__False_498_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_498 = &label__False_498_impl;
      USE(label__False_498);
      Label label__done_881_1501_impl(this, {t1779_880}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_881_1501 = &label__done_881_1501_impl;
      USE(label__done_881_1501);
      TNode<IntPtrT> t1780 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1781 = 1;
      TNode<IntPtrT> t1782 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1781)));
      TNode<BoolT> t1783 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1780), implicit_cast<TNode<IntPtrT>>(t1782)));
      USE(implicit_cast<TNode<BoolT>>(t1783));
      Branch(implicit_cast<TNode<BoolT>>(t1783), label__True_497, label__False_498);
      BIND(label__True_497);
            *t1779_880 = implicit_cast<TNode<Object>>(t1774());
      Goto(label__done_881_1501);
      BIND(label__False_498);
            *t1779_880 = implicit_cast<TNode<Object>>(t1775());
      Goto(label__done_881_1501);
      BIND(label__done_881_1501);
    }
    TVARIABLE(Object, value_302_impl);
    auto value_302 = &value_302_impl;
    USE(value_302);
    *value_302 = implicit_cast<TNode<Object>>((*t1779_880).value());
    // ../../src/builtins/data-view.tq:800:5
    auto t1784 = [=]() {
      int31_t t1786 = 2;
      TNode<IntPtrT> t1787 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1786)));
      TNode<Object> t1788 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1787)));
      return implicit_cast<TNode<Object>>(t1788);
    };
    auto t1785 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1789_882_impl);
    auto t1789_882 = &t1789_882_impl;
    USE(t1789_882);
    {
      Label label__True_499_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_499 = &label__True_499_impl;
      USE(label__True_499);
      Label label__False_500_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_500 = &label__False_500_impl;
      USE(label__False_500);
      Label label__done_883_1502_impl(this, {t1789_882}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_883_1502 = &label__done_883_1502_impl;
      USE(label__done_883_1502);
      TNode<IntPtrT> t1790 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1791 = 2;
      TNode<IntPtrT> t1792 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1791)));
      TNode<BoolT> t1793 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1790), implicit_cast<TNode<IntPtrT>>(t1792)));
      USE(implicit_cast<TNode<BoolT>>(t1793));
      Branch(implicit_cast<TNode<BoolT>>(t1793), label__True_499, label__False_500);
      BIND(label__True_499);
            *t1789_882 = implicit_cast<TNode<Object>>(t1784());
      Goto(label__done_883_1502);
      BIND(label__False_500);
            *t1789_882 = implicit_cast<TNode<Object>>(t1785());
      Goto(label__done_883_1502);
      BIND(label__done_883_1502);
    }
    TVARIABLE(Object, isLittleEndian_303_impl);
    auto isLittleEndian_303 = &isLittleEndian_303_impl;
    USE(isLittleEndian_303);
    *isLittleEndian_303 = implicit_cast<TNode<Object>>((*t1789_882).value());
    // ../../src/builtins/data-view.tq:802:5
    TNode<Object> t1794 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_301).value()), implicit_cast<TNode<Object>>((*value_302).value()), implicit_cast<TNode<Object>>((*isLittleEndian_303).value()), implicit_cast<ElementsKind>(FLOAT32_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1794));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1794));
  }
}

TF_BUILTIN(DataViewPrototypeSetFloat64, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:807:65
  {
    // ../../src/builtins/data-view.tq:808:5
    auto t1795 = [=]() {
      int31_t t1797 = 0;
      TNode<IntPtrT> t1798 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1797)));
      TNode<Object> t1799 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1798)));
      return implicit_cast<TNode<Object>>(t1799);
    };
    auto t1796 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1800_884_impl);
    auto t1800_884 = &t1800_884_impl;
    USE(t1800_884);
    {
      Label label__True_501_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_501 = &label__True_501_impl;
      USE(label__True_501);
      Label label__False_502_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_502 = &label__False_502_impl;
      USE(label__False_502);
      Label label__done_885_1503_impl(this, {t1800_884}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_885_1503 = &label__done_885_1503_impl;
      USE(label__done_885_1503);
      TNode<IntPtrT> t1801 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1802 = 0;
      TNode<IntPtrT> t1803 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1802)));
      TNode<BoolT> t1804 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1801), implicit_cast<TNode<IntPtrT>>(t1803)));
      USE(implicit_cast<TNode<BoolT>>(t1804));
      Branch(implicit_cast<TNode<BoolT>>(t1804), label__True_501, label__False_502);
      BIND(label__True_501);
            *t1800_884 = implicit_cast<TNode<Object>>(t1795());
      Goto(label__done_885_1503);
      BIND(label__False_502);
            *t1800_884 = implicit_cast<TNode<Object>>(t1796());
      Goto(label__done_885_1503);
      BIND(label__done_885_1503);
    }
    TVARIABLE(Object, offset_304_impl);
    auto offset_304 = &offset_304_impl;
    USE(offset_304);
    *offset_304 = implicit_cast<TNode<Object>>((*t1800_884).value());
    // ../../src/builtins/data-view.tq:809:5
    auto t1805 = [=]() {
      int31_t t1807 = 1;
      TNode<IntPtrT> t1808 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1807)));
      TNode<Object> t1809 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1808)));
      return implicit_cast<TNode<Object>>(t1809);
    };
    auto t1806 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1810_886_impl);
    auto t1810_886 = &t1810_886_impl;
    USE(t1810_886);
    {
      Label label__True_503_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_503 = &label__True_503_impl;
      USE(label__True_503);
      Label label__False_504_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_504 = &label__False_504_impl;
      USE(label__False_504);
      Label label__done_887_1504_impl(this, {t1810_886}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_887_1504 = &label__done_887_1504_impl;
      USE(label__done_887_1504);
      TNode<IntPtrT> t1811 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1812 = 1;
      TNode<IntPtrT> t1813 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1812)));
      TNode<BoolT> t1814 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1811), implicit_cast<TNode<IntPtrT>>(t1813)));
      USE(implicit_cast<TNode<BoolT>>(t1814));
      Branch(implicit_cast<TNode<BoolT>>(t1814), label__True_503, label__False_504);
      BIND(label__True_503);
            *t1810_886 = implicit_cast<TNode<Object>>(t1805());
      Goto(label__done_887_1504);
      BIND(label__False_504);
            *t1810_886 = implicit_cast<TNode<Object>>(t1806());
      Goto(label__done_887_1504);
      BIND(label__done_887_1504);
    }
    TVARIABLE(Object, value_305_impl);
    auto value_305 = &value_305_impl;
    USE(value_305);
    *value_305 = implicit_cast<TNode<Object>>((*t1810_886).value());
    // ../../src/builtins/data-view.tq:810:5
    auto t1815 = [=]() {
      int31_t t1817 = 2;
      TNode<IntPtrT> t1818 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1817)));
      TNode<Object> t1819 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1818)));
      return implicit_cast<TNode<Object>>(t1819);
    };
    auto t1816 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1820_888_impl);
    auto t1820_888 = &t1820_888_impl;
    USE(t1820_888);
    {
      Label label__True_505_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_505 = &label__True_505_impl;
      USE(label__True_505);
      Label label__False_506_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_506 = &label__False_506_impl;
      USE(label__False_506);
      Label label__done_889_1505_impl(this, {t1820_888}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_889_1505 = &label__done_889_1505_impl;
      USE(label__done_889_1505);
      TNode<IntPtrT> t1821 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1822 = 2;
      TNode<IntPtrT> t1823 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1822)));
      TNode<BoolT> t1824 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1821), implicit_cast<TNode<IntPtrT>>(t1823)));
      USE(implicit_cast<TNode<BoolT>>(t1824));
      Branch(implicit_cast<TNode<BoolT>>(t1824), label__True_505, label__False_506);
      BIND(label__True_505);
            *t1820_888 = implicit_cast<TNode<Object>>(t1815());
      Goto(label__done_889_1505);
      BIND(label__False_506);
            *t1820_888 = implicit_cast<TNode<Object>>(t1816());
      Goto(label__done_889_1505);
      BIND(label__done_889_1505);
    }
    TVARIABLE(Object, isLittleEndian_306_impl);
    auto isLittleEndian_306 = &isLittleEndian_306_impl;
    USE(isLittleEndian_306);
    *isLittleEndian_306 = implicit_cast<TNode<Object>>((*t1820_888).value());
    // ../../src/builtins/data-view.tq:812:5
    TNode<Object> t1825 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_304).value()), implicit_cast<TNode<Object>>((*value_305).value()), implicit_cast<TNode<Object>>((*isLittleEndian_306).value()), implicit_cast<ElementsKind>(FLOAT64_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1825));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1825));
  }
}

TF_BUILTIN(DataViewPrototypeSetBigUint64, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:817:65
  {
    // ../../src/builtins/data-view.tq:818:5
    auto t1826 = [=]() {
      int31_t t1828 = 0;
      TNode<IntPtrT> t1829 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1828)));
      TNode<Object> t1830 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1829)));
      return implicit_cast<TNode<Object>>(t1830);
    };
    auto t1827 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1831_890_impl);
    auto t1831_890 = &t1831_890_impl;
    USE(t1831_890);
    {
      Label label__True_507_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_507 = &label__True_507_impl;
      USE(label__True_507);
      Label label__False_508_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_508 = &label__False_508_impl;
      USE(label__False_508);
      Label label__done_891_1506_impl(this, {t1831_890}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_891_1506 = &label__done_891_1506_impl;
      USE(label__done_891_1506);
      TNode<IntPtrT> t1832 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1833 = 0;
      TNode<IntPtrT> t1834 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1833)));
      TNode<BoolT> t1835 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1832), implicit_cast<TNode<IntPtrT>>(t1834)));
      USE(implicit_cast<TNode<BoolT>>(t1835));
      Branch(implicit_cast<TNode<BoolT>>(t1835), label__True_507, label__False_508);
      BIND(label__True_507);
            *t1831_890 = implicit_cast<TNode<Object>>(t1826());
      Goto(label__done_891_1506);
      BIND(label__False_508);
            *t1831_890 = implicit_cast<TNode<Object>>(t1827());
      Goto(label__done_891_1506);
      BIND(label__done_891_1506);
    }
    TVARIABLE(Object, offset_307_impl);
    auto offset_307 = &offset_307_impl;
    USE(offset_307);
    *offset_307 = implicit_cast<TNode<Object>>((*t1831_890).value());
    // ../../src/builtins/data-view.tq:819:5
    auto t1836 = [=]() {
      int31_t t1838 = 1;
      TNode<IntPtrT> t1839 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1838)));
      TNode<Object> t1840 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1839)));
      return implicit_cast<TNode<Object>>(t1840);
    };
    auto t1837 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1841_892_impl);
    auto t1841_892 = &t1841_892_impl;
    USE(t1841_892);
    {
      Label label__True_509_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_509 = &label__True_509_impl;
      USE(label__True_509);
      Label label__False_510_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_510 = &label__False_510_impl;
      USE(label__False_510);
      Label label__done_893_1507_impl(this, {t1841_892}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_893_1507 = &label__done_893_1507_impl;
      USE(label__done_893_1507);
      TNode<IntPtrT> t1842 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1843 = 1;
      TNode<IntPtrT> t1844 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1843)));
      TNode<BoolT> t1845 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1842), implicit_cast<TNode<IntPtrT>>(t1844)));
      USE(implicit_cast<TNode<BoolT>>(t1845));
      Branch(implicit_cast<TNode<BoolT>>(t1845), label__True_509, label__False_510);
      BIND(label__True_509);
            *t1841_892 = implicit_cast<TNode<Object>>(t1836());
      Goto(label__done_893_1507);
      BIND(label__False_510);
            *t1841_892 = implicit_cast<TNode<Object>>(t1837());
      Goto(label__done_893_1507);
      BIND(label__done_893_1507);
    }
    TVARIABLE(Object, value_308_impl);
    auto value_308 = &value_308_impl;
    USE(value_308);
    *value_308 = implicit_cast<TNode<Object>>((*t1841_892).value());
    // ../../src/builtins/data-view.tq:820:5
    auto t1846 = [=]() {
      int31_t t1848 = 2;
      TNode<IntPtrT> t1849 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1848)));
      TNode<Object> t1850 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1849)));
      return implicit_cast<TNode<Object>>(t1850);
    };
    auto t1847 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1851_894_impl);
    auto t1851_894 = &t1851_894_impl;
    USE(t1851_894);
    {
      Label label__True_511_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_511 = &label__True_511_impl;
      USE(label__True_511);
      Label label__False_512_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_512 = &label__False_512_impl;
      USE(label__False_512);
      Label label__done_895_1508_impl(this, {t1851_894}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_895_1508 = &label__done_895_1508_impl;
      USE(label__done_895_1508);
      TNode<IntPtrT> t1852 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1853 = 2;
      TNode<IntPtrT> t1854 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1853)));
      TNode<BoolT> t1855 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1852), implicit_cast<TNode<IntPtrT>>(t1854)));
      USE(implicit_cast<TNode<BoolT>>(t1855));
      Branch(implicit_cast<TNode<BoolT>>(t1855), label__True_511, label__False_512);
      BIND(label__True_511);
            *t1851_894 = implicit_cast<TNode<Object>>(t1846());
      Goto(label__done_895_1508);
      BIND(label__False_512);
            *t1851_894 = implicit_cast<TNode<Object>>(t1847());
      Goto(label__done_895_1508);
      BIND(label__done_895_1508);
    }
    TVARIABLE(Object, isLittleEndian_309_impl);
    auto isLittleEndian_309 = &isLittleEndian_309_impl;
    USE(isLittleEndian_309);
    *isLittleEndian_309 = implicit_cast<TNode<Object>>((*t1851_894).value());
    // ../../src/builtins/data-view.tq:822:5
    TNode<Object> t1856 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_307).value()), implicit_cast<TNode<Object>>((*value_308).value()), implicit_cast<TNode<Object>>((*isLittleEndian_309).value()), implicit_cast<ElementsKind>(BIGUINT64_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1856));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1856));
  }
}

TF_BUILTIN(DataViewPrototypeSetBigInt64, DataViewBuiltinsFromDSLAssembler) {
  TNode<Context> p_context = UncheckedCast<Context>(Parameter(Descriptor::kContext));
  USE(p_context);
  Node* argc = Parameter(Descriptor::kJSActualArgumentsCount);
  CodeStubArguments arguments_impl(this, ChangeInt32ToIntPtr(argc));
  TNode<Object> p_receiver = arguments_impl.GetReceiver();
  auto arguments = &arguments_impl;
  USE(arguments);
  USE(p_receiver);
  // ../../src/builtins/data-view.tq:827:65
  {
    // ../../src/builtins/data-view.tq:828:5
    auto t1857 = [=]() {
      int31_t t1859 = 0;
      TNode<IntPtrT> t1860 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1859)));
      TNode<Object> t1861 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1860)));
      return implicit_cast<TNode<Object>>(t1861);
    };
    auto t1858 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1862_896_impl);
    auto t1862_896 = &t1862_896_impl;
    USE(t1862_896);
    {
      Label label__True_513_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_513 = &label__True_513_impl;
      USE(label__True_513);
      Label label__False_514_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_514 = &label__False_514_impl;
      USE(label__False_514);
      Label label__done_897_1509_impl(this, {t1862_896}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_897_1509 = &label__done_897_1509_impl;
      USE(label__done_897_1509);
      TNode<IntPtrT> t1863 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1864 = 0;
      TNode<IntPtrT> t1865 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1864)));
      TNode<BoolT> t1866 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1863), implicit_cast<TNode<IntPtrT>>(t1865)));
      USE(implicit_cast<TNode<BoolT>>(t1866));
      Branch(implicit_cast<TNode<BoolT>>(t1866), label__True_513, label__False_514);
      BIND(label__True_513);
            *t1862_896 = implicit_cast<TNode<Object>>(t1857());
      Goto(label__done_897_1509);
      BIND(label__False_514);
            *t1862_896 = implicit_cast<TNode<Object>>(t1858());
      Goto(label__done_897_1509);
      BIND(label__done_897_1509);
    }
    TVARIABLE(Object, offset_310_impl);
    auto offset_310 = &offset_310_impl;
    USE(offset_310);
    *offset_310 = implicit_cast<TNode<Object>>((*t1862_896).value());
    // ../../src/builtins/data-view.tq:829:5
    auto t1867 = [=]() {
      int31_t t1869 = 1;
      TNode<IntPtrT> t1870 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1869)));
      TNode<Object> t1871 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1870)));
      return implicit_cast<TNode<Object>>(t1871);
    };
    auto t1868 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1872_898_impl);
    auto t1872_898 = &t1872_898_impl;
    USE(t1872_898);
    {
      Label label__True_515_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_515 = &label__True_515_impl;
      USE(label__True_515);
      Label label__False_516_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_516 = &label__False_516_impl;
      USE(label__False_516);
      Label label__done_899_1510_impl(this, {t1872_898}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_899_1510 = &label__done_899_1510_impl;
      USE(label__done_899_1510);
      TNode<IntPtrT> t1873 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1874 = 1;
      TNode<IntPtrT> t1875 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1874)));
      TNode<BoolT> t1876 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1873), implicit_cast<TNode<IntPtrT>>(t1875)));
      USE(implicit_cast<TNode<BoolT>>(t1876));
      Branch(implicit_cast<TNode<BoolT>>(t1876), label__True_515, label__False_516);
      BIND(label__True_515);
            *t1872_898 = implicit_cast<TNode<Object>>(t1867());
      Goto(label__done_899_1510);
      BIND(label__False_516);
            *t1872_898 = implicit_cast<TNode<Object>>(t1868());
      Goto(label__done_899_1510);
      BIND(label__done_899_1510);
    }
    TVARIABLE(Object, value_311_impl);
    auto value_311 = &value_311_impl;
    USE(value_311);
    *value_311 = implicit_cast<TNode<Object>>((*t1872_898).value());
    // ../../src/builtins/data-view.tq:830:5
    auto t1877 = [=]() {
      int31_t t1879 = 2;
      TNode<IntPtrT> t1880 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1879)));
      TNode<Object> t1881 = UncheckedCast<Object>(GetArgumentValue(implicit_cast<CodeStubArguments*>(arguments), implicit_cast<TNode<IntPtrT>>(t1880)));
      return implicit_cast<TNode<Object>>(t1881);
    };
    auto t1878 = [=]() {
      return implicit_cast<TNode<Oddball>>(Undefined());
    };
    TVARIABLE(Object, t1882_900_impl);
    auto t1882_900 = &t1882_900_impl;
    USE(t1882_900);
    {
      Label label__True_517_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__True_517 = &label__True_517_impl;
      USE(label__True_517);
      Label label__False_518_impl(this, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__False_518 = &label__False_518_impl;
      USE(label__False_518);
      Label label__done_901_1511_impl(this, {t1882_900}, compiler::CodeAssemblerLabel::kNonDeferred);
      Label* label__done_901_1511 = &label__done_901_1511_impl;
      USE(label__done_901_1511);
      TNode<IntPtrT> t1883 = UncheckedCast<IntPtrT>(GetArgumentsLength(implicit_cast<CodeStubArguments*>(arguments)));
      int31_t t1884 = 2;
      TNode<IntPtrT> t1885 = UncheckedCast<IntPtrT>(FromConstexpr8ATintptr(implicit_cast<int31_t>(t1884)));
      TNode<BoolT> t1886 = UncheckedCast<BoolT>(IntPtrGreaterThan(implicit_cast<TNode<IntPtrT>>(t1883), implicit_cast<TNode<IntPtrT>>(t1885)));
      USE(implicit_cast<TNode<BoolT>>(t1886));
      Branch(implicit_cast<TNode<BoolT>>(t1886), label__True_517, label__False_518);
      BIND(label__True_517);
            *t1882_900 = implicit_cast<TNode<Object>>(t1877());
      Goto(label__done_901_1511);
      BIND(label__False_518);
            *t1882_900 = implicit_cast<TNode<Object>>(t1878());
      Goto(label__done_901_1511);
      BIND(label__done_901_1511);
    }
    TVARIABLE(Object, isLittleEndian_312_impl);
    auto isLittleEndian_312 = &isLittleEndian_312_impl;
    USE(isLittleEndian_312);
    *isLittleEndian_312 = implicit_cast<TNode<Object>>((*t1882_900).value());
    // ../../src/builtins/data-view.tq:832:5
    TNode<Object> t1887 = UncheckedCast<Object>(DataViewSet(implicit_cast<TNode<Context>>(p_context), implicit_cast<TNode<Object>>(p_receiver), implicit_cast<TNode<Object>>((*offset_310).value()), implicit_cast<TNode<Object>>((*value_311).value()), implicit_cast<TNode<Object>>((*isLittleEndian_312).value()), implicit_cast<ElementsKind>(BIGINT64_ELEMENTS)));
    USE(implicit_cast<TNode<Object>>(t1887));
    arguments->PopAndReturn(implicit_cast<TNode<Object>>(t1887));
  }
}

}  // namespace internal
}  // namespace v8

